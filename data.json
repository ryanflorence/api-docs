{
  "id": 0,
  "name": "React Router API Reference",
  "variant": "project",
  "kind": 1,
  "flags": {},
  "children": [
    {
      "id": 1,
      "name": "react-router",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 2,
          "name": "createRoutesFromElements",
          "variant": "reference",
          "kind": 4194304,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/index.ts",
              "line": 192,
              "character": 30,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/index.ts#L192"
            }
          ],
          "target": 2451
        },
        {
          "id": 3,
          "name": "NavigationType",
          "variant": "declaration",
          "kind": 8,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Actions represent the type of change to a location value."
              }
            ]
          },
          "children": [
            {
              "id": 4,
              "name": "Pop",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A POP indicates a change to an arbitrary index in the history stack, such\nas a back or forward navigation. It does not describe the direction of the\nnavigation, only that the current index changed.\n\nNote: This is the default action for newly created history objects."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 16,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L16"
                }
              ],
              "type": {
                "type": "literal",
                "value": "POP"
              }
            },
            {
              "id": 5,
              "name": "Push",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A PUSH indicates a new entry being added to the history stack, such as when\na link is clicked and a new page loads. When this happens, all subsequent\nentries in the stack are lost."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 23,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L23"
                }
              ],
              "type": {
                "type": "literal",
                "value": "PUSH"
              }
            },
            {
              "id": 6,
              "name": "Replace",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A REPLACE indicates the entry at the current index in the history stack\nbeing replaced by a new one."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 29,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L29"
                }
              ],
              "type": {
                "type": "literal",
                "value": "REPLACE"
              }
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "children": [4, 5, 6]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 8,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L8"
            }
          ]
        },
        {
          "id": 7,
          "name": "UNSAFE_ServerMode",
          "variant": "declaration",
          "kind": 8,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The mode to use when running the server."
              }
            ]
          },
          "children": [
            {
              "id": 8,
              "name": "Development",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/mode.ts",
                  "line": 5,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/mode.ts#L5"
                }
              ],
              "type": {
                "type": "literal",
                "value": "development"
              }
            },
            {
              "id": 9,
              "name": "Production",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/mode.ts",
                  "line": 6,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/mode.ts#L6"
                }
              ],
              "type": {
                "type": "literal",
                "value": "production"
              }
            },
            {
              "id": 10,
              "name": "Test",
              "variant": "declaration",
              "kind": 16,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/mode.ts",
                  "line": 7,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/mode.ts#L7"
                }
              ],
              "type": {
                "type": "literal",
                "value": "test"
              }
            }
          ],
          "groups": [
            {
              "title": "Enumeration Members",
              "children": [8, 9, 10]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/mode.ts",
              "line": 4,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/mode.ts#L4"
            }
          ]
        },
        {
          "id": 11,
          "name": "AbortedDeferredError",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "children": [
            {
              "id": 12,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1082,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 13,
                  "name": "new AbortedDeferredError",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1082,
                      "character": 4
                    }
                  ],
                  "parameters": [
                    {
                      "id": 14,
                      "name": "message",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 11,
                    "name": "AbortedDeferredError",
                    "package": "react-router"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Error.constructor"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.constructor"
              }
            },
            {
              "id": 15,
              "name": "message",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1077,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.message"
              }
            },
            {
              "id": 16,
              "name": "name",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1076,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.name"
              }
            },
            {
              "id": 17,
              "name": "stack",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1078,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.stack"
              }
            },
            {
              "id": 18,
              "name": "prepareStackTrace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isStatic": true,
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional override for formatting stack traces"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 19,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                      "line": 27,
                      "character": 29
                    }
                  ],
                  "signatures": [
                    {
                      "id": 20,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                          "line": 27,
                          "character": 29
                        }
                      ],
                      "parameters": [
                        {
                          "id": 21,
                          "name": "err",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Error"
                            },
                            "name": "Error",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 22,
                          "name": "stackTraces",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "target": {
                                "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                                "qualifiedName": "__global.NodeJS.CallSite"
                              },
                              "name": "CallSite",
                              "package": "@types/node",
                              "qualifiedName": "__global.NodeJS.CallSite"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.prepareStackTrace"
              }
            },
            {
              "id": 23,
              "name": "stackTraceLimit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isStatic": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                  "line": 29,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.stackTraceLimit"
              }
            },
            {
              "id": 24,
              "name": "captureStackTrace",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isStatic": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                  "line": 20,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 25,
                  "name": "captureStackTrace",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Create .stack property on a target object"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                      "line": 20,
                      "character": 8
                    }
                  ],
                  "parameters": [
                    {
                      "id": 26,
                      "name": "targetObject",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    },
                    {
                      "id": 27,
                      "name": "constructorOpt",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Function"
                        },
                        "name": "Function",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Error.captureStackTrace"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.captureStackTrace"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [12]
            },
            {
              "title": "Properties",
              "children": [15, 16, 17, 18, 23]
            },
            {
              "title": "Methods",
              "children": [24]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1374,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1374"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Error"
              },
              "name": "Error",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 28,
          "name": "MaxPartSizeExceededError",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "children": [
            {
              "id": 29,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
                  "line": 2,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
                }
              ],
              "signatures": [
                {
                  "id": 30,
                  "name": "new MaxPartSizeExceededError",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
                      "line": 2,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 31,
                      "name": "field",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 32,
                      "name": "maxBytes",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 28,
                    "name": "MaxPartSizeExceededError",
                    "package": "react-router"
                  },
                  "overwrites": {
                    "type": "reference",
                    "target": -1,
                    "name": "Error.constructor"
                  }
                }
              ],
              "overwrites": {
                "type": "reference",
                "target": -1,
                "name": "Error.constructor"
              }
            },
            {
              "id": 33,
              "name": "field",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
                  "line": 2,
                  "character": 21,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 34,
              "name": "maxBytes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
                  "line": 2,
                  "character": 43,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/errors.ts#L2"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 35,
              "name": "message",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1077,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.message"
              }
            },
            {
              "id": 36,
              "name": "name",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1076,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.name"
              }
            },
            {
              "id": 37,
              "name": "stack",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1078,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.stack"
              }
            },
            {
              "id": 38,
              "name": "prepareStackTrace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isStatic": true,
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Optional override for formatting stack traces"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://v8.dev/docs/stack-trace-api#customizing-stack-traces"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                  "line": 27,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 39,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {
                    "isExternal": true
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                      "line": 27,
                      "character": 29
                    }
                  ],
                  "signatures": [
                    {
                      "id": 40,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                          "line": 27,
                          "character": 29
                        }
                      ],
                      "parameters": [
                        {
                          "id": 41,
                          "name": "err",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Error"
                            },
                            "name": "Error",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 42,
                          "name": "stackTraces",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isExternal": true
                          },
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "target": {
                                "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                                "qualifiedName": "__global.NodeJS.CallSite"
                              },
                              "name": "CallSite",
                              "package": "@types/node",
                              "qualifiedName": "__global.NodeJS.CallSite"
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.prepareStackTrace"
              }
            },
            {
              "id": 43,
              "name": "stackTraceLimit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isStatic": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                  "line": 29,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.stackTraceLimit"
              }
            },
            {
              "id": 44,
              "name": "captureStackTrace",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isStatic": true,
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                  "line": 20,
                  "character": 8
                }
              ],
              "signatures": [
                {
                  "id": 45,
                  "name": "captureStackTrace",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Create .stack property on a target object"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                      "line": 20,
                      "character": 8
                    }
                  ],
                  "parameters": [
                    {
                      "id": 46,
                      "name": "targetObject",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "object"
                      }
                    },
                    {
                      "id": 47,
                      "name": "constructorOpt",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Function"
                        },
                        "name": "Function",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Error.captureStackTrace"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Error.captureStackTrace"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [29]
            },
            {
              "title": "Properties",
              "children": [33, 34, 35, 36, 37, 38, 43]
            },
            {
              "title": "Methods",
              "children": [44]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
              "line": 1,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/errors.ts#L1"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Error"
              },
              "name": "Error",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 48,
          "name": "UNSAFE_DeferredData",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "children": [
            {
              "id": 49,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1387,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1387"
                }
              ],
              "signatures": [
                {
                  "id": 50,
                  "name": "new UNSAFE_DeferredData",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1387,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1387"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 51,
                      "name": "data",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Record"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        ],
                        "name": "Record",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 52,
                      "name": "responseInit",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "ResponseInit"
                        },
                        "name": "ResponseInit",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 48,
                    "name": "DeferredData",
                    "package": "react-router"
                  }
                }
              ]
            },
            {
              "id": 53,
              "name": "abortPromise",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1379,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1379"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            },
            {
              "id": 54,
              "name": "controller",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1378,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1378"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "AbortController"
                },
                "name": "AbortController",
                "package": "typescript"
              }
            },
            {
              "id": 55,
              "name": "data",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1383,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1383"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "name": "Record",
                "package": "typescript"
              }
            },
            {
              "id": 56,
              "name": "deferredKeys",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1385,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1385"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              },
              "defaultValue": "[]"
            },
            {
              "id": 57,
              "name": "init",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1384,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1384"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "ResponseInit"
                },
                "name": "ResponseInit",
                "package": "typescript"
              }
            },
            {
              "id": 58,
              "name": "pendingKeysSet",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1377,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1377"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
                  "qualifiedName": "Set"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Set",
                "package": "typescript"
              },
              "defaultValue": "..."
            },
            {
              "id": 59,
              "name": "subscribers",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1381,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1381"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.collection.d.ts",
                  "qualifiedName": "Set"
                },
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 60,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 1381,
                          "character": 27,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1381"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 61,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/utils.ts",
                              "line": 1381,
                              "character": 27,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1381"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 62,
                              "name": "aborted",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 63,
                              "name": "settledKey",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {
                                "isOptional": true
                              },
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        }
                      ]
                    }
                  }
                ],
                "name": "Set",
                "package": "typescript"
              },
              "defaultValue": "..."
            },
            {
              "id": 64,
              "name": "unlistenAbortSignal",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1380,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1380"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 65,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1380,
                      "character": 31,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1380"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 66,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 1380,
                          "character": 31,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1380"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 67,
              "name": "done",
              "variant": "declaration",
              "kind": 262144,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1523,
                  "character": 6,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1523"
                }
              ],
              "getSignature": {
                "id": 68,
                "name": "done",
                "variant": "signature",
                "kind": 524288,
                "flags": {},
                "sources": [
                  {
                    "fileName": "packages/react-router/lib/router/utils.ts",
                    "line": 1523,
                    "character": 6,
                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1523"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "boolean"
                }
              }
            },
            {
              "id": 69,
              "name": "pendingKeys",
              "variant": "declaration",
              "kind": 262144,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1542,
                  "character": 6,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1542"
                }
              ],
              "getSignature": {
                "id": 70,
                "name": "pendingKeys",
                "variant": "signature",
                "kind": 524288,
                "flags": {},
                "sources": [
                  {
                    "fileName": "packages/react-router/lib/router/utils.ts",
                    "line": 1542,
                    "character": 6,
                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1542"
                  }
                ],
                "type": {
                  "type": "array",
                  "elementType": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              }
            },
            {
              "id": 71,
              "name": "unwrappedData",
              "variant": "declaration",
              "kind": 262144,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1527,
                  "character": 6,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1527"
                }
              ],
              "getSignature": {
                "id": 72,
                "name": "unwrappedData",
                "variant": "signature",
                "kind": 524288,
                "flags": {},
                "sources": [
                  {
                    "fileName": "packages/react-router/lib/router/utils.ts",
                    "line": 1527,
                    "character": 6,
                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1527"
                  }
                ],
                "type": {
                  "type": "reflection",
                  "declaration": {
                    "id": 73,
                    "name": "__type",
                    "variant": "declaration",
                    "kind": 65536,
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "packages/react-router/lib/router/utils.ts",
                        "line": 1538,
                        "character": 6,
                        "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1538"
                      }
                    ]
                  }
                }
              }
            },
            {
              "id": 74,
              "name": "cancel",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1500,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1500"
                }
              ],
              "signatures": [
                {
                  "id": 75,
                  "name": "cancel",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1500,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1500"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 76,
              "name": "emit",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1491,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1491"
                }
              ],
              "signatures": [
                {
                  "id": 77,
                  "name": "emit",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1491,
                      "character": 10,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1491"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 78,
                      "name": "aborted",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 79,
                      "name": "settledKey",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 80,
              "name": "onSettle",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1446,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1446"
                }
              ],
              "signatures": [
                {
                  "id": 81,
                  "name": "onSettle",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1446,
                      "character": 10,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1446"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 82,
                      "name": "promise",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 1788,
                        "name": "TrackedPromise",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 83,
                      "name": "key",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 84,
                      "name": "error",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    },
                    {
                      "id": 85,
                      "name": "data",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ]
            },
            {
              "id": 86,
              "name": "resolveData",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1506,
                  "character": 8,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1506"
                }
              ],
              "signatures": [
                {
                  "id": 87,
                  "name": "resolveData",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1506,
                      "character": 8,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1506"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 88,
                      "name": "signal",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "AbortSignal"
                        },
                        "name": "AbortSignal",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 89,
              "name": "subscribe",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1495,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1495"
                }
              ],
              "signatures": [
                {
                  "id": 90,
                  "name": "subscribe",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1495,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1495"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 91,
                      "name": "fn",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 92,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/utils.ts",
                              "line": 1495,
                              "character": 16,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1495"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 93,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/utils.ts",
                                  "line": 1495,
                                  "character": 16,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1495"
                                }
                              ],
                              "parameters": [
                                {
                                  "id": 94,
                                  "name": "aborted",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "boolean"
                                  }
                                },
                                {
                                  "id": 95,
                                  "name": "settledKey",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 96,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 1497,
                          "character": 11,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1497"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 97,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/utils.ts",
                              "line": 1497,
                              "character": 11,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1497"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ]
                    }
                  }
                }
              ]
            },
            {
              "id": 98,
              "name": "trackPromise",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1420,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1420"
                }
              ],
              "signatures": [
                {
                  "id": 99,
                  "name": "trackPromise",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1420,
                      "character": 10,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1420"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 100,
                      "name": "key",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 101,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [49]
            },
            {
              "title": "Properties",
              "children": [53, 54, 55, 56, 57, 58, 59, 64]
            },
            {
              "title": "Accessors",
              "children": [67, 69, 71]
            },
            {
              "title": "Methods",
              "children": [74, 76, 80, 86, 89, 98]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1376,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1376"
            }
          ]
        },
        {
          "id": 102,
          "name": "UNSAFE_ErrorResponseImpl",
          "variant": "declaration",
          "kind": 128,
          "flags": {
            "isPrivate": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Utility class we use to hold auto-unwrapped 4xx/5xx Response bodies\n\nWe don't export the class for public use since it's an implementation\ndetail, but we export the interface above so folks can build their own\nabstractions around instances via isRouteErrorResponse()"
              }
            ]
          },
          "children": [
            {
              "id": 103,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1640,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1640"
                }
              ],
              "signatures": [
                {
                  "id": 104,
                  "name": "new UNSAFE_ErrorResponseImpl",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1640,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1640"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 105,
                      "name": "status",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 106,
                      "name": "statusText",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    },
                    {
                      "id": 107,
                      "name": "data",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 108,
                      "name": "internal",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      "defaultValue": "false"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 102,
                    "name": "ErrorResponseImpl",
                    "package": "react-router"
                  }
                }
              ]
            },
            {
              "id": 109,
              "name": "data",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1636,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1636"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "ErrorResponse.data"
              }
            },
            {
              "id": 110,
              "name": "error",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1637,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1637"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Error"
                },
                "name": "Error",
                "package": "typescript"
              }
            },
            {
              "id": 111,
              "name": "internal",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1638,
                  "character": 10,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1638"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 112,
              "name": "status",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1634,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1634"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "ErrorResponse.status"
              }
            },
            {
              "id": 113,
              "name": "statusText",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1635,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1635"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "ErrorResponse.statusText"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [103]
            },
            {
              "title": "Properties",
              "children": [109, 110, 111, 112, 113]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1633,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1633"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "target": 2016,
              "name": "ErrorResponse",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 114,
          "name": "ActionFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Route action function signature"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 185,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L185"
            }
          ],
          "typeParameters": [
            {
              "id": 115,
              "name": "Context",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "signatures": [
            {
              "id": 116,
              "name": "ActionFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 186,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L186"
                }
              ],
              "parameters": [
                {
                  "id": 117,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 119,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 115,
                        "name": "Context",
                        "package": "react-router",
                        "qualifiedName": "ActionFunction.Context",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "ActionFunctionArgs",
                    "package": "react-router"
                  }
                },
                {
                  "id": 118,
                  "name": "handlerCtx",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "DataFunctionReturnValue"
                },
                "name": "DataFunctionReturnValue",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 119,
          "name": "ActionFunctionArgs",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Arguments passed to action functions"
              }
            ]
          },
          "children": [
            {
              "id": 120,
              "name": "context",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 144,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L144"
                }
              ],
              "type": {
                "type": "reference",
                "target": 123,
                "name": "Context",
                "package": "react-router",
                "qualifiedName": "ActionFunctionArgs.Context",
                "refersToTypeParameter": true
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.context"
              }
            },
            {
              "id": 121,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 143,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L143"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.params"
              }
            },
            {
              "id": 122,
              "name": "request",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 142,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L142"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Request"
                },
                "name": "Request",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.request"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [120, 121, 122]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 160,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L160"
            }
          ],
          "typeParameters": [
            {
              "id": 123,
              "name": "Context",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                "qualifiedName": "DataFunctionArgs"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 123,
                  "name": "Context",
                  "package": "react-router",
                  "qualifiedName": "ActionFunctionArgs.Context",
                  "refersToTypeParameter": true
                }
              ],
              "name": "DataFunctionArgs",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 124,
          "name": "AgnosticDataRouteMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A RouteMatch contains info about how a route matched a URL."
              }
            ]
          },
          "children": [
            {
              "id": 125,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The names and values of dynamic parameters in the URL."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 421,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L421"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 130,
                "name": "AgnosticRouteMatch.params"
              }
            },
            {
              "id": 126,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 425,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L425"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 131,
                "name": "AgnosticRouteMatch.pathname"
              }
            },
            {
              "id": 127,
              "name": "pathnameBase",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched before child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 429,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L429"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 132,
                "name": "AgnosticRouteMatch.pathnameBase"
              }
            },
            {
              "id": 128,
              "name": "route",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The route object that was used to match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 433,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L433"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1930,
                "name": "AgnosticDataRouteObject",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 133,
                "name": "AgnosticRouteMatch.route"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [125, 126, 127, 128]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 436,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L436"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 129,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "target": 1930,
                  "name": "AgnosticDataRouteObject",
                  "package": "react-router"
                }
              ],
              "name": "AgnosticRouteMatch",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 129,
          "name": "AgnosticRouteMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A RouteMatch contains info about how a route matched a URL."
              }
            ]
          },
          "children": [
            {
              "id": 130,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The names and values of dynamic parameters in the URL."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 421,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L421"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 134,
                    "name": "ParamKey",
                    "package": "react-router",
                    "qualifiedName": "AgnosticRouteMatch.ParamKey",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "Params",
                "package": "react-router"
              }
            },
            {
              "id": 131,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 425,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L425"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 132,
              "name": "pathnameBase",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched before child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 429,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L429"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 133,
              "name": "route",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The route object that was used to match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 433,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L433"
                }
              ],
              "type": {
                "type": "reference",
                "target": 135,
                "name": "RouteObjectType",
                "package": "react-router",
                "qualifiedName": "AgnosticRouteMatch.RouteObjectType",
                "refersToTypeParameter": true
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [130, 131, 132, 133]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 414,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L414"
            }
          ],
          "typeParameters": [
            {
              "id": 134,
              "name": "ParamKey",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "default": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 135,
              "name": "RouteObjectType",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": 1939,
                "name": "AgnosticRouteObject",
                "package": "react-router"
              },
              "default": {
                "type": "reference",
                "target": 1939,
                "name": "AgnosticRouteObject",
                "package": "react-router"
              }
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "target": 1892,
              "name": "unstable_DataStrategyMatch"
            },
            {
              "type": "reference",
              "target": 1600,
              "name": "RouteMatch"
            },
            {
              "type": "reference",
              "target": 124,
              "name": "AgnosticDataRouteMatch"
            }
          ]
        },
        {
          "id": 136,
          "name": "AppLoadContext",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An object of unknown type for route loaders and actions provided by the\nserver's "
              },
              {
                "kind": "code",
                "text": "`getLoadContext()`"
              },
              {
                "kind": "text",
                "text": " function.  This is defined as an empty interface\nspecifically so apps can leverage declaration merging to augment this type\nglobally: https://www.typescriptlang.org/docs/handbook/declaration-merging.html"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/data.ts",
              "line": 16,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/data.ts#L16"
            }
          ],
          "indexSignature": {
            "id": 137,
            "name": "__index",
            "variant": "signature",
            "kind": 8192,
            "flags": {},
            "sources": [
              {
                "fileName": "packages/react-router/lib/server-runtime/data.ts",
                "line": 17,
                "character": 2,
                "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/data.ts#L17"
              }
            ],
            "parameters": [
              {
                "id": 138,
                "name": "key",
                "variant": "param",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "unknown"
            }
          }
        },
        {
          "id": 139,
          "name": "AwaitProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 140,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "When using a function, the resolved value is provided as the parameter.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx [2]\n<Await resolve={reviewsPromise}>\n  {(resolvedReviews) => <Reviews items={resolvedReviews} />}\n</Await>\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nWhen using React elements, "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useAsyncValue",
                    "target": 2591,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " will provide the\nresolved value:\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx [2]\n<Await resolve={reviewsPromise}>\n  <Reviews />\n</Await>\n\nfunction Reviews() {\n  const resolvedReviews = useAsyncValue()\n  return <div>...</div>\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 544,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L544"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactNode"
                    },
                    "name": "ReactNode",
                    "package": "@types/react",
                    "qualifiedName": "React.ReactNode"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/components.tsx",
                      "qualifiedName": "AwaitResolveRenderFunction"
                    },
                    "name": "AwaitResolveRenderFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 141,
              "name": "errorElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The error element renders instead of the children when the promise rejects.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Await\n  errorElement={<div>Oops</div>}\n  resolve={reviewsPromise}\n>\n  <Reviews />\n</Await>\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nTo provide a more contextual error, you can use the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useAsyncError",
                    "target": 2589
                  },
                  {
                    "kind": "text",
                    "text": " in a\nchild component\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Await\n  errorElement={<ReviewsError />}\n  resolve={reviewsPromise}\n>\n  <Reviews />\n</Await>\n\nfunction ReviewsError() {\n  const error = useAsyncError()\n  return <div>Error loading reviews: {error.message}</div>\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nIf you do not provide an errorElement, the rejected value will bubble up to\nthe nearest route-level "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "ErrorBoundary",
                    "target": 1528,
                    "tsLinkText": "ErrorBoundary"
                  },
                  {
                    "kind": "text",
                    "text": " and be accessible\nvia "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useRouteError",
                    "target": 2682
                  },
                  {
                    "kind": "text",
                    "text": " hook."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 579,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L579"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 142,
              "name": "resolve",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Takes a promise returned from a "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "loader",
                    "target": 2100
                  },
                  {
                    "kind": "text",
                    "text": " value to be resolved and rendered.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```jsx\nimport { useLoaderData, Await } from \"react-router\"\n\nexport async function loader() {\n  let reviews = getReviews() // not awaited\n  let book = await getBook()\n  return {\n    book,\n    reviews, // this is a promise\n  }\n}\n\nexport default function Book() {\n  const {\n    book,\n    reviews, // this is the same promise\n  } = useLoaderData()\n\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          // and is the promise we pass to Await\n          resolve={reviews}\n        >\n          <Reviews />\n        </Await>\n      </React.Suspense>\n    </div>\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 619,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L619"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [140, 141, 142]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 520,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L520"
            }
          ]
        },
        {
          "id": 143,
          "name": "BrowserRouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 144,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 564,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L564"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 145,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 565,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L565"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 146,
              "name": "window",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 566,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L566"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Window"
                },
                "name": "Window",
                "package": "typescript"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [144, 145, 146]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 563,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L563"
            }
          ]
        },
        {
          "id": 147,
          "name": "Cookie",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A HTTP cookie.\n\nA Cookie is a logical container for metadata about a HTTP cookie; its name\nand options. But it doesn't contain a value. Instead, it has "
              },
              {
                "kind": "code",
                "text": "`parse()`"
              },
              {
                "kind": "text",
                "text": " and\n"
              },
              {
                "kind": "code",
                "text": "`serialize()`"
              },
              {
                "kind": "text",
                "text": " methods that allow a single instance to be reused for\nparsing/encoding multiple different values."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://remix.run/utils/cookies#cookie-api"
                  }
                ]
              }
            ]
          },
          "children": [
            {
              "id": 148,
              "name": "expires",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true,
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The Date this cookie expires.\n\nNote: This is calculated at access time using "
                  },
                  {
                    "kind": "code",
                    "text": "`maxAge`"
                  },
                  {
                    "kind": "text",
                    "text": " when no "
                  },
                  {
                    "kind": "code",
                    "text": "`expires`"
                  },
                  {
                    "kind": "text",
                    "text": "\noption is provided to "
                  },
                  {
                    "kind": "code",
                    "text": "`createCookie()`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 52,
                  "character": 11,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L52"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Date"
                },
                "name": "Date",
                "package": "typescript"
              }
            },
            {
              "id": 149,
              "name": "isSigned",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "True if this cookie uses one or more secrets for verification."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 44,
                  "character": 11,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L44"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 150,
              "name": "name",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The name of the cookie, used in the "
                  },
                  {
                    "kind": "code",
                    "text": "`Cookie`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`Set-Cookie`"
                  },
                  {
                    "kind": "text",
                    "text": " headers."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 39,
                  "character": 11,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L39"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 151,
              "name": "parse",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 58,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L58"
                }
              ],
              "signatures": [
                {
                  "id": 152,
                  "name": "parse",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Parses a raw "
                      },
                      {
                        "kind": "code",
                        "text": "`Cookie`"
                      },
                      {
                        "kind": "text",
                        "text": " header and returns the value of this cookie or\n"
                      },
                      {
                        "kind": "code",
                        "text": "`null`"
                      },
                      {
                        "kind": "text",
                        "text": " if it's not present."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                      "line": 58,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L58"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 153,
                      "name": "cookieHeader",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    },
                    {
                      "id": 154,
                      "name": "options",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 159,
                        "name": "CookieParseOptions",
                        "package": "@types/cookie"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 155,
              "name": "serialize",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 67,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L67"
                }
              ],
              "signatures": [
                {
                  "id": 156,
                  "name": "serialize",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Serializes the given value to a string and returns the "
                      },
                      {
                        "kind": "code",
                        "text": "`Set-Cookie`"
                      },
                      {
                        "kind": "text",
                        "text": "\nheader."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                      "line": 67,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L67"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 157,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 158,
                      "name": "options",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 163,
                        "name": "CookieSerializeOptions",
                        "package": "@types/cookie"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [148, 149, 150]
            },
            {
              "title": "Methods",
              "children": [151, 155]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 35,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L35"
            }
          ]
        },
        {
          "id": 159,
          "name": "CookieParseOptions",
          "variant": "declaration",
          "kind": 256,
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional parsing options"
              }
            ]
          },
          "children": [
            {
              "id": 160,
              "name": "decode",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 134,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 161,
                  "name": "decode",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Specifies a function that will be used to decode a cookie's value. Since\nthe value of a cookie has a limited character set (and must be a simple\nstring), this function can be used to decode a previously-encoded cookie\nvalue into a JavaScript string or other object.\n\nThe default function is the global "
                      },
                      {
                        "kind": "code",
                        "text": "`decodeURIComponent`"
                      },
                      {
                        "kind": "text",
                        "text": ", which will decode\nany URL-encoded sequences into their byte representations.\n\n*Note* if an error is thrown from this function, the original, non-decoded\ncookie value will be returned as the cookie's value."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                      "line": 134,
                      "character": 4
                    }
                  ],
                  "parameters": [
                    {
                      "id": 162,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Methods",
              "children": [160]
            }
          ],
          "sources": [
            {
              "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
              "line": 121,
              "character": 17
            }
          ]
        },
        {
          "id": 163,
          "name": "CookieSerializeOptions",
          "variant": "declaration",
          "kind": 256,
          "flags": {
            "isExternal": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Additional serialization options"
              }
            ]
          },
          "children": [
            {
              "id": 164,
              "name": "domain",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the value for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Set-Cookie attribute",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.2.3|Domain"
                  },
                  {
                    "kind": "text",
                    "text": ". By default, no\ndomain is set, and most clients will consider the cookie to apply to only\nthe current domain."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 14,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 165,
              "name": "expires",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the "
                  },
                  {
                    "kind": "code",
                    "text": "`Date`"
                  },
                  {
                    "kind": "text",
                    "text": " object to be the value for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`Set-Cookie` attribute",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.2.1|`Expires`"
                  },
                  {
                    "kind": "text",
                    "text": ". By default,\nno expiration is set, and most clients will consider this a \"non-persistent cookie\" and will delete\nit on a condition like exiting a web browser application.\n\n*Note* the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "storage model specification",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.3|cookie"
                  },
                  {
                    "kind": "text",
                    "text": "\nstates that if both "
                  },
                  {
                    "kind": "code",
                    "text": "`expires`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`maxAge`"
                  },
                  {
                    "kind": "text",
                    "text": " are set, then "
                  },
                  {
                    "kind": "code",
                    "text": "`maxAge`"
                  },
                  {
                    "kind": "text",
                    "text": " takes precedence, but it is\npossible not all clients by obey this, so if both are set, they should\npoint to the same date and time."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 38,
                  "character": 4
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Date"
                },
                "name": "Date",
                "package": "typescript"
              }
            },
            {
              "id": 166,
              "name": "httpOnly",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the boolean value for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`Set-Cookie` attribute",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.2.6|`HttpOnly`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nWhen truthy, the "
                  },
                  {
                    "kind": "code",
                    "text": "`HttpOnly`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute is set, otherwise it is not. By\ndefault, the "
                  },
                  {
                    "kind": "code",
                    "text": "`HttpOnly`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute is not set.\n\n*Note* be careful when setting this to true, as compliant clients will\nnot allow client-side JavaScript to see the cookie in "
                  },
                  {
                    "kind": "code",
                    "text": "`document.cookie`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 47,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 167,
              "name": "maxAge",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the number (in seconds) to be the value for the "
                  },
                  {
                    "kind": "code",
                    "text": "`Max-Age`"
                  },
                  {
                    "kind": "text",
                    "text": "\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Set-Cookie`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute. The given number will be converted to an integer\nby rounding down. By default, no maximum age is set.\n\n*Note* the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "storage model specification",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.3|cookie"
                  },
                  {
                    "kind": "text",
                    "text": "\nstates that if both "
                  },
                  {
                    "kind": "code",
                    "text": "`expires`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`maxAge`"
                  },
                  {
                    "kind": "text",
                    "text": " are set, then "
                  },
                  {
                    "kind": "code",
                    "text": "`maxAge`"
                  },
                  {
                    "kind": "text",
                    "text": " takes precedence, but it is\npossible not all clients by obey this, so if both are set, they should\npoint to the same date and time."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 58,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 168,
              "name": "partitioned",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the "
                  },
                  {
                    "kind": "code",
                    "text": "`boolean`"
                  },
                  {
                    "kind": "text",
                    "text": " value for the ["
                  },
                  {
                    "kind": "code",
                    "text": "`Partitioned`"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "code",
                    "text": "`Set-Cookie`"
                  },
                  {
                    "kind": "text",
                    "text": "](rfc-cutler-httpbis-partitioned-cookies)\nattribute. When truthy, the "
                  },
                  {
                    "kind": "code",
                    "text": "`Partitioned`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute is set, otherwise it is not. By default, the\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Partitioned`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute is not set.\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it.\n\nMore information about can be found in [the proposal](https://github.com/privacycg/CHIPS)"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 69,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 169,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the value for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`Set-Cookie` attribute",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.2.4|`Path`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nBy default, the path is considered the \"default path\"."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 74,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 170,
              "name": "priority",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the "
                  },
                  {
                    "kind": "code",
                    "text": "`string`"
                  },
                  {
                    "kind": "text",
                    "text": " to be the value for the ["
                  },
                  {
                    "kind": "code",
                    "text": "`Priority`"
                  },
                  {
                    "kind": "text",
                    "text": " "
                  },
                  {
                    "kind": "code",
                    "text": "`Set-Cookie`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute][rfc-west-cookie-priority-00-4.1].\n\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`'low'`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the "
                  },
                  {
                    "kind": "code",
                    "text": "`Priority`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute to "
                  },
                  {
                    "kind": "code",
                    "text": "`Low`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`'medium'`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the "
                  },
                  {
                    "kind": "code",
                    "text": "`Priority`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute to "
                  },
                  {
                    "kind": "code",
                    "text": "`Medium`"
                  },
                  {
                    "kind": "text",
                    "text": ", the default priority when not set.\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`'high'`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the "
                  },
                  {
                    "kind": "code",
                    "text": "`Priority`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute to "
                  },
                  {
                    "kind": "code",
                    "text": "`High`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nMore information about the different priority levels can be found in\n[the specification][rfc-west-cookie-priority-00-4.1].\n\n**note** This is an attribute that has not yet been fully standardized, and may change in the future.\nThis also means many clients may ignore this attribute until they understand it."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 88,
                  "character": 4
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "high"
                  },
                  {
                    "type": "literal",
                    "value": "low"
                  },
                  {
                    "type": "literal",
                    "value": "medium"
                  }
                ]
              }
            },
            {
              "id": 171,
              "name": "sameSite",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the boolean or string to be the value for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`Set-Cookie` attribute",
                    "target": "https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7|`SameSite`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the "
                  },
                  {
                    "kind": "code",
                    "text": "`SameSite`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute to "
                  },
                  {
                    "kind": "code",
                    "text": "`Strict`"
                  },
                  {
                    "kind": "text",
                    "text": " for strict same\nsite enforcement.\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`false`"
                  },
                  {
                    "kind": "text",
                    "text": " will not set the "
                  },
                  {
                    "kind": "code",
                    "text": "`SameSite`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute.\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`'lax'`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the "
                  },
                  {
                    "kind": "code",
                    "text": "`SameSite`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute to Lax for lax same site\nenforcement.\n- "
                  },
                  {
                    "kind": "code",
                    "text": "`'strict'`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the "
                  },
                  {
                    "kind": "code",
                    "text": "`SameSite`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute to Strict for strict same\nsite enforcement.\n - "
                  },
                  {
                    "kind": "code",
                    "text": "`'none'`"
                  },
                  {
                    "kind": "text",
                    "text": " will set the SameSite attribute to None for an explicit\n cross-site cookie.\n\nMore information about the different enforcement levels can be found in "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "specification",
                    "target": "https://tools.ietf.org/html/draft-ietf-httpbis-rfc6265bis-03#section-4.1.2.7|the"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n*note* This is an attribute that has not yet been fully standardized, and may change in the future. This also means many clients may ignore this attribute until they understand it."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 106,
                  "character": 4
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "strict"
                  },
                  {
                    "type": "literal",
                    "value": "lax"
                  }
                ]
              }
            },
            {
              "id": 172,
              "name": "secure",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specifies the boolean value for the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`Set-Cookie` attribute",
                    "target": "https://tools.ietf.org/html/rfc6265#section-5.2.5|`Secure`"
                  },
                  {
                    "kind": "text",
                    "text": ". When truthy, the\n"
                  },
                  {
                    "kind": "code",
                    "text": "`Secure`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute is set, otherwise it is not. By default, the "
                  },
                  {
                    "kind": "code",
                    "text": "`Secure`"
                  },
                  {
                    "kind": "text",
                    "text": " attribute is not set.\n\n*Note* be careful when setting this to "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": ", as compliant clients will\nnot send the cookie back to the server in the future if the browser does\nnot have an HTTPS connection."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 115,
                  "character": 4
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 173,
              "name": "encode",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                  "line": 26,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 174,
                  "name": "encode",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Specifies a function that will be used to encode a cookie's value. Since\nvalue of a cookie has a limited character set (and must be a simple\nstring), this function can be used to encode a value into a string suited\nfor a cookie's value.\n\nThe default function is the global "
                      },
                      {
                        "kind": "code",
                        "text": "`encodeURIComponent`"
                      },
                      {
                        "kind": "text",
                        "text": ", which will\nencode a JavaScript string into UTF-8 byte sequences and then URL-encode\nany that fall outside of the cookie range."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
                      "line": 26,
                      "character": 4
                    }
                  ],
                  "parameters": [
                    {
                      "id": 175,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [164, 165, 166, 167, 168, 169, 170, 171, 172]
            },
            {
              "title": "Methods",
              "children": [173]
            }
          ],
          "sources": [
            {
              "fileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
              "line": 8,
              "character": 17
            }
          ]
        },
        {
          "id": 176,
          "name": "CookieSignatureOptions",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 177,
              "name": "secrets",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "An array of secrets that may be used to sign/unsign the value of a cookie.\n\nThe array makes it easy to rotate secrets. New secrets should be added to\nthe beginning of the array. "
                  },
                  {
                    "kind": "code",
                    "text": "`cookie.serialize()`"
                  },
                  {
                    "kind": "text",
                    "text": " will always use the first\nvalue in the array, but "
                  },
                  {
                    "kind": "code",
                    "text": "`cookie.parse()`"
                  },
                  {
                    "kind": "text",
                    "text": " may use any of them so that\ncookies that were signed with older secrets still work."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 18,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L18"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [177]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 9,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L9"
            }
          ]
        },
        {
          "id": 178,
          "name": "DataRouteMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A RouteMatch contains info about how a route matched a URL."
              }
            ]
          },
          "children": [
            {
              "id": 179,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The names and values of dynamic parameters in the URL."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 421,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L421"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1601,
                "name": "RouteMatch.params"
              }
            },
            {
              "id": 180,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 425,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L425"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1602,
                "name": "RouteMatch.pathname"
              }
            },
            {
              "id": 181,
              "name": "pathnameBase",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched before child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 429,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L429"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1603,
                "name": "RouteMatch.pathnameBase"
              }
            },
            {
              "id": 182,
              "name": "route",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The route object that was used to match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 433,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L433"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2012,
                "name": "DataRouteObject",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1604,
                "name": "RouteMatch.route"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [179, 180, 181, 182]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 71,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L71"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 1600,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "target": 2012,
                  "name": "DataRouteObject",
                  "package": "react-router"
                }
              ],
              "name": "RouteMatch",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 183,
          "name": "EntryContext",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 184,
              "name": "abortDelay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 19,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L19"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1852,
                "name": "FrameworkContextObject.abortDelay"
              }
            },
            {
              "id": 185,
              "name": "criticalCss",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 15,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L15"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1853,
                "name": "FrameworkContextObject.criticalCss"
              }
            },
            {
              "id": 186,
              "name": "future",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 17,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L17"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1872,
                "name": "FutureConfig",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1854,
                "name": "FrameworkContextObject.future"
              }
            },
            {
              "id": 187,
              "name": "isSpaMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 18,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L18"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1855,
                "name": "FrameworkContextObject.isSpaMode"
              }
            },
            {
              "id": 188,
              "name": "manifest",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 13,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L13"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1825,
                "name": "AssetsManifest",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1856,
                "name": "FrameworkContextObject.manifest"
              }
            },
            {
              "id": 189,
              "name": "renderMeta",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 21,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L21"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 190,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 191,
                      "name": "didRenderScripts",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 22,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L22"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 192,
                      "name": "streamCache",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 23,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L23"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Record"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          {
                            "type": "intersection",
                            "types": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 193,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 194,
                                      "name": "error",
                                      "variant": "declaration",
                                      "kind": 1024,
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                          "line": 30,
                                          "character": 8,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L30"
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                      }
                                    },
                                    {
                                      "id": 195,
                                      "name": "result",
                                      "variant": "declaration",
                                      "kind": 1024,
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                          "line": 26,
                                          "character": 8,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L26"
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 196,
                                          "name": "__type",
                                          "variant": "declaration",
                                          "kind": 65536,
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 197,
                                              "name": "done",
                                              "variant": "declaration",
                                              "kind": 1024,
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                                  "line": 27,
                                                  "character": 10,
                                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L27"
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            },
                                            {
                                              "id": 198,
                                              "name": "value",
                                              "variant": "declaration",
                                              "kind": 1024,
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                                  "line": 28,
                                                  "character": 10,
                                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L28"
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "children": [197, 198]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                              "line": 26,
                                              "character": 17,
                                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L26"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "children": [194, 195]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                      "line": 25,
                                      "character": 22,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L25"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "name": "Record",
                        "package": "typescript"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [191, 192]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "line": 21,
                      "character": 15,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L21"
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1857,
                "name": "FrameworkContextObject.renderMeta"
              }
            },
            {
              "id": 199,
              "name": "routeModules",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 14,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L14"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1880,
                "name": "RouteModules",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1867,
                "name": "FrameworkContextObject.routeModules"
              }
            },
            {
              "id": 200,
              "name": "serverHandoffStream",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 40,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L40"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "ReadableStream"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Uint8Array"
                    },
                    "name": "Uint8Array",
                    "package": "typescript"
                  }
                ],
                "name": "ReadableStream",
                "package": "typescript"
              }
            },
            {
              "id": 201,
              "name": "serverHandoffString",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 16,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L16"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1868,
                "name": "FrameworkContextObject.serverHandoffString"
              }
            },
            {
              "id": 202,
              "name": "staticHandlerContext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 39,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L39"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1751,
                "name": "StaticHandlerContext",
                "package": "react-router"
              }
            },
            {
              "id": 203,
              "name": "serializeError",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 20,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L20"
                }
              ],
              "signatures": [
                {
                  "id": 204,
                  "name": "serializeError",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "line": 20,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L20"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 205,
                      "name": "error",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Error"
                        },
                        "name": "Error",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "qualifiedName": "SerializedError"
                    },
                    "name": "SerializedError",
                    "package": "react-router"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": 1870,
                    "name": "FrameworkContextObject.serializeError"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": 1869,
                "name": "FrameworkContextObject.serializeError"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [184, 185, 186, 187, 188, 189, 199, 200, 201, 202]
            },
            {
              "title": "Methods",
              "children": [203]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
              "line": 38,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L38"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 1851,
              "name": "FrameworkContextObject",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 206,
          "name": "FetcherFormProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Form props available to fetchers"
              }
            ]
          },
          "children": [
            {
              "id": 207,
              "name": "about",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1953,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.about"
              }
            },
            {
              "id": 208,
              "name": "acceptCharset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2227,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.acceptCharset"
              }
            },
            {
              "id": 209,
              "name": "accessKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1927,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.accessKey"
              }
            },
            {
              "id": 210,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The URL to submit the form data to.  If "
                  },
                  {
                    "kind": "code",
                    "text": "`undefined`"
                  },
                  {
                    "kind": "text",
                    "text": ", this defaults to the closest route in context."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1257,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1257"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.action"
              }
            },
            {
              "id": 211,
              "name": "aria-activedescendant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1636,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-activedescendant"
              }
            },
            {
              "id": 212,
              "name": "aria-atomic",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1638,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-atomic"
              }
            },
            {
              "id": 213,
              "name": "aria-autocomplete",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1643,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "list"
                  },
                  {
                    "type": "literal",
                    "value": "inline"
                  },
                  {
                    "type": "literal",
                    "value": "both"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-autocomplete"
              }
            },
            {
              "id": 214,
              "name": "aria-braillelabel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-label."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1649,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-braillelabel"
              }
            },
            {
              "id": 215,
              "name": "aria-brailleroledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-roledescription."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1654,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-brailleroledescription"
              }
            },
            {
              "id": 216,
              "name": "aria-busy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1655,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-busy"
              }
            },
            {
              "id": 217,
              "name": "aria-checked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1660,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-checked"
              }
            },
            {
              "id": 218,
              "name": "aria-colcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of columns in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1665,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colcount"
              }
            },
            {
              "id": 219,
              "name": "aria-colindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1670,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colindex"
              }
            },
            {
              "id": 220,
              "name": "aria-colindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-colindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1675,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colindextext"
              }
            },
            {
              "id": 221,
              "name": "aria-colspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1680,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colspan"
              }
            },
            {
              "id": 222,
              "name": "aria-controls",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-owns."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1685,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-controls"
              }
            },
            {
              "id": 223,
              "name": "aria-current",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the element that represents the current item within a container or set of related elements."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1687,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "time"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "location"
                  },
                  {
                    "type": "literal",
                    "value": "page"
                  },
                  {
                    "type": "literal",
                    "value": "step"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "date"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-current"
              }
            },
            {
              "id": 224,
              "name": "aria-describedby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that describes the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1692,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-describedby"
              }
            },
            {
              "id": 225,
              "name": "aria-description",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that describes or annotates the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "related aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1697,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-description"
              }
            },
            {
              "id": 226,
              "name": "aria-details",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides a detailed, extended description for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1702,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-details"
              }
            },
            {
              "id": 227,
              "name": "aria-disabled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-hidden"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-readonly."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1707,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-disabled"
              }
            },
            {
              "id": 228,
              "name": "aria-dropeffect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1712,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "link"
                  },
                  {
                    "type": "literal",
                    "value": "copy"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "execute"
                  },
                  {
                    "type": "literal",
                    "value": "move"
                  },
                  {
                    "type": "literal",
                    "value": "popup"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-dropeffect"
              }
            },
            {
              "id": 229,
              "name": "aria-errormessage",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides an error message for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-invalid"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1717,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-errormessage"
              }
            },
            {
              "id": 230,
              "name": "aria-expanded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1719,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-expanded"
              }
            },
            {
              "id": 231,
              "name": "aria-flowto",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1724,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-flowto"
              }
            },
            {
              "id": 232,
              "name": "aria-grabbed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1729,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-grabbed"
              }
            },
            {
              "id": 233,
              "name": "aria-haspopup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1731,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "dialog"
                  },
                  {
                    "type": "literal",
                    "value": "menu"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grid"
                  },
                  {
                    "type": "literal",
                    "value": "listbox"
                  },
                  {
                    "type": "literal",
                    "value": "tree"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-haspopup"
              }
            },
            {
              "id": 234,
              "name": "aria-hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element is exposed to an accessibility API."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1736,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-hidden"
              }
            },
            {
              "id": 235,
              "name": "aria-invalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the entered value does not conform to the format expected by the application."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-errormessage."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1741,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grammar"
                  },
                  {
                    "type": "literal",
                    "value": "spelling"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-invalid"
              }
            },
            {
              "id": 236,
              "name": "aria-keyshortcuts",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1743,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-keyshortcuts"
              }
            },
            {
              "id": 237,
              "name": "aria-label",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1748,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-label"
              }
            },
            {
              "id": 238,
              "name": "aria-labelledby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1753,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-labelledby"
              }
            },
            {
              "id": 239,
              "name": "aria-level",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the hierarchical level of an element within a structure."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1755,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-level"
              }
            },
            {
              "id": 240,
              "name": "aria-live",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1757,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "off"
                  },
                  {
                    "type": "literal",
                    "value": "assertive"
                  },
                  {
                    "type": "literal",
                    "value": "polite"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-live"
              }
            },
            {
              "id": 241,
              "name": "aria-modal",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether an element is modal when displayed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1759,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-modal"
              }
            },
            {
              "id": 242,
              "name": "aria-multiline",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1761,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-multiline"
              }
            },
            {
              "id": 243,
              "name": "aria-multiselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the user may select more than one item from the current selectable descendants."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1763,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-multiselectable"
              }
            },
            {
              "id": 244,
              "name": "aria-orientation",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1765,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "horizontal"
                  },
                  {
                    "type": "literal",
                    "value": "vertical"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-orientation"
              }
            },
            {
              "id": 245,
              "name": "aria-owns",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-controls."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1771,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-owns"
              }
            },
            {
              "id": 246,
              "name": "aria-placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1776,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-placeholder"
              }
            },
            {
              "id": 247,
              "name": "aria-posinset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-setsize."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1781,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-posinset"
              }
            },
            {
              "id": 248,
              "name": "aria-pressed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"pressed\" state of toggle buttons."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1786,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-pressed"
              }
            },
            {
              "id": 249,
              "name": "aria-readonly",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is not editable, but is otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1791,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-readonly"
              }
            },
            {
              "id": 250,
              "name": "aria-relevant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-atomic."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1796,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "additions"
                  },
                  {
                    "type": "literal",
                    "value": "additions removals"
                  },
                  {
                    "type": "literal",
                    "value": "additions text"
                  },
                  {
                    "type": "literal",
                    "value": "all"
                  },
                  {
                    "type": "literal",
                    "value": "removals"
                  },
                  {
                    "type": "literal",
                    "value": "removals additions"
                  },
                  {
                    "type": "literal",
                    "value": "removals text"
                  },
                  {
                    "type": "literal",
                    "value": "text additions"
                  },
                  {
                    "type": "literal",
                    "value": "text removals"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-relevant"
              }
            },
            {
              "id": 251,
              "name": "aria-required",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that user input is required on the element before a form may be submitted."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1798,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-required"
              }
            },
            {
              "id": 252,
              "name": "aria-roledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized description for the role of an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1800,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-roledescription"
              }
            },
            {
              "id": 253,
              "name": "aria-rowcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of rows in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1805,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowcount"
              }
            },
            {
              "id": 254,
              "name": "aria-rowindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1810,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowindex"
              }
            },
            {
              "id": 255,
              "name": "aria-rowindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-rowindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1815,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowindextext"
              }
            },
            {
              "id": 256,
              "name": "aria-rowspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1820,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowspan"
              }
            },
            {
              "id": 257,
              "name": "aria-selected",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"selected\" state of various widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1825,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-selected"
              }
            },
            {
              "id": 258,
              "name": "aria-setsize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-posinset."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1830,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-setsize"
              }
            },
            {
              "id": 259,
              "name": "aria-sort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1832,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "ascending"
                  },
                  {
                    "type": "literal",
                    "value": "descending"
                  },
                  {
                    "type": "literal",
                    "value": "other"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-sort"
              }
            },
            {
              "id": 260,
              "name": "aria-valuemax",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the maximum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1834,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuemax"
              }
            },
            {
              "id": 261,
              "name": "aria-valuemin",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the minimum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1836,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuemin"
              }
            },
            {
              "id": 262,
              "name": "aria-valuenow",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the current value for a range widget."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-valuetext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1841,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuenow"
              }
            },
            {
              "id": 263,
              "name": "aria-valuetext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1843,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuetext"
              }
            },
            {
              "id": 264,
              "name": "autoCapitalize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1966,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoCapitalize"
              }
            },
            {
              "id": 265,
              "name": "autoComplete",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2232,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoComplete"
              }
            },
            {
              "id": 266,
              "name": "autoCorrect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1967,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoCorrect"
              }
            },
            {
              "id": 267,
              "name": "autoFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1928,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoFocus"
              }
            },
            {
              "id": 268,
              "name": "autoSave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1968,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoSave"
              }
            },
            {
              "id": 269,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1420,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.children"
              }
            },
            {
              "id": 270,
              "name": "className",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1929,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.className"
              }
            },
            {
              "id": 271,
              "name": "color",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1969,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.color"
              }
            },
            {
              "id": 272,
              "name": "content",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1954,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.content"
              }
            },
            {
              "id": 273,
              "name": "contentEditable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1930,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "inherit"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "Booleanish"
                    },
                    "name": "Booleanish",
                    "package": "@types/react"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.contentEditable"
              }
            },
            {
              "id": 274,
              "name": "contextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1931,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.contextMenu"
              }
            },
            {
              "id": 275,
              "name": "dangerouslySetInnerHTML",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1421,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 276,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 277,
                      "name": "__html",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "line": 1424,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
                              "qualifiedName": "TrustedHTML"
                            },
                            "name": "TrustedHTML",
                            "package": "@types/react"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [277]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "line": 1421,
                      "character": 34
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.dangerouslySetInnerHTML"
              }
            },
            {
              "id": 278,
              "name": "datatype",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1955,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.datatype"
              }
            },
            {
              "id": 279,
              "name": "defaultChecked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1921,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.defaultChecked"
              }
            },
            {
              "id": 280,
              "name": "defaultValue",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1922,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.defaultValue"
              }
            },
            {
              "id": 281,
              "name": "dir",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1932,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.dir"
              }
            },
            {
              "id": 282,
              "name": "draggable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1933,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.draggable"
              }
            },
            {
              "id": 283,
              "name": "encType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The encoding type to use for the form submission."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1249,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1249"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "type": "literal",
                    "value": "multipart/form-data"
                  },
                  {
                    "type": "literal",
                    "value": "text/plain"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.encType"
              }
            },
            {
              "id": 284,
              "name": "hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1934,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.hidden"
              }
            },
            {
              "id": 285,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1935,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.id"
              }
            },
            {
              "id": 286,
              "name": "inlist",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1956,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.inlist"
              }
            },
            {
              "id": 287,
              "name": "inputMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1984,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "search"
                  },
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "url"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "tel"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  },
                  {
                    "type": "literal",
                    "value": "numeric"
                  },
                  {
                    "type": "literal",
                    "value": "decimal"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.inputMode"
              }
            },
            {
              "id": 288,
              "name": "is",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1989,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.is"
              }
            },
            {
              "id": 289,
              "name": "itemID",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemID"
              }
            },
            {
              "id": 290,
              "name": "itemProp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1970,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemProp"
              }
            },
            {
              "id": 291,
              "name": "itemRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1974,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemRef"
              }
            },
            {
              "id": 292,
              "name": "itemScope",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1971,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemScope"
              }
            },
            {
              "id": 293,
              "name": "itemType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1972,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemType"
              }
            },
            {
              "id": 294,
              "name": "lang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1936,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.lang"
              }
            },
            {
              "id": 295,
              "name": "method",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The HTTP verb to use when the form is submitted. Supports \"get\", \"post\",\n\"put\", \"delete\", and \"patch\".\n\nNative "
                  },
                  {
                    "kind": "code",
                    "text": "`<form>`"
                  },
                  {
                    "kind": "text",
                    "text": " only supports "
                  },
                  {
                    "kind": "code",
                    "text": "`get`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`post`"
                  },
                  {
                    "kind": "text",
                    "text": ", avoid the other verbs if\nyou'd like to support progressive enhancement"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1244,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1244"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "HTMLFormMethod"
                },
                "name": "HTMLFormMethod",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.method"
              }
            },
            {
              "id": 296,
              "name": "name",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2235,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.name"
              }
            },
            {
              "id": 297,
              "name": "noValidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2236,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.noValidate"
              }
            },
            {
              "id": 298,
              "name": "nonce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1937,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.nonce"
              }
            },
            {
              "id": 299,
              "name": "onAbort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1480,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAbort"
              }
            },
            {
              "id": 300,
              "name": "onAbortCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1481,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAbortCapture"
              }
            },
            {
              "id": 301,
              "name": "onAnimationEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1612,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationEnd"
              }
            },
            {
              "id": 302,
              "name": "onAnimationEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1613,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationEndCapture"
              }
            },
            {
              "id": 303,
              "name": "onAnimationIteration",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1614,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationIteration"
              }
            },
            {
              "id": 304,
              "name": "onAnimationIterationCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1615,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationIterationCapture"
              }
            },
            {
              "id": 305,
              "name": "onAnimationStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1610,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationStart"
              }
            },
            {
              "id": 306,
              "name": "onAnimationStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1611,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationStartCapture"
              }
            },
            {
              "id": 307,
              "name": "onAuxClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1528,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAuxClick"
              }
            },
            {
              "id": 308,
              "name": "onAuxClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1529,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAuxClickCapture"
              }
            },
            {
              "id": 309,
              "name": "onBeforeInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1452,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBeforeInput"
              }
            },
            {
              "id": 310,
              "name": "onBeforeInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1453,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBeforeInputCapture"
              }
            },
            {
              "id": 311,
              "name": "onBlur",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1446,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBlur"
              }
            },
            {
              "id": 312,
              "name": "onBlurCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1447,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBlurCapture"
              }
            },
            {
              "id": 313,
              "name": "onCanPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1482,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlay"
              }
            },
            {
              "id": 314,
              "name": "onCanPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1483,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlayCapture"
              }
            },
            {
              "id": 315,
              "name": "onCanPlayThrough",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1484,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlayThrough"
              }
            },
            {
              "id": 316,
              "name": "onCanPlayThroughCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1485,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlayThroughCapture"
              }
            },
            {
              "id": 317,
              "name": "onChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1450,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onChange"
              }
            },
            {
              "id": 318,
              "name": "onChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1451,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onChangeCapture"
              }
            },
            {
              "id": 319,
              "name": "onClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1530,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onClick"
              }
            },
            {
              "id": 320,
              "name": "onClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1531,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onClickCapture"
              }
            },
            {
              "id": 321,
              "name": "onCompositionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1436,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionEnd"
              }
            },
            {
              "id": 322,
              "name": "onCompositionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1437,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionEndCapture"
              }
            },
            {
              "id": 323,
              "name": "onCompositionStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1438,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionStart"
              }
            },
            {
              "id": 324,
              "name": "onCompositionStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1439,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionStartCapture"
              }
            },
            {
              "id": 325,
              "name": "onCompositionUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1440,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionUpdate"
              }
            },
            {
              "id": 326,
              "name": "onCompositionUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1441,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionUpdateCapture"
              }
            },
            {
              "id": 327,
              "name": "onContextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1532,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onContextMenu"
              }
            },
            {
              "id": 328,
              "name": "onContextMenuCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1533,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onContextMenuCapture"
              }
            },
            {
              "id": 329,
              "name": "onCopy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1428,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCopy"
              }
            },
            {
              "id": 330,
              "name": "onCopyCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1429,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCopyCapture"
              }
            },
            {
              "id": 331,
              "name": "onCut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1430,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCut"
              }
            },
            {
              "id": 332,
              "name": "onCutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1431,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCutCapture"
              }
            },
            {
              "id": 333,
              "name": "onDoubleClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1534,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDoubleClick"
              }
            },
            {
              "id": 334,
              "name": "onDoubleClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1535,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDoubleClickCapture"
              }
            },
            {
              "id": 335,
              "name": "onDrag",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1536,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDrag"
              }
            },
            {
              "id": 336,
              "name": "onDragCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1537,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragCapture"
              }
            },
            {
              "id": 337,
              "name": "onDragEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1538,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEnd"
              }
            },
            {
              "id": 338,
              "name": "onDragEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1539,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEndCapture"
              }
            },
            {
              "id": 339,
              "name": "onDragEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1540,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEnter"
              }
            },
            {
              "id": 340,
              "name": "onDragEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1541,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEnterCapture"
              }
            },
            {
              "id": 341,
              "name": "onDragExit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1542,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragExit"
              }
            },
            {
              "id": 342,
              "name": "onDragExitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1543,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragExitCapture"
              }
            },
            {
              "id": 343,
              "name": "onDragLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1544,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragLeave"
              }
            },
            {
              "id": 344,
              "name": "onDragLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1545,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragLeaveCapture"
              }
            },
            {
              "id": 345,
              "name": "onDragOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1546,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragOver"
              }
            },
            {
              "id": 346,
              "name": "onDragOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1547,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragOverCapture"
              }
            },
            {
              "id": 347,
              "name": "onDragStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1548,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragStart"
              }
            },
            {
              "id": 348,
              "name": "onDragStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1549,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragStartCapture"
              }
            },
            {
              "id": 349,
              "name": "onDrop",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1550,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDrop"
              }
            },
            {
              "id": 350,
              "name": "onDropCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1551,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDropCapture"
              }
            },
            {
              "id": 351,
              "name": "onDurationChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1486,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDurationChange"
              }
            },
            {
              "id": 352,
              "name": "onDurationChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1487,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDurationChangeCapture"
              }
            },
            {
              "id": 353,
              "name": "onEmptied",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1488,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEmptied"
              }
            },
            {
              "id": 354,
              "name": "onEmptiedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1489,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEmptiedCapture"
              }
            },
            {
              "id": 355,
              "name": "onEncrypted",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1490,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEncrypted"
              }
            },
            {
              "id": 356,
              "name": "onEncryptedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1491,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEncryptedCapture"
              }
            },
            {
              "id": 357,
              "name": "onEnded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1492,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEnded"
              }
            },
            {
              "id": 358,
              "name": "onEndedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1493,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEndedCapture"
              }
            },
            {
              "id": 359,
              "name": "onError",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1466,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onError"
              }
            },
            {
              "id": 360,
              "name": "onErrorCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1467,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onErrorCapture"
              }
            },
            {
              "id": 361,
              "name": "onFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1444,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onFocus"
              }
            },
            {
              "id": 362,
              "name": "onFocusCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1445,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onFocusCapture"
              }
            },
            {
              "id": 363,
              "name": "onGotPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1596,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onGotPointerCapture"
              }
            },
            {
              "id": 364,
              "name": "onGotPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1597,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onGotPointerCaptureCapture"
              }
            },
            {
              "id": 365,
              "name": "onInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1454,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInput"
              }
            },
            {
              "id": 366,
              "name": "onInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1455,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInputCapture"
              }
            },
            {
              "id": 367,
              "name": "onInvalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1460,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInvalid"
              }
            },
            {
              "id": 368,
              "name": "onInvalidCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1461,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInvalidCapture"
              }
            },
            {
              "id": 369,
              "name": "onKeyDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1470,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyDown"
              }
            },
            {
              "id": 370,
              "name": "onKeyDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1471,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyDownCapture"
              }
            },
            {
              "id": 371,
              "name": "onKeyPress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1473,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyPress"
              }
            },
            {
              "id": 372,
              "name": "onKeyPressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1475,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyPressCapture"
              }
            },
            {
              "id": 373,
              "name": "onKeyUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1476,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyUp"
              }
            },
            {
              "id": 374,
              "name": "onKeyUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1477,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyUpCapture"
              }
            },
            {
              "id": 375,
              "name": "onLoad",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1464,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoad"
              }
            },
            {
              "id": 376,
              "name": "onLoadCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1465,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadCapture"
              }
            },
            {
              "id": 377,
              "name": "onLoadStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1498,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadStart"
              }
            },
            {
              "id": 378,
              "name": "onLoadStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1499,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadStartCapture"
              }
            },
            {
              "id": 379,
              "name": "onLoadedData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1494,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedData"
              }
            },
            {
              "id": 380,
              "name": "onLoadedDataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1495,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedDataCapture"
              }
            },
            {
              "id": 381,
              "name": "onLoadedMetadata",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1496,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedMetadata"
              }
            },
            {
              "id": 382,
              "name": "onLoadedMetadataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1497,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedMetadataCapture"
              }
            },
            {
              "id": 383,
              "name": "onLostPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1598,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLostPointerCapture"
              }
            },
            {
              "id": 384,
              "name": "onLostPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1599,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLostPointerCaptureCapture"
              }
            },
            {
              "id": 385,
              "name": "onMouseDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1552,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseDown"
              }
            },
            {
              "id": 386,
              "name": "onMouseDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1553,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseDownCapture"
              }
            },
            {
              "id": 387,
              "name": "onMouseEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1554,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseEnter"
              }
            },
            {
              "id": 388,
              "name": "onMouseLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1555,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseLeave"
              }
            },
            {
              "id": 389,
              "name": "onMouseMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1556,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseMove"
              }
            },
            {
              "id": 390,
              "name": "onMouseMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1557,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseMoveCapture"
              }
            },
            {
              "id": 391,
              "name": "onMouseOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1558,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOut"
              }
            },
            {
              "id": 392,
              "name": "onMouseOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1559,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOutCapture"
              }
            },
            {
              "id": 393,
              "name": "onMouseOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1560,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOver"
              }
            },
            {
              "id": 394,
              "name": "onMouseOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1561,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOverCapture"
              }
            },
            {
              "id": 395,
              "name": "onMouseUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1562,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseUp"
              }
            },
            {
              "id": 396,
              "name": "onMouseUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1563,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseUpCapture"
              }
            },
            {
              "id": 397,
              "name": "onPaste",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1432,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPaste"
              }
            },
            {
              "id": 398,
              "name": "onPasteCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1433,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPasteCapture"
              }
            },
            {
              "id": 399,
              "name": "onPause",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1500,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPause"
              }
            },
            {
              "id": 400,
              "name": "onPauseCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1501,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPauseCapture"
              }
            },
            {
              "id": 401,
              "name": "onPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1502,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlay"
              }
            },
            {
              "id": 402,
              "name": "onPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1503,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlayCapture"
              }
            },
            {
              "id": 403,
              "name": "onPlaying",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1504,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlaying"
              }
            },
            {
              "id": 404,
              "name": "onPlayingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1505,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlayingCapture"
              }
            },
            {
              "id": 405,
              "name": "onPointerCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1586,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerCancel"
              }
            },
            {
              "id": 406,
              "name": "onPointerCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1587,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerCancelCapture"
              }
            },
            {
              "id": 407,
              "name": "onPointerDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1580,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerDown"
              }
            },
            {
              "id": 408,
              "name": "onPointerDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1581,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerDownCapture"
              }
            },
            {
              "id": 409,
              "name": "onPointerEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1588,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerEnter"
              }
            },
            {
              "id": 410,
              "name": "onPointerEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1589,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerEnterCapture"
              }
            },
            {
              "id": 411,
              "name": "onPointerLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1590,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerLeave"
              }
            },
            {
              "id": 412,
              "name": "onPointerLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1591,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerLeaveCapture"
              }
            },
            {
              "id": 413,
              "name": "onPointerMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1582,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerMove"
              }
            },
            {
              "id": 414,
              "name": "onPointerMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1583,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerMoveCapture"
              }
            },
            {
              "id": 415,
              "name": "onPointerOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1594,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOut"
              }
            },
            {
              "id": 416,
              "name": "onPointerOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1595,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOutCapture"
              }
            },
            {
              "id": 417,
              "name": "onPointerOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1592,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOver"
              }
            },
            {
              "id": 418,
              "name": "onPointerOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1593,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOverCapture"
              }
            },
            {
              "id": 419,
              "name": "onPointerUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1584,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerUp"
              }
            },
            {
              "id": 420,
              "name": "onPointerUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1585,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerUpCapture"
              }
            },
            {
              "id": 421,
              "name": "onProgress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1506,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onProgress"
              }
            },
            {
              "id": 422,
              "name": "onProgressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1507,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onProgressCapture"
              }
            },
            {
              "id": 423,
              "name": "onRateChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1508,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onRateChange"
              }
            },
            {
              "id": 424,
              "name": "onRateChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1509,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onRateChangeCapture"
              }
            },
            {
              "id": 425,
              "name": "onReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1456,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onReset"
              }
            },
            {
              "id": 426,
              "name": "onResetCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1457,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onResetCapture"
              }
            },
            {
              "id": 427,
              "name": "onResize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1510,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onResize"
              }
            },
            {
              "id": 428,
              "name": "onResizeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1511,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onResizeCapture"
              }
            },
            {
              "id": 429,
              "name": "onScroll",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1602,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onScroll"
              }
            },
            {
              "id": 430,
              "name": "onScrollCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1603,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onScrollCapture"
              }
            },
            {
              "id": 431,
              "name": "onSeeked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1512,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeeked"
              }
            },
            {
              "id": 432,
              "name": "onSeekedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1513,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeekedCapture"
              }
            },
            {
              "id": 433,
              "name": "onSeeking",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1514,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeeking"
              }
            },
            {
              "id": 434,
              "name": "onSeekingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1515,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeekingCapture"
              }
            },
            {
              "id": 435,
              "name": "onSelect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1566,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSelect"
              }
            },
            {
              "id": 436,
              "name": "onSelectCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1567,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSelectCapture"
              }
            },
            {
              "id": 437,
              "name": "onStalled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1516,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onStalled"
              }
            },
            {
              "id": 438,
              "name": "onStalledCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1517,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onStalledCapture"
              }
            },
            {
              "id": 439,
              "name": "onSubmit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to call when the form is submitted. If you call\n"
                  },
                  {
                    "kind": "code",
                    "text": "`event.preventDefault()`"
                  },
                  {
                    "kind": "text",
                    "text": " then this form will not do anything."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1276,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1276"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSubmit"
              }
            },
            {
              "id": 440,
              "name": "onSubmitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1459,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSubmitCapture"
              }
            },
            {
              "id": 441,
              "name": "onSuspend",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1518,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSuspend"
              }
            },
            {
              "id": 442,
              "name": "onSuspendCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1519,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSuspendCapture"
              }
            },
            {
              "id": 443,
              "name": "onTimeUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1520,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTimeUpdate"
              }
            },
            {
              "id": 444,
              "name": "onTimeUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1521,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTimeUpdateCapture"
              }
            },
            {
              "id": 445,
              "name": "onTouchCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1570,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchCancel"
              }
            },
            {
              "id": 446,
              "name": "onTouchCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1571,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchCancelCapture"
              }
            },
            {
              "id": 447,
              "name": "onTouchEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1572,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchEnd"
              }
            },
            {
              "id": 448,
              "name": "onTouchEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1573,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchEndCapture"
              }
            },
            {
              "id": 449,
              "name": "onTouchMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1574,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchMove"
              }
            },
            {
              "id": 450,
              "name": "onTouchMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1575,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchMoveCapture"
              }
            },
            {
              "id": 451,
              "name": "onTouchStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1576,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchStart"
              }
            },
            {
              "id": 452,
              "name": "onTouchStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1577,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchStartCapture"
              }
            },
            {
              "id": 453,
              "name": "onTransitionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1618,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTransitionEnd"
              }
            },
            {
              "id": 454,
              "name": "onTransitionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1619,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTransitionEndCapture"
              }
            },
            {
              "id": 455,
              "name": "onVolumeChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1522,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onVolumeChange"
              }
            },
            {
              "id": 456,
              "name": "onVolumeChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1523,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onVolumeChangeCapture"
              }
            },
            {
              "id": 457,
              "name": "onWaiting",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1524,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWaiting"
              }
            },
            {
              "id": 458,
              "name": "onWaitingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1525,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWaitingCapture"
              }
            },
            {
              "id": 459,
              "name": "onWheel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1606,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWheel"
              }
            },
            {
              "id": 460,
              "name": "onWheelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1607,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWheelCapture"
              }
            },
            {
              "id": 461,
              "name": "placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1938,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.placeholder"
              }
            },
            {
              "id": 462,
              "name": "prefix",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1957,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.prefix"
              }
            },
            {
              "id": 463,
              "name": "preventScrollReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Prevent the scroll position from resetting to the top of the viewport on\ncompletion of the navigation when using the <ScrollRestoration> component"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1270,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1270"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.preventScrollReset"
              }
            },
            {
              "id": 464,
              "name": "property",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1958,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.property"
              }
            },
            {
              "id": 465,
              "name": "radioGroup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1947,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.radioGroup"
              }
            },
            {
              "id": 466,
              "name": "rel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1959,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.rel"
              }
            },
            {
              "id": 467,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1264,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1264"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.relative"
              }
            },
            {
              "id": 468,
              "name": "resource",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1960,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.resource"
              }
            },
            {
              "id": 469,
              "name": "results",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1975,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.results"
              }
            },
            {
              "id": 470,
              "name": "rev",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1961,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.rev"
              }
            },
            {
              "id": 471,
              "name": "role",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1950,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AriaRole"
                },
                "name": "AriaRole",
                "package": "@types/react",
                "qualifiedName": "React.AriaRole"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.role"
              }
            },
            {
              "id": 472,
              "name": "security",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1976,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.security"
              }
            },
            {
              "id": 473,
              "name": "slot",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1939,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.slot"
              }
            },
            {
              "id": 474,
              "name": "spellCheck",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1940,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.spellCheck"
              }
            },
            {
              "id": 475,
              "name": "style",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1941,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CSSProperties"
                },
                "name": "CSSProperties",
                "package": "@types/react",
                "qualifiedName": "React.CSSProperties"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.style"
              }
            },
            {
              "id": 476,
              "name": "suppressContentEditableWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1923,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.suppressContentEditableWarning"
              }
            },
            {
              "id": 477,
              "name": "suppressHydrationWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1924,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.suppressHydrationWarning"
              }
            },
            {
              "id": 478,
              "name": "tabIndex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1942,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.tabIndex"
              }
            },
            {
              "id": 479,
              "name": "target",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2237,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.target"
              }
            },
            {
              "id": 480,
              "name": "title",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1943,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.title"
              }
            },
            {
              "id": 481,
              "name": "translate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1944,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "yes"
                  },
                  {
                    "type": "literal",
                    "value": "no"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.translate"
              }
            },
            {
              "id": 482,
              "name": "typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1962,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.typeof"
              }
            },
            {
              "id": 483,
              "name": "unselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1977,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "on"
                  },
                  {
                    "type": "literal",
                    "value": "off"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.unselectable"
              }
            },
            {
              "id": 484,
              "name": "vocab",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1963,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.vocab"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
                220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
                233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245,
                246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
                259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271,
                272, 273, 274, 275, 278, 279, 280, 281, 282, 283, 284, 285, 286,
                287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299,
                300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312,
                313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325,
                326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338,
                339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351,
                352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
                365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377,
                378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390,
                391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403,
                404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416,
                417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429,
                430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442,
                443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455,
                456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468,
                469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481,
                482, 483, 484
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1283,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1283"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
                "qualifiedName": "SharedFormProps"
              },
              "name": "SharedFormProps",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 485,
          "name": "FetcherSubmitFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Submits a fetcher "
              },
              {
                "kind": "code",
                "text": "`<form>`"
              },
              {
                "kind": "text",
                "text": " to the server without reloading the page."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1796,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1796"
            }
          ],
          "signatures": [
            {
              "id": 486,
              "name": "FetcherSubmitFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1797,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1797"
                }
              ],
              "parameters": [
                {
                  "id": 487,
                  "name": "target",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Can be multiple types of elements and objects\n\n**"
                      },
                      {
                        "kind": "code",
                        "text": "`HTMLFormElement`"
                      },
                      {
                        "kind": "text",
                        "text": "**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\n<fetcher.Form\n  onSubmit={(event) => {\n    fetcher.submit(event.currentTarget);\n  }}\n/>\n```"
                      },
                      {
                        "kind": "text",
                        "text": "\n\n**"
                      },
                      {
                        "kind": "code",
                        "text": "`FormData`"
                      },
                      {
                        "kind": "text",
                        "text": "**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nconst formData = new FormData();\nformData.append(\"myKey\", \"myValue\");\nfetcher.submit(formData, { method: \"post\" });\n```"
                      },
                      {
                        "kind": "text",
                        "text": "\n\n**Plain object that will be serialized as "
                      },
                      {
                        "kind": "code",
                        "text": "`FormData`"
                      },
                      {
                        "kind": "text",
                        "text": "**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nfetcher.submit({ myKey: \"myValue\" }, { method: \"post\" });\n```"
                      },
                      {
                        "kind": "text",
                        "text": "\n\n**Plain object that will be serialized as JSON**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nfetcher.submit(\n  { myKey: \"myValue\" },\n  { method: \"post\", encType: \"application/json\" }\n);\n```"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "target": 2247,
                    "name": "SubmitTarget",
                    "package": "react-router"
                  }
                },
                {
                  "id": 488,
                  "name": "options",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
                      "qualifiedName": "FetcherSubmitOptions"
                    },
                    "name": "FetcherSubmitOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 489,
          "name": "FormProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Form props available to navigations"
              }
            ]
          },
          "children": [
            {
              "id": 490,
              "name": "about",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1953,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.about"
              }
            },
            {
              "id": 491,
              "name": "acceptCharset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2227,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.acceptCharset"
              }
            },
            {
              "id": 492,
              "name": "accessKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1927,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.accessKey"
              }
            },
            {
              "id": 493,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The URL to submit the form data to.  If "
                  },
                  {
                    "kind": "code",
                    "text": "`undefined`"
                  },
                  {
                    "kind": "text",
                    "text": ", this defaults to the closest route in context."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1257,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1257"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.action"
              }
            },
            {
              "id": 494,
              "name": "aria-activedescendant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1636,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-activedescendant"
              }
            },
            {
              "id": 495,
              "name": "aria-atomic",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1638,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-atomic"
              }
            },
            {
              "id": 496,
              "name": "aria-autocomplete",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1643,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "list"
                  },
                  {
                    "type": "literal",
                    "value": "inline"
                  },
                  {
                    "type": "literal",
                    "value": "both"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-autocomplete"
              }
            },
            {
              "id": 497,
              "name": "aria-braillelabel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-label."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1649,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-braillelabel"
              }
            },
            {
              "id": 498,
              "name": "aria-brailleroledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-roledescription."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1654,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-brailleroledescription"
              }
            },
            {
              "id": 499,
              "name": "aria-busy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1655,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-busy"
              }
            },
            {
              "id": 500,
              "name": "aria-checked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1660,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-checked"
              }
            },
            {
              "id": 501,
              "name": "aria-colcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of columns in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1665,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colcount"
              }
            },
            {
              "id": 502,
              "name": "aria-colindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1670,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colindex"
              }
            },
            {
              "id": 503,
              "name": "aria-colindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-colindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1675,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colindextext"
              }
            },
            {
              "id": 504,
              "name": "aria-colspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1680,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-colspan"
              }
            },
            {
              "id": 505,
              "name": "aria-controls",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-owns."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1685,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-controls"
              }
            },
            {
              "id": 506,
              "name": "aria-current",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the element that represents the current item within a container or set of related elements."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1687,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "time"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "location"
                  },
                  {
                    "type": "literal",
                    "value": "page"
                  },
                  {
                    "type": "literal",
                    "value": "step"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "date"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-current"
              }
            },
            {
              "id": 507,
              "name": "aria-describedby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that describes the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1692,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-describedby"
              }
            },
            {
              "id": 508,
              "name": "aria-description",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that describes or annotates the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "related aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1697,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-description"
              }
            },
            {
              "id": 509,
              "name": "aria-details",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides a detailed, extended description for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1702,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-details"
              }
            },
            {
              "id": 510,
              "name": "aria-disabled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-hidden"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-readonly."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1707,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-disabled"
              }
            },
            {
              "id": 511,
              "name": "aria-dropeffect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1712,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "link"
                  },
                  {
                    "type": "literal",
                    "value": "copy"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "execute"
                  },
                  {
                    "type": "literal",
                    "value": "move"
                  },
                  {
                    "type": "literal",
                    "value": "popup"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-dropeffect"
              }
            },
            {
              "id": 512,
              "name": "aria-errormessage",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides an error message for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-invalid"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1717,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-errormessage"
              }
            },
            {
              "id": 513,
              "name": "aria-expanded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1719,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-expanded"
              }
            },
            {
              "id": 514,
              "name": "aria-flowto",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1724,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-flowto"
              }
            },
            {
              "id": 515,
              "name": "aria-grabbed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1729,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-grabbed"
              }
            },
            {
              "id": 516,
              "name": "aria-haspopup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1731,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "dialog"
                  },
                  {
                    "type": "literal",
                    "value": "menu"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grid"
                  },
                  {
                    "type": "literal",
                    "value": "listbox"
                  },
                  {
                    "type": "literal",
                    "value": "tree"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-haspopup"
              }
            },
            {
              "id": 517,
              "name": "aria-hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element is exposed to an accessibility API."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1736,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-hidden"
              }
            },
            {
              "id": 518,
              "name": "aria-invalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the entered value does not conform to the format expected by the application."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-errormessage."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1741,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grammar"
                  },
                  {
                    "type": "literal",
                    "value": "spelling"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-invalid"
              }
            },
            {
              "id": 519,
              "name": "aria-keyshortcuts",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1743,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-keyshortcuts"
              }
            },
            {
              "id": 520,
              "name": "aria-label",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1748,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-label"
              }
            },
            {
              "id": 521,
              "name": "aria-labelledby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1753,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-labelledby"
              }
            },
            {
              "id": 522,
              "name": "aria-level",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the hierarchical level of an element within a structure."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1755,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-level"
              }
            },
            {
              "id": 523,
              "name": "aria-live",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1757,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "off"
                  },
                  {
                    "type": "literal",
                    "value": "assertive"
                  },
                  {
                    "type": "literal",
                    "value": "polite"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-live"
              }
            },
            {
              "id": 524,
              "name": "aria-modal",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether an element is modal when displayed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1759,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-modal"
              }
            },
            {
              "id": 525,
              "name": "aria-multiline",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1761,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-multiline"
              }
            },
            {
              "id": 526,
              "name": "aria-multiselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the user may select more than one item from the current selectable descendants."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1763,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-multiselectable"
              }
            },
            {
              "id": 527,
              "name": "aria-orientation",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1765,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "horizontal"
                  },
                  {
                    "type": "literal",
                    "value": "vertical"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-orientation"
              }
            },
            {
              "id": 528,
              "name": "aria-owns",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-controls."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1771,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-owns"
              }
            },
            {
              "id": 529,
              "name": "aria-placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1776,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-placeholder"
              }
            },
            {
              "id": 530,
              "name": "aria-posinset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-setsize."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1781,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-posinset"
              }
            },
            {
              "id": 531,
              "name": "aria-pressed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"pressed\" state of toggle buttons."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1786,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-pressed"
              }
            },
            {
              "id": 532,
              "name": "aria-readonly",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is not editable, but is otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1791,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-readonly"
              }
            },
            {
              "id": 533,
              "name": "aria-relevant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-atomic."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1796,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "additions"
                  },
                  {
                    "type": "literal",
                    "value": "additions removals"
                  },
                  {
                    "type": "literal",
                    "value": "additions text"
                  },
                  {
                    "type": "literal",
                    "value": "all"
                  },
                  {
                    "type": "literal",
                    "value": "removals"
                  },
                  {
                    "type": "literal",
                    "value": "removals additions"
                  },
                  {
                    "type": "literal",
                    "value": "removals text"
                  },
                  {
                    "type": "literal",
                    "value": "text additions"
                  },
                  {
                    "type": "literal",
                    "value": "text removals"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-relevant"
              }
            },
            {
              "id": 534,
              "name": "aria-required",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that user input is required on the element before a form may be submitted."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1798,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-required"
              }
            },
            {
              "id": 535,
              "name": "aria-roledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized description for the role of an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1800,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-roledescription"
              }
            },
            {
              "id": 536,
              "name": "aria-rowcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of rows in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1805,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowcount"
              }
            },
            {
              "id": 537,
              "name": "aria-rowindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1810,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowindex"
              }
            },
            {
              "id": 538,
              "name": "aria-rowindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-rowindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1815,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowindextext"
              }
            },
            {
              "id": 539,
              "name": "aria-rowspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1820,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-rowspan"
              }
            },
            {
              "id": 540,
              "name": "aria-selected",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"selected\" state of various widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1825,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-selected"
              }
            },
            {
              "id": 541,
              "name": "aria-setsize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-posinset."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1830,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-setsize"
              }
            },
            {
              "id": 542,
              "name": "aria-sort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1832,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "ascending"
                  },
                  {
                    "type": "literal",
                    "value": "descending"
                  },
                  {
                    "type": "literal",
                    "value": "other"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-sort"
              }
            },
            {
              "id": 543,
              "name": "aria-valuemax",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the maximum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1834,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuemax"
              }
            },
            {
              "id": 544,
              "name": "aria-valuemin",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the minimum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1836,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuemin"
              }
            },
            {
              "id": 545,
              "name": "aria-valuenow",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the current value for a range widget."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-valuetext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1841,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuenow"
              }
            },
            {
              "id": 546,
              "name": "aria-valuetext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1843,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.aria-valuetext"
              }
            },
            {
              "id": 547,
              "name": "autoCapitalize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1966,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoCapitalize"
              }
            },
            {
              "id": 548,
              "name": "autoComplete",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2232,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoComplete"
              }
            },
            {
              "id": 549,
              "name": "autoCorrect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1967,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoCorrect"
              }
            },
            {
              "id": 550,
              "name": "autoFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1928,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoFocus"
              }
            },
            {
              "id": 551,
              "name": "autoSave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1968,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.autoSave"
              }
            },
            {
              "id": 552,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1420,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.children"
              }
            },
            {
              "id": 553,
              "name": "className",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1929,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.className"
              }
            },
            {
              "id": 554,
              "name": "color",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1969,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.color"
              }
            },
            {
              "id": 555,
              "name": "content",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1954,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.content"
              }
            },
            {
              "id": 556,
              "name": "contentEditable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1930,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "inherit"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "Booleanish"
                    },
                    "name": "Booleanish",
                    "package": "@types/react"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.contentEditable"
              }
            },
            {
              "id": 557,
              "name": "contextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1931,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.contextMenu"
              }
            },
            {
              "id": 558,
              "name": "dangerouslySetInnerHTML",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1421,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 559,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 560,
                      "name": "__html",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "line": 1424,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
                              "qualifiedName": "TrustedHTML"
                            },
                            "name": "TrustedHTML",
                            "package": "@types/react"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [560]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "line": 1421,
                      "character": 34
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.dangerouslySetInnerHTML"
              }
            },
            {
              "id": 561,
              "name": "datatype",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1955,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.datatype"
              }
            },
            {
              "id": 562,
              "name": "defaultChecked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1921,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.defaultChecked"
              }
            },
            {
              "id": 563,
              "name": "defaultValue",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1922,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.defaultValue"
              }
            },
            {
              "id": 564,
              "name": "dir",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1932,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.dir"
              }
            },
            {
              "id": 565,
              "name": "discover",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1290,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1290"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "qualifiedName": "DiscoverBehavior"
                },
                "name": "DiscoverBehavior",
                "package": "react-router"
              }
            },
            {
              "id": 566,
              "name": "draggable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1933,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.draggable"
              }
            },
            {
              "id": 567,
              "name": "encType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The encoding type to use for the form submission."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1249,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1249"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "application/x-www-form-urlencoded"
                  },
                  {
                    "type": "literal",
                    "value": "multipart/form-data"
                  },
                  {
                    "type": "literal",
                    "value": "text/plain"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.encType"
              }
            },
            {
              "id": 568,
              "name": "fetcherKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates a specific fetcherKey to use when using "
                  },
                  {
                    "kind": "code",
                    "text": "`navigate={false}`"
                  },
                  {
                    "kind": "text",
                    "text": " so you\ncan pick up the fetcher's state in a different component in a "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useFetcher",
                    "target": 2605
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1297,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1297"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 569,
              "name": "hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1934,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.hidden"
              }
            },
            {
              "id": 570,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1935,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.id"
              }
            },
            {
              "id": 571,
              "name": "inlist",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1956,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.inlist"
              }
            },
            {
              "id": 572,
              "name": "inputMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1984,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "search"
                  },
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "url"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "tel"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  },
                  {
                    "type": "literal",
                    "value": "numeric"
                  },
                  {
                    "type": "literal",
                    "value": "decimal"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.inputMode"
              }
            },
            {
              "id": 573,
              "name": "is",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1989,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.is"
              }
            },
            {
              "id": 574,
              "name": "itemID",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemID"
              }
            },
            {
              "id": 575,
              "name": "itemProp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1970,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemProp"
              }
            },
            {
              "id": 576,
              "name": "itemRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1974,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemRef"
              }
            },
            {
              "id": 577,
              "name": "itemScope",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1971,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemScope"
              }
            },
            {
              "id": 578,
              "name": "itemType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1972,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.itemType"
              }
            },
            {
              "id": 579,
              "name": "lang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1936,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.lang"
              }
            },
            {
              "id": 580,
              "name": "method",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The HTTP verb to use when the form is submitted. Supports \"get\", \"post\",\n\"put\", \"delete\", and \"patch\".\n\nNative "
                  },
                  {
                    "kind": "code",
                    "text": "`<form>`"
                  },
                  {
                    "kind": "text",
                    "text": " only supports "
                  },
                  {
                    "kind": "code",
                    "text": "`get`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`post`"
                  },
                  {
                    "kind": "text",
                    "text": ", avoid the other verbs if\nyou'd like to support progressive enhancement"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1244,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1244"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "HTMLFormMethod"
                },
                "name": "HTMLFormMethod",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.method"
              }
            },
            {
              "id": 581,
              "name": "name",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2235,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.name"
              }
            },
            {
              "id": 582,
              "name": "navigate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Skips the navigation and uses a "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "fetcher",
                    "target": 2605,
                    "tsLinkText": "fetcher"
                  },
                  {
                    "kind": "text",
                    "text": " internally\nwhen "
                  },
                  {
                    "kind": "code",
                    "text": "`false`"
                  },
                  {
                    "kind": "text",
                    "text": ". This is essentially a shorthand for "
                  },
                  {
                    "kind": "code",
                    "text": "`useFetcher()`"
                  },
                  {
                    "kind": "text",
                    "text": " +\n"
                  },
                  {
                    "kind": "code",
                    "text": "`<fetcher.Form>`"
                  },
                  {
                    "kind": "text",
                    "text": " where you don't care about the resulting data in this\ncomponent."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1305,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1305"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 583,
              "name": "noValidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2236,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.noValidate"
              }
            },
            {
              "id": 584,
              "name": "nonce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1937,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.nonce"
              }
            },
            {
              "id": 585,
              "name": "onAbort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1480,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAbort"
              }
            },
            {
              "id": 586,
              "name": "onAbortCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1481,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAbortCapture"
              }
            },
            {
              "id": 587,
              "name": "onAnimationEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1612,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationEnd"
              }
            },
            {
              "id": 588,
              "name": "onAnimationEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1613,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationEndCapture"
              }
            },
            {
              "id": 589,
              "name": "onAnimationIteration",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1614,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationIteration"
              }
            },
            {
              "id": 590,
              "name": "onAnimationIterationCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1615,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationIterationCapture"
              }
            },
            {
              "id": 591,
              "name": "onAnimationStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1610,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationStart"
              }
            },
            {
              "id": 592,
              "name": "onAnimationStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1611,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAnimationStartCapture"
              }
            },
            {
              "id": 593,
              "name": "onAuxClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1528,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAuxClick"
              }
            },
            {
              "id": 594,
              "name": "onAuxClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1529,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onAuxClickCapture"
              }
            },
            {
              "id": 595,
              "name": "onBeforeInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1452,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBeforeInput"
              }
            },
            {
              "id": 596,
              "name": "onBeforeInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1453,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBeforeInputCapture"
              }
            },
            {
              "id": 597,
              "name": "onBlur",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1446,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBlur"
              }
            },
            {
              "id": 598,
              "name": "onBlurCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1447,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onBlurCapture"
              }
            },
            {
              "id": 599,
              "name": "onCanPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1482,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlay"
              }
            },
            {
              "id": 600,
              "name": "onCanPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1483,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlayCapture"
              }
            },
            {
              "id": 601,
              "name": "onCanPlayThrough",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1484,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlayThrough"
              }
            },
            {
              "id": 602,
              "name": "onCanPlayThroughCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1485,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCanPlayThroughCapture"
              }
            },
            {
              "id": 603,
              "name": "onChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1450,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onChange"
              }
            },
            {
              "id": 604,
              "name": "onChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1451,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onChangeCapture"
              }
            },
            {
              "id": 605,
              "name": "onClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1530,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onClick"
              }
            },
            {
              "id": 606,
              "name": "onClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1531,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onClickCapture"
              }
            },
            {
              "id": 607,
              "name": "onCompositionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1436,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionEnd"
              }
            },
            {
              "id": 608,
              "name": "onCompositionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1437,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionEndCapture"
              }
            },
            {
              "id": 609,
              "name": "onCompositionStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1438,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionStart"
              }
            },
            {
              "id": 610,
              "name": "onCompositionStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1439,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionStartCapture"
              }
            },
            {
              "id": 611,
              "name": "onCompositionUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1440,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionUpdate"
              }
            },
            {
              "id": 612,
              "name": "onCompositionUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1441,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCompositionUpdateCapture"
              }
            },
            {
              "id": 613,
              "name": "onContextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1532,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onContextMenu"
              }
            },
            {
              "id": 614,
              "name": "onContextMenuCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1533,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onContextMenuCapture"
              }
            },
            {
              "id": 615,
              "name": "onCopy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1428,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCopy"
              }
            },
            {
              "id": 616,
              "name": "onCopyCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1429,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCopyCapture"
              }
            },
            {
              "id": 617,
              "name": "onCut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1430,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCut"
              }
            },
            {
              "id": 618,
              "name": "onCutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1431,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onCutCapture"
              }
            },
            {
              "id": 619,
              "name": "onDoubleClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1534,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDoubleClick"
              }
            },
            {
              "id": 620,
              "name": "onDoubleClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1535,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDoubleClickCapture"
              }
            },
            {
              "id": 621,
              "name": "onDrag",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1536,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDrag"
              }
            },
            {
              "id": 622,
              "name": "onDragCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1537,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragCapture"
              }
            },
            {
              "id": 623,
              "name": "onDragEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1538,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEnd"
              }
            },
            {
              "id": 624,
              "name": "onDragEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1539,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEndCapture"
              }
            },
            {
              "id": 625,
              "name": "onDragEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1540,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEnter"
              }
            },
            {
              "id": 626,
              "name": "onDragEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1541,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragEnterCapture"
              }
            },
            {
              "id": 627,
              "name": "onDragExit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1542,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragExit"
              }
            },
            {
              "id": 628,
              "name": "onDragExitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1543,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragExitCapture"
              }
            },
            {
              "id": 629,
              "name": "onDragLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1544,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragLeave"
              }
            },
            {
              "id": 630,
              "name": "onDragLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1545,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragLeaveCapture"
              }
            },
            {
              "id": 631,
              "name": "onDragOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1546,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragOver"
              }
            },
            {
              "id": 632,
              "name": "onDragOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1547,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragOverCapture"
              }
            },
            {
              "id": 633,
              "name": "onDragStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1548,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragStart"
              }
            },
            {
              "id": 634,
              "name": "onDragStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1549,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDragStartCapture"
              }
            },
            {
              "id": 635,
              "name": "onDrop",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1550,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDrop"
              }
            },
            {
              "id": 636,
              "name": "onDropCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1551,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDropCapture"
              }
            },
            {
              "id": 637,
              "name": "onDurationChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1486,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDurationChange"
              }
            },
            {
              "id": 638,
              "name": "onDurationChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1487,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onDurationChangeCapture"
              }
            },
            {
              "id": 639,
              "name": "onEmptied",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1488,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEmptied"
              }
            },
            {
              "id": 640,
              "name": "onEmptiedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1489,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEmptiedCapture"
              }
            },
            {
              "id": 641,
              "name": "onEncrypted",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1490,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEncrypted"
              }
            },
            {
              "id": 642,
              "name": "onEncryptedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1491,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEncryptedCapture"
              }
            },
            {
              "id": 643,
              "name": "onEnded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1492,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEnded"
              }
            },
            {
              "id": 644,
              "name": "onEndedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1493,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onEndedCapture"
              }
            },
            {
              "id": 645,
              "name": "onError",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1466,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onError"
              }
            },
            {
              "id": 646,
              "name": "onErrorCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1467,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onErrorCapture"
              }
            },
            {
              "id": 647,
              "name": "onFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1444,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onFocus"
              }
            },
            {
              "id": 648,
              "name": "onFocusCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1445,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onFocusCapture"
              }
            },
            {
              "id": 649,
              "name": "onGotPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1596,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onGotPointerCapture"
              }
            },
            {
              "id": 650,
              "name": "onGotPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1597,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onGotPointerCaptureCapture"
              }
            },
            {
              "id": 651,
              "name": "onInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1454,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInput"
              }
            },
            {
              "id": 652,
              "name": "onInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1455,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInputCapture"
              }
            },
            {
              "id": 653,
              "name": "onInvalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1460,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInvalid"
              }
            },
            {
              "id": 654,
              "name": "onInvalidCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1461,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onInvalidCapture"
              }
            },
            {
              "id": 655,
              "name": "onKeyDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1470,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyDown"
              }
            },
            {
              "id": 656,
              "name": "onKeyDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1471,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyDownCapture"
              }
            },
            {
              "id": 657,
              "name": "onKeyPress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1473,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyPress"
              }
            },
            {
              "id": 658,
              "name": "onKeyPressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1475,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyPressCapture"
              }
            },
            {
              "id": 659,
              "name": "onKeyUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1476,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyUp"
              }
            },
            {
              "id": 660,
              "name": "onKeyUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1477,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onKeyUpCapture"
              }
            },
            {
              "id": 661,
              "name": "onLoad",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1464,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoad"
              }
            },
            {
              "id": 662,
              "name": "onLoadCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1465,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadCapture"
              }
            },
            {
              "id": 663,
              "name": "onLoadStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1498,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadStart"
              }
            },
            {
              "id": 664,
              "name": "onLoadStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1499,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadStartCapture"
              }
            },
            {
              "id": 665,
              "name": "onLoadedData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1494,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedData"
              }
            },
            {
              "id": 666,
              "name": "onLoadedDataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1495,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedDataCapture"
              }
            },
            {
              "id": 667,
              "name": "onLoadedMetadata",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1496,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedMetadata"
              }
            },
            {
              "id": 668,
              "name": "onLoadedMetadataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1497,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLoadedMetadataCapture"
              }
            },
            {
              "id": 669,
              "name": "onLostPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1598,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLostPointerCapture"
              }
            },
            {
              "id": 670,
              "name": "onLostPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1599,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onLostPointerCaptureCapture"
              }
            },
            {
              "id": 671,
              "name": "onMouseDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1552,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseDown"
              }
            },
            {
              "id": 672,
              "name": "onMouseDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1553,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseDownCapture"
              }
            },
            {
              "id": 673,
              "name": "onMouseEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1554,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseEnter"
              }
            },
            {
              "id": 674,
              "name": "onMouseLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1555,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseLeave"
              }
            },
            {
              "id": 675,
              "name": "onMouseMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1556,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseMove"
              }
            },
            {
              "id": 676,
              "name": "onMouseMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1557,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseMoveCapture"
              }
            },
            {
              "id": 677,
              "name": "onMouseOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1558,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOut"
              }
            },
            {
              "id": 678,
              "name": "onMouseOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1559,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOutCapture"
              }
            },
            {
              "id": 679,
              "name": "onMouseOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1560,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOver"
              }
            },
            {
              "id": 680,
              "name": "onMouseOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1561,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseOverCapture"
              }
            },
            {
              "id": 681,
              "name": "onMouseUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1562,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseUp"
              }
            },
            {
              "id": 682,
              "name": "onMouseUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1563,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onMouseUpCapture"
              }
            },
            {
              "id": 683,
              "name": "onPaste",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1432,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPaste"
              }
            },
            {
              "id": 684,
              "name": "onPasteCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1433,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPasteCapture"
              }
            },
            {
              "id": 685,
              "name": "onPause",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1500,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPause"
              }
            },
            {
              "id": 686,
              "name": "onPauseCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1501,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPauseCapture"
              }
            },
            {
              "id": 687,
              "name": "onPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1502,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlay"
              }
            },
            {
              "id": 688,
              "name": "onPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1503,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlayCapture"
              }
            },
            {
              "id": 689,
              "name": "onPlaying",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1504,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlaying"
              }
            },
            {
              "id": 690,
              "name": "onPlayingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1505,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPlayingCapture"
              }
            },
            {
              "id": 691,
              "name": "onPointerCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1586,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerCancel"
              }
            },
            {
              "id": 692,
              "name": "onPointerCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1587,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerCancelCapture"
              }
            },
            {
              "id": 693,
              "name": "onPointerDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1580,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerDown"
              }
            },
            {
              "id": 694,
              "name": "onPointerDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1581,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerDownCapture"
              }
            },
            {
              "id": 695,
              "name": "onPointerEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1588,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerEnter"
              }
            },
            {
              "id": 696,
              "name": "onPointerEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1589,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerEnterCapture"
              }
            },
            {
              "id": 697,
              "name": "onPointerLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1590,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerLeave"
              }
            },
            {
              "id": 698,
              "name": "onPointerLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1591,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerLeaveCapture"
              }
            },
            {
              "id": 699,
              "name": "onPointerMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1582,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerMove"
              }
            },
            {
              "id": 700,
              "name": "onPointerMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1583,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerMoveCapture"
              }
            },
            {
              "id": 701,
              "name": "onPointerOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1594,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOut"
              }
            },
            {
              "id": 702,
              "name": "onPointerOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1595,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOutCapture"
              }
            },
            {
              "id": 703,
              "name": "onPointerOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1592,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOver"
              }
            },
            {
              "id": 704,
              "name": "onPointerOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1593,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerOverCapture"
              }
            },
            {
              "id": 705,
              "name": "onPointerUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1584,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerUp"
              }
            },
            {
              "id": 706,
              "name": "onPointerUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1585,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onPointerUpCapture"
              }
            },
            {
              "id": 707,
              "name": "onProgress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1506,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onProgress"
              }
            },
            {
              "id": 708,
              "name": "onProgressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1507,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onProgressCapture"
              }
            },
            {
              "id": 709,
              "name": "onRateChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1508,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onRateChange"
              }
            },
            {
              "id": 710,
              "name": "onRateChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1509,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onRateChangeCapture"
              }
            },
            {
              "id": 711,
              "name": "onReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1456,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onReset"
              }
            },
            {
              "id": 712,
              "name": "onResetCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1457,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onResetCapture"
              }
            },
            {
              "id": 713,
              "name": "onResize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1510,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onResize"
              }
            },
            {
              "id": 714,
              "name": "onResizeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1511,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onResizeCapture"
              }
            },
            {
              "id": 715,
              "name": "onScroll",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1602,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onScroll"
              }
            },
            {
              "id": 716,
              "name": "onScrollCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1603,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onScrollCapture"
              }
            },
            {
              "id": 717,
              "name": "onSeeked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1512,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeeked"
              }
            },
            {
              "id": 718,
              "name": "onSeekedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1513,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeekedCapture"
              }
            },
            {
              "id": 719,
              "name": "onSeeking",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1514,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeeking"
              }
            },
            {
              "id": 720,
              "name": "onSeekingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1515,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSeekingCapture"
              }
            },
            {
              "id": 721,
              "name": "onSelect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1566,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSelect"
              }
            },
            {
              "id": 722,
              "name": "onSelectCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1567,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSelectCapture"
              }
            },
            {
              "id": 723,
              "name": "onStalled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1516,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onStalled"
              }
            },
            {
              "id": 724,
              "name": "onStalledCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1517,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onStalledCapture"
              }
            },
            {
              "id": 725,
              "name": "onSubmit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A function to call when the form is submitted. If you call\n"
                  },
                  {
                    "kind": "code",
                    "text": "`event.preventDefault()`"
                  },
                  {
                    "kind": "text",
                    "text": " then this form will not do anything."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1276,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1276"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSubmit"
              }
            },
            {
              "id": 726,
              "name": "onSubmitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1459,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSubmitCapture"
              }
            },
            {
              "id": 727,
              "name": "onSuspend",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1518,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSuspend"
              }
            },
            {
              "id": 728,
              "name": "onSuspendCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1519,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onSuspendCapture"
              }
            },
            {
              "id": 729,
              "name": "onTimeUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1520,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTimeUpdate"
              }
            },
            {
              "id": 730,
              "name": "onTimeUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1521,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTimeUpdateCapture"
              }
            },
            {
              "id": 731,
              "name": "onTouchCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1570,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchCancel"
              }
            },
            {
              "id": 732,
              "name": "onTouchCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1571,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchCancelCapture"
              }
            },
            {
              "id": 733,
              "name": "onTouchEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1572,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchEnd"
              }
            },
            {
              "id": 734,
              "name": "onTouchEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1573,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchEndCapture"
              }
            },
            {
              "id": 735,
              "name": "onTouchMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1574,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchMove"
              }
            },
            {
              "id": 736,
              "name": "onTouchMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1575,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchMoveCapture"
              }
            },
            {
              "id": 737,
              "name": "onTouchStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1576,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchStart"
              }
            },
            {
              "id": 738,
              "name": "onTouchStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1577,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTouchStartCapture"
              }
            },
            {
              "id": 739,
              "name": "onTransitionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1618,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTransitionEnd"
              }
            },
            {
              "id": 740,
              "name": "onTransitionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1619,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onTransitionEndCapture"
              }
            },
            {
              "id": 741,
              "name": "onVolumeChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1522,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onVolumeChange"
              }
            },
            {
              "id": 742,
              "name": "onVolumeChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1523,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onVolumeChangeCapture"
              }
            },
            {
              "id": 743,
              "name": "onWaiting",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1524,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWaiting"
              }
            },
            {
              "id": 744,
              "name": "onWaitingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1525,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWaitingCapture"
              }
            },
            {
              "id": 745,
              "name": "onWheel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1606,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWheel"
              }
            },
            {
              "id": 746,
              "name": "onWheelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1607,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLFormElement"
                    },
                    "name": "HTMLFormElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.onWheelCapture"
              }
            },
            {
              "id": 747,
              "name": "placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1938,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.placeholder"
              }
            },
            {
              "id": 748,
              "name": "prefix",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1957,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.prefix"
              }
            },
            {
              "id": 749,
              "name": "preventScrollReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Prevent the scroll position from resetting to the top of the viewport on\ncompletion of the navigation when using the <ScrollRestoration> component"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1270,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1270"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.preventScrollReset"
              }
            },
            {
              "id": 750,
              "name": "property",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1958,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.property"
              }
            },
            {
              "id": 751,
              "name": "radioGroup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1947,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.radioGroup"
              }
            },
            {
              "id": 752,
              "name": "rel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1959,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.rel"
              }
            },
            {
              "id": 753,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1264,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1264"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.relative"
              }
            },
            {
              "id": 754,
              "name": "reloadDocument",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Forces a full document navigation instead of client side routing + data\nfetch."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1311,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1311"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 755,
              "name": "replace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Replaces the current entry in the browser history stack when the form\nnavigates. Use this if you don't want the user to be able to click \"back\"\nto the page with the form on it."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1318,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1318"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 756,
              "name": "resource",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1960,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.resource"
              }
            },
            {
              "id": 757,
              "name": "results",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1975,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.results"
              }
            },
            {
              "id": 758,
              "name": "rev",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1961,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.rev"
              }
            },
            {
              "id": 759,
              "name": "role",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1950,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AriaRole"
                },
                "name": "AriaRole",
                "package": "@types/react",
                "qualifiedName": "React.AriaRole"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.role"
              }
            },
            {
              "id": 760,
              "name": "security",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1976,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.security"
              }
            },
            {
              "id": 761,
              "name": "slot",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1939,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.slot"
              }
            },
            {
              "id": 762,
              "name": "spellCheck",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1940,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.spellCheck"
              }
            },
            {
              "id": 763,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "State object to add to the history stack entry for this navigation"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1323,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1323"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 764,
              "name": "style",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1941,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CSSProperties"
                },
                "name": "CSSProperties",
                "package": "@types/react",
                "qualifiedName": "React.CSSProperties"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.style"
              }
            },
            {
              "id": 765,
              "name": "suppressContentEditableWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1923,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.suppressContentEditableWarning"
              }
            },
            {
              "id": 766,
              "name": "suppressHydrationWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1924,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.suppressHydrationWarning"
              }
            },
            {
              "id": 767,
              "name": "tabIndex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1942,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.tabIndex"
              }
            },
            {
              "id": 768,
              "name": "target",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2237,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.target"
              }
            },
            {
              "id": 769,
              "name": "title",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1943,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.title"
              }
            },
            {
              "id": 770,
              "name": "translate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1944,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "yes"
                  },
                  {
                    "type": "literal",
                    "value": "no"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.translate"
              }
            },
            {
              "id": 771,
              "name": "typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1962,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.typeof"
              }
            },
            {
              "id": 772,
              "name": "unselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1977,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "on"
                  },
                  {
                    "type": "literal",
                    "value": "off"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.unselectable"
              }
            },
            {
              "id": 773,
              "name": "unstable_viewTransition",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Enables a [View\nTransition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API)\nfor this navigation. To apply specific styles during the transition see\n"
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "unstable_useViewTransitionState",
                    "target": 2581
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1331,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1331"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 774,
              "name": "vocab",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1963,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "SharedFormProps.vocab"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
                503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515,
                516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528,
                529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541,
                542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554,
                555, 556, 557, 558, 561, 562, 563, 564, 565, 566, 567, 568, 569,
                570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582,
                583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595,
                596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608,
                609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621,
                622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634,
                635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647,
                648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660,
                661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673,
                674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686,
                687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699,
                700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712,
                713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725,
                726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738,
                739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751,
                752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764,
                765, 766, 767, 768, 769, 770, 771, 772, 773, 774
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1289,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1289"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
                "qualifiedName": "SharedFormProps"
              },
              "name": "SharedFormProps",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 775,
          "name": "GetScrollRestorationKeyFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Function signature for determining the key to be used in scroll restoration\nfor a given location"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 453,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L453"
            }
          ],
          "signatures": [
            {
              "id": 776,
              "name": "GetScrollRestorationKeyFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 454,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L454"
                }
              ],
              "parameters": [
                {
                  "id": 777,
                  "name": "location",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1163,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Location",
                    "package": "react-router"
                  }
                },
                {
                  "id": 778,
                  "name": "matches",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 1817,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        },
                        {
                          "type": "intrinsic",
                          "name": "unknown"
                        }
                      ],
                      "name": "UIMatch",
                      "package": "react-router"
                    }
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 779,
          "name": "HandleDataRequestFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/build.ts",
              "line": 36,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L36"
            }
          ],
          "signatures": [
            {
              "id": 780,
              "name": "HandleDataRequestFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 37,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L37"
                }
              ],
              "parameters": [
                {
                  "id": 781,
                  "name": "response",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Response"
                    },
                    "name": "Response",
                    "package": "typescript"
                  }
                },
                {
                  "id": 782,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                          "qualifiedName": "ActionFunctionArgs"
                        },
                        "name": "ActionFunctionArgs",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                          "qualifiedName": "LoaderFunctionArgs"
                        },
                        "name": "LoaderFunctionArgs",
                        "package": "react-router"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Response"
                    },
                    "name": "Response",
                    "package": "typescript"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Response"
                        },
                        "name": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 783,
          "name": "HandleDocumentRequestFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/build.ts",
              "line": 26,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L26"
            }
          ],
          "signatures": [
            {
              "id": 784,
              "name": "HandleDocumentRequestFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 27,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L27"
                }
              ],
              "parameters": [
                {
                  "id": 785,
                  "name": "request",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Request"
                    },
                    "name": "Request",
                    "package": "typescript"
                  }
                },
                {
                  "id": 786,
                  "name": "responseStatusCode",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 787,
                  "name": "responseHeaders",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Headers"
                    },
                    "name": "Headers",
                    "package": "typescript"
                  }
                },
                {
                  "id": 788,
                  "name": "context",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 183,
                    "name": "EntryContext",
                    "package": "react-router"
                  }
                },
                {
                  "id": 789,
                  "name": "loadContext",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 136,
                    "name": "AppLoadContext",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Response"
                    },
                    "name": "Response",
                    "package": "typescript"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Response"
                        },
                        "name": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 790,
          "name": "HandleErrorFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/build.ts",
              "line": 42,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L42"
            }
          ],
          "signatures": [
            {
              "id": 791,
              "name": "HandleErrorFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 43,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L43"
                }
              ],
              "parameters": [
                {
                  "id": 792,
                  "name": "error",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                },
                {
                  "id": 793,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                          "qualifiedName": "ActionFunctionArgs"
                        },
                        "name": "ActionFunctionArgs",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                          "qualifiedName": "LoaderFunctionArgs"
                        },
                        "name": "LoaderFunctionArgs",
                        "package": "react-router"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 794,
          "name": "HashRouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 795,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 613,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L613"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 796,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 614,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L614"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 797,
              "name": "window",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 615,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L615"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Window"
                },
                "name": "Window",
                "package": "typescript"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [795, 796, 797]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 612,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L612"
            }
          ]
        },
        {
          "id": 798,
          "name": "HeadersFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A function that returns HTTP headers to be used for a route. These headers\nwill be merged with (and take precedence over) headers from parent routes."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
              "line": 109,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L109"
            }
          ],
          "signatures": [
            {
              "id": 799,
              "name": "HeadersFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                  "line": 110,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L110"
                }
              ],
              "parameters": [
                {
                  "id": 800,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2074,
                    "name": "HeadersArgs",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "HeadersInit"
                },
                "name": "HeadersInit",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 801,
          "name": "HistoryRouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 802,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 659,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L659"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 803,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 660,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L660"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 804,
              "name": "history",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 661,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L661"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/history.ts",
                  "qualifiedName": "History"
                },
                "name": "History",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [802, 803, 804]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 658,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L658"
            }
          ]
        },
        {
          "id": 805,
          "name": "IndexRouteObject",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 806,
              "name": "Component",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 33,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L33"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 807,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 808,
              "name": "ErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 35,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L35"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 809,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 810,
              "name": "HydrateFallback",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 34,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L34"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 811,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 812,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 24,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L24"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 114,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ActionFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 813,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 20,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L20"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 814,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 29,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L29"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "undefined"
              }
            },
            {
              "id": 815,
              "name": "element",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 30,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L30"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 816,
              "name": "errorElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 32,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L32"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 817,
              "name": "handle",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 27,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L27"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 818,
              "name": "hasErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 25,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L25"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 819,
              "name": "hydrateFallbackElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 31,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L31"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 820,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 22,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L22"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 821,
              "name": "index",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 28,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L28"
                }
              ],
              "type": {
                "type": "literal",
                "value": true
              }
            },
            {
              "id": 822,
              "name": "lazy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 36,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L36"
                }
              ],
              "type": {
                "type": "reference",
                "target": 868,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2204,
                    "name": "RouteObject",
                    "package": "react-router"
                  }
                ],
                "name": "LazyRouteFunction",
                "package": "react-router"
              }
            },
            {
              "id": 823,
              "name": "loader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 23,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L23"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 2100,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "LoaderFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 824,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 21,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L21"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 825,
              "name": "shouldRevalidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 26,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L26"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1716,
                "name": "ShouldRevalidateFunction",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                806, 808, 810, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821,
                822, 823, 824, 825
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 19,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L19"
            }
          ]
        },
        {
          "id": 826,
          "name": "IndexRouteProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 827,
              "name": "Component",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 354,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L354"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 828,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 829,
              "name": "ErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 356,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L356"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 830,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 831,
              "name": "HydrateFallback",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 355,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L355"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 832,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 833,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 345,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L345"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 114,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ActionFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 834,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 340,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L340"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 835,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 350,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L350"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "undefined"
              }
            },
            {
              "id": 836,
              "name": "element",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 351,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L351"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 837,
              "name": "errorElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 353,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L353"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 838,
              "name": "handle",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 348,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L348"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 839,
              "name": "hasErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 346,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L346"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 840,
              "name": "hydrateFallbackElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 352,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L352"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 841,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 342,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L342"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 842,
              "name": "index",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 349,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L349"
                }
              ],
              "type": {
                "type": "literal",
                "value": true
              }
            },
            {
              "id": 843,
              "name": "lazy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 343,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L343"
                }
              ],
              "type": {
                "type": "reference",
                "target": 868,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 805,
                    "name": "IndexRouteObject",
                    "package": "react-router"
                  }
                ],
                "name": "LazyRouteFunction",
                "package": "react-router"
              }
            },
            {
              "id": 844,
              "name": "loader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 344,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L344"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 2100,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "LoaderFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 845,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 341,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L341"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 846,
              "name": "shouldRevalidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 347,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L347"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1716,
                "name": "ShouldRevalidateFunction",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                827, 829, 831, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842,
                843, 844, 845, 846
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 339,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L339"
            }
          ]
        },
        {
          "id": 847,
          "name": "LayoutRouteProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 848,
              "name": "Component",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 326,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L326"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 849,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1572,
                "name": "PathRouteProps.Component"
              }
            },
            {
              "id": 850,
              "name": "ErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 328,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L328"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 851,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1574,
                "name": "PathRouteProps.ErrorBoundary"
              }
            },
            {
              "id": 852,
              "name": "HydrateFallback",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 327,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L327"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 853,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1576,
                "name": "PathRouteProps.HydrateFallback"
              }
            },
            {
              "id": 854,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 317,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L317"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 114,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ActionFunction",
                    "package": "react-router"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1578,
                "name": "PathRouteProps.action"
              }
            },
            {
              "id": 855,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 312,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L312"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1579,
                "name": "PathRouteProps.caseSensitive"
              }
            },
            {
              "id": 856,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 322,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L322"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1580,
                "name": "PathRouteProps.children"
              }
            },
            {
              "id": 857,
              "name": "element",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 323,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L323"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1581,
                "name": "PathRouteProps.element"
              }
            },
            {
              "id": 858,
              "name": "errorElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 325,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L325"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1582,
                "name": "PathRouteProps.errorElement"
              }
            },
            {
              "id": 859,
              "name": "handle",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 320,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L320"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1583,
                "name": "PathRouteProps.handle"
              }
            },
            {
              "id": 860,
              "name": "hasErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 318,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L318"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1584,
                "name": "PathRouteProps.hasErrorBoundary"
              }
            },
            {
              "id": 861,
              "name": "hydrateFallbackElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 324,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L324"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1585,
                "name": "PathRouteProps.hydrateFallbackElement"
              }
            },
            {
              "id": 862,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 314,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L314"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1586,
                "name": "PathRouteProps.id"
              }
            },
            {
              "id": 863,
              "name": "index",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 321,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L321"
                }
              ],
              "type": {
                "type": "literal",
                "value": false
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1587,
                "name": "PathRouteProps.index"
              }
            },
            {
              "id": 864,
              "name": "lazy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 315,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L315"
                }
              ],
              "type": {
                "type": "reference",
                "target": 868,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1525,
                    "name": "NonIndexRouteObject",
                    "package": "react-router"
                  }
                ],
                "name": "LazyRouteFunction",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1588,
                "name": "PathRouteProps.lazy"
              }
            },
            {
              "id": 865,
              "name": "loader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 316,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L316"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 2100,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "LoaderFunction",
                    "package": "react-router"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1589,
                "name": "PathRouteProps.loader"
              }
            },
            {
              "id": 866,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 313,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L313"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1590,
                "name": "PathRouteProps.path"
              }
            },
            {
              "id": 867,
              "name": "shouldRevalidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 319,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L319"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1716,
                "name": "ShouldRevalidateFunction",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1591,
                "name": "PathRouteProps.shouldRevalidate"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                848, 850, 852, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863,
                864, 865, 866, 867
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 334,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L334"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 1571,
              "name": "PathRouteProps",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 868,
          "name": "LazyRouteFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "lazy() function to load a route definition, which can add non-matching\nrelated properties to a route"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 304,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L304"
            }
          ],
          "typeParameters": [
            {
              "id": 869,
              "name": "R",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": 1939,
                "name": "AgnosticRouteObject",
                "package": "react-router"
              }
            }
          ],
          "signatures": [
            {
              "id": 870,
              "name": "LazyRouteFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 305,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L305"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Exclude"
                    },
                    "typeArguments": [
                      {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                            "qualifiedName": "Exclude"
                          },
                          "typeArguments": [
                            {
                              "type": "typeOperator",
                              "operator": "keyof",
                              "target": {
                                "type": "reference",
                                "target": 869,
                                "name": "R",
                                "package": "react-router",
                                "qualifiedName": "LazyRouteFunction.R",
                                "refersToTypeParameter": true
                              }
                            },
                            {
                              "type": "reference",
                              "target": {
                                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                "qualifiedName": "ImmutableRouteKey"
                              },
                              "name": "ImmutableRouteKey",
                              "package": "react-router"
                            }
                          ],
                          "name": "Exclude",
                          "package": "typescript"
                        },
                        "objectType": {
                          "type": "mapped",
                          "parameter": "K",
                          "parameterType": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "string"
                              },
                              {
                                "type": "intrinsic",
                                "name": "number"
                              },
                              {
                                "type": "intrinsic",
                                "name": "symbol"
                              }
                            ]
                          },
                          "templateType": {
                            "type": "conditional",
                            "checkType": {
                              "type": "reference",
                              "target": {
                                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                "qualifiedName": "K"
                              },
                              "name": "K",
                              "package": "react-router",
                              "refersToTypeParameter": true
                            },
                            "extendsType": {
                              "type": "reference",
                              "target": {
                                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                "qualifiedName": "Exclude"
                              },
                              "typeArguments": [
                                {
                                  "type": "typeOperator",
                                  "operator": "keyof",
                                  "target": {
                                    "type": "reference",
                                    "target": 869,
                                    "name": "R",
                                    "package": "react-router",
                                    "qualifiedName": "LazyRouteFunction.R",
                                    "refersToTypeParameter": true
                                  }
                                },
                                {
                                  "type": "reference",
                                  "target": {
                                    "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                    "qualifiedName": "ImmutableRouteKey"
                                  },
                                  "name": "ImmutableRouteKey",
                                  "package": "react-router"
                                }
                              ],
                              "name": "Exclude",
                              "package": "typescript"
                            },
                            "trueType": {
                              "type": "intersection",
                              "types": [
                                {
                                  "type": "reference",
                                  "target": {
                                    "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                    "qualifiedName": "Omit"
                                  },
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "target": {
                                        "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                        "qualifiedName": "Omit"
                                      },
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "target": 869,
                                          "name": "R",
                                          "package": "react-router",
                                          "qualifiedName": "LazyRouteFunction.R",
                                          "refersToTypeParameter": true
                                        },
                                        {
                                          "type": "reference",
                                          "target": {
                                            "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                            "qualifiedName": "ImmutableRouteKey"
                                          },
                                          "name": "ImmutableRouteKey",
                                          "package": "react-router"
                                        }
                                      ],
                                      "name": "Omit",
                                      "package": "typescript"
                                    },
                                    {
                                      "type": "reference",
                                      "target": {
                                        "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                        "qualifiedName": "K"
                                      },
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "target": {
                                            "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                            "qualifiedName": "K"
                                          },
                                          "name": "K",
                                          "package": "react-router",
                                          "refersToTypeParameter": true
                                        }
                                      ],
                                      "name": "K",
                                      "package": "react-router",
                                      "refersToTypeParameter": true
                                    }
                                  ],
                                  "name": "Omit",
                                  "package": "typescript"
                                },
                                {
                                  "type": "reference",
                                  "target": {
                                    "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                    "qualifiedName": "Required"
                                  },
                                  "typeArguments": [
                                    {
                                      "type": "reference",
                                      "target": {
                                        "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                        "qualifiedName": "Pick"
                                      },
                                      "typeArguments": [
                                        {
                                          "type": "reference",
                                          "target": {
                                            "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                            "qualifiedName": "Omit"
                                          },
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "target": 869,
                                              "name": "R",
                                              "package": "react-router",
                                              "qualifiedName": "LazyRouteFunction.R",
                                              "refersToTypeParameter": true
                                            },
                                            {
                                              "type": "reference",
                                              "target": {
                                                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                                "qualifiedName": "ImmutableRouteKey"
                                              },
                                              "name": "ImmutableRouteKey",
                                              "package": "react-router"
                                            }
                                          ],
                                          "name": "Omit",
                                          "package": "typescript"
                                        },
                                        {
                                          "type": "reference",
                                          "target": {
                                            "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                            "qualifiedName": "K"
                                          },
                                          "typeArguments": [
                                            {
                                              "type": "reference",
                                              "target": {
                                                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                                "qualifiedName": "K"
                                              },
                                              "name": "K",
                                              "package": "react-router",
                                              "refersToTypeParameter": true
                                            }
                                          ],
                                          "name": "K",
                                          "package": "react-router",
                                          "refersToTypeParameter": true
                                        }
                                      ],
                                      "name": "Pick",
                                      "package": "typescript"
                                    }
                                  ],
                                  "name": "Required",
                                  "package": "typescript"
                                }
                              ]
                            },
                            "falseType": {
                              "type": "intrinsic",
                              "name": "never"
                            }
                          }
                        }
                      },
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ],
                    "name": "Exclude",
                    "package": "typescript"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 871,
          "name": "LinkProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 872,
              "name": "about",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1953,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.about"
              }
            },
            {
              "id": 873,
              "name": "accessKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1927,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.accessKey"
              }
            },
            {
              "id": 874,
              "name": "aria-activedescendant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1636,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-activedescendant"
              }
            },
            {
              "id": 875,
              "name": "aria-atomic",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1638,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-atomic"
              }
            },
            {
              "id": 876,
              "name": "aria-autocomplete",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1643,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "list"
                  },
                  {
                    "type": "literal",
                    "value": "inline"
                  },
                  {
                    "type": "literal",
                    "value": "both"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-autocomplete"
              }
            },
            {
              "id": 877,
              "name": "aria-braillelabel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-label."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1649,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-braillelabel"
              }
            },
            {
              "id": 878,
              "name": "aria-brailleroledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-roledescription."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1654,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-brailleroledescription"
              }
            },
            {
              "id": 879,
              "name": "aria-busy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1655,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-busy"
              }
            },
            {
              "id": 880,
              "name": "aria-checked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1660,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-checked"
              }
            },
            {
              "id": 881,
              "name": "aria-colcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of columns in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1665,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colcount"
              }
            },
            {
              "id": 882,
              "name": "aria-colindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1670,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colindex"
              }
            },
            {
              "id": 883,
              "name": "aria-colindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-colindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1675,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colindextext"
              }
            },
            {
              "id": 884,
              "name": "aria-colspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1680,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colspan"
              }
            },
            {
              "id": 885,
              "name": "aria-controls",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-owns."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1685,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-controls"
              }
            },
            {
              "id": 886,
              "name": "aria-current",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the element that represents the current item within a container or set of related elements."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1687,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "time"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "location"
                  },
                  {
                    "type": "literal",
                    "value": "page"
                  },
                  {
                    "type": "literal",
                    "value": "step"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "date"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-current"
              }
            },
            {
              "id": 887,
              "name": "aria-describedby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that describes the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1692,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-describedby"
              }
            },
            {
              "id": 888,
              "name": "aria-description",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that describes or annotates the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "related aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1697,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-description"
              }
            },
            {
              "id": 889,
              "name": "aria-details",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides a detailed, extended description for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1702,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-details"
              }
            },
            {
              "id": 890,
              "name": "aria-disabled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-hidden"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-readonly."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1707,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-disabled"
              }
            },
            {
              "id": 891,
              "name": "aria-dropeffect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1712,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "link"
                  },
                  {
                    "type": "literal",
                    "value": "copy"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "execute"
                  },
                  {
                    "type": "literal",
                    "value": "move"
                  },
                  {
                    "type": "literal",
                    "value": "popup"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-dropeffect"
              }
            },
            {
              "id": 892,
              "name": "aria-errormessage",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides an error message for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-invalid"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1717,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-errormessage"
              }
            },
            {
              "id": 893,
              "name": "aria-expanded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1719,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-expanded"
              }
            },
            {
              "id": 894,
              "name": "aria-flowto",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1724,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-flowto"
              }
            },
            {
              "id": 895,
              "name": "aria-grabbed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1729,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-grabbed"
              }
            },
            {
              "id": 896,
              "name": "aria-haspopup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1731,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "dialog"
                  },
                  {
                    "type": "literal",
                    "value": "menu"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grid"
                  },
                  {
                    "type": "literal",
                    "value": "listbox"
                  },
                  {
                    "type": "literal",
                    "value": "tree"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-haspopup"
              }
            },
            {
              "id": 897,
              "name": "aria-hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element is exposed to an accessibility API."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1736,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-hidden"
              }
            },
            {
              "id": 898,
              "name": "aria-invalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the entered value does not conform to the format expected by the application."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-errormessage."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1741,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grammar"
                  },
                  {
                    "type": "literal",
                    "value": "spelling"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-invalid"
              }
            },
            {
              "id": 899,
              "name": "aria-keyshortcuts",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1743,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-keyshortcuts"
              }
            },
            {
              "id": 900,
              "name": "aria-label",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1748,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-label"
              }
            },
            {
              "id": 901,
              "name": "aria-labelledby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1753,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-labelledby"
              }
            },
            {
              "id": 902,
              "name": "aria-level",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the hierarchical level of an element within a structure."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1755,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-level"
              }
            },
            {
              "id": 903,
              "name": "aria-live",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1757,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "off"
                  },
                  {
                    "type": "literal",
                    "value": "assertive"
                  },
                  {
                    "type": "literal",
                    "value": "polite"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-live"
              }
            },
            {
              "id": 904,
              "name": "aria-modal",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether an element is modal when displayed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1759,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-modal"
              }
            },
            {
              "id": 905,
              "name": "aria-multiline",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1761,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-multiline"
              }
            },
            {
              "id": 906,
              "name": "aria-multiselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the user may select more than one item from the current selectable descendants."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1763,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-multiselectable"
              }
            },
            {
              "id": 907,
              "name": "aria-orientation",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1765,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "horizontal"
                  },
                  {
                    "type": "literal",
                    "value": "vertical"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-orientation"
              }
            },
            {
              "id": 908,
              "name": "aria-owns",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-controls."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1771,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-owns"
              }
            },
            {
              "id": 909,
              "name": "aria-placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1776,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-placeholder"
              }
            },
            {
              "id": 910,
              "name": "aria-posinset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-setsize."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1781,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-posinset"
              }
            },
            {
              "id": 911,
              "name": "aria-pressed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"pressed\" state of toggle buttons."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1786,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-pressed"
              }
            },
            {
              "id": 912,
              "name": "aria-readonly",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is not editable, but is otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1791,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-readonly"
              }
            },
            {
              "id": 913,
              "name": "aria-relevant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-atomic."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1796,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "additions"
                  },
                  {
                    "type": "literal",
                    "value": "additions removals"
                  },
                  {
                    "type": "literal",
                    "value": "additions text"
                  },
                  {
                    "type": "literal",
                    "value": "all"
                  },
                  {
                    "type": "literal",
                    "value": "removals"
                  },
                  {
                    "type": "literal",
                    "value": "removals additions"
                  },
                  {
                    "type": "literal",
                    "value": "removals text"
                  },
                  {
                    "type": "literal",
                    "value": "text additions"
                  },
                  {
                    "type": "literal",
                    "value": "text removals"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-relevant"
              }
            },
            {
              "id": 914,
              "name": "aria-required",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that user input is required on the element before a form may be submitted."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1798,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-required"
              }
            },
            {
              "id": 915,
              "name": "aria-roledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized description for the role of an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1800,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-roledescription"
              }
            },
            {
              "id": 916,
              "name": "aria-rowcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of rows in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1805,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowcount"
              }
            },
            {
              "id": 917,
              "name": "aria-rowindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1810,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowindex"
              }
            },
            {
              "id": 918,
              "name": "aria-rowindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-rowindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1815,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowindextext"
              }
            },
            {
              "id": 919,
              "name": "aria-rowspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1820,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowspan"
              }
            },
            {
              "id": 920,
              "name": "aria-selected",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"selected\" state of various widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1825,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-selected"
              }
            },
            {
              "id": 921,
              "name": "aria-setsize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-posinset."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1830,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-setsize"
              }
            },
            {
              "id": 922,
              "name": "aria-sort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1832,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "ascending"
                  },
                  {
                    "type": "literal",
                    "value": "descending"
                  },
                  {
                    "type": "literal",
                    "value": "other"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-sort"
              }
            },
            {
              "id": 923,
              "name": "aria-valuemax",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the maximum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1834,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuemax"
              }
            },
            {
              "id": 924,
              "name": "aria-valuemin",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the minimum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1836,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuemin"
              }
            },
            {
              "id": 925,
              "name": "aria-valuenow",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the current value for a range widget."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-valuetext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1841,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuenow"
              }
            },
            {
              "id": 926,
              "name": "aria-valuetext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1843,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuetext"
              }
            },
            {
              "id": 927,
              "name": "autoCapitalize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1966,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoCapitalize"
              }
            },
            {
              "id": 928,
              "name": "autoCorrect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1967,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoCorrect"
              }
            },
            {
              "id": 929,
              "name": "autoFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1928,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoFocus"
              }
            },
            {
              "id": 930,
              "name": "autoSave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1968,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoSave"
              }
            },
            {
              "id": 931,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1420,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.children"
              }
            },
            {
              "id": 932,
              "name": "className",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1929,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.className"
              }
            },
            {
              "id": 933,
              "name": "color",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1969,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.color"
              }
            },
            {
              "id": 934,
              "name": "content",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1954,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.content"
              }
            },
            {
              "id": 935,
              "name": "contentEditable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1930,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "inherit"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "Booleanish"
                    },
                    "name": "Booleanish",
                    "package": "@types/react"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.contentEditable"
              }
            },
            {
              "id": 936,
              "name": "contextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1931,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.contextMenu"
              }
            },
            {
              "id": 937,
              "name": "dangerouslySetInnerHTML",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1421,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 938,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 939,
                      "name": "__html",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "line": 1424,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
                              "qualifiedName": "TrustedHTML"
                            },
                            "name": "TrustedHTML",
                            "package": "@types/react"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [939]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "line": 1421,
                      "character": 34
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.dangerouslySetInnerHTML"
              }
            },
            {
              "id": 940,
              "name": "datatype",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1955,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.datatype"
              }
            },
            {
              "id": 941,
              "name": "defaultChecked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1921,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.defaultChecked"
              }
            },
            {
              "id": 942,
              "name": "defaultValue",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1922,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.defaultValue"
              }
            },
            {
              "id": 943,
              "name": "dir",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1932,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.dir"
              }
            },
            {
              "id": 944,
              "name": "discover",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the link discovery behavior\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link /> // default (\"render\")\n<Link discover=\"render\" />\n<Link discover=\"none\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n- **render** - default, discover the route when the link renders\n- **none** - don't eagerly discover, only discover if the link is clicked"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 717,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L717"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "qualifiedName": "DiscoverBehavior"
                },
                "name": "DiscoverBehavior",
                "package": "react-router"
              }
            },
            {
              "id": 945,
              "name": "download",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2130,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.download"
              }
            },
            {
              "id": 946,
              "name": "draggable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1933,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.draggable"
              }
            },
            {
              "id": 947,
              "name": "hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1934,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.hidden"
              }
            },
            {
              "id": 948,
              "name": "hrefLang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2132,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.hrefLang"
              }
            },
            {
              "id": 949,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1935,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.id"
              }
            },
            {
              "id": 950,
              "name": "inlist",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1956,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.inlist"
              }
            },
            {
              "id": 951,
              "name": "inputMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1984,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "search"
                  },
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "url"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "tel"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  },
                  {
                    "type": "literal",
                    "value": "numeric"
                  },
                  {
                    "type": "literal",
                    "value": "decimal"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.inputMode"
              }
            },
            {
              "id": 952,
              "name": "is",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1989,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.is"
              }
            },
            {
              "id": 953,
              "name": "itemID",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemID"
              }
            },
            {
              "id": 954,
              "name": "itemProp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1970,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemProp"
              }
            },
            {
              "id": 955,
              "name": "itemRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1974,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemRef"
              }
            },
            {
              "id": 956,
              "name": "itemScope",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1971,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemScope"
              }
            },
            {
              "id": 957,
              "name": "itemType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1972,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemType"
              }
            },
            {
              "id": 958,
              "name": "lang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1936,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.lang"
              }
            },
            {
              "id": 959,
              "name": "media",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2133,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.media"
              }
            },
            {
              "id": 960,
              "name": "nonce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1937,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.nonce"
              }
            },
            {
              "id": 961,
              "name": "onAbort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1480,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAbort"
              }
            },
            {
              "id": 962,
              "name": "onAbortCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1481,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAbortCapture"
              }
            },
            {
              "id": 963,
              "name": "onAnimationEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1612,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationEnd"
              }
            },
            {
              "id": 964,
              "name": "onAnimationEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1613,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationEndCapture"
              }
            },
            {
              "id": 965,
              "name": "onAnimationIteration",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1614,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationIteration"
              }
            },
            {
              "id": 966,
              "name": "onAnimationIterationCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1615,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationIterationCapture"
              }
            },
            {
              "id": 967,
              "name": "onAnimationStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1610,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationStart"
              }
            },
            {
              "id": 968,
              "name": "onAnimationStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1611,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationStartCapture"
              }
            },
            {
              "id": 969,
              "name": "onAuxClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1528,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAuxClick"
              }
            },
            {
              "id": 970,
              "name": "onAuxClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1529,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAuxClickCapture"
              }
            },
            {
              "id": 971,
              "name": "onBeforeInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1452,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBeforeInput"
              }
            },
            {
              "id": 972,
              "name": "onBeforeInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1453,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBeforeInputCapture"
              }
            },
            {
              "id": 973,
              "name": "onBlur",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1446,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBlur"
              }
            },
            {
              "id": 974,
              "name": "onBlurCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1447,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBlurCapture"
              }
            },
            {
              "id": 975,
              "name": "onCanPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1482,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlay"
              }
            },
            {
              "id": 976,
              "name": "onCanPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1483,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlayCapture"
              }
            },
            {
              "id": 977,
              "name": "onCanPlayThrough",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1484,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlayThrough"
              }
            },
            {
              "id": 978,
              "name": "onCanPlayThroughCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1485,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlayThroughCapture"
              }
            },
            {
              "id": 979,
              "name": "onChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1450,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onChange"
              }
            },
            {
              "id": 980,
              "name": "onChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1451,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onChangeCapture"
              }
            },
            {
              "id": 981,
              "name": "onClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1530,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onClick"
              }
            },
            {
              "id": 982,
              "name": "onClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1531,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onClickCapture"
              }
            },
            {
              "id": 983,
              "name": "onCompositionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1436,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionEnd"
              }
            },
            {
              "id": 984,
              "name": "onCompositionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1437,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionEndCapture"
              }
            },
            {
              "id": 985,
              "name": "onCompositionStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1438,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionStart"
              }
            },
            {
              "id": 986,
              "name": "onCompositionStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1439,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionStartCapture"
              }
            },
            {
              "id": 987,
              "name": "onCompositionUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1440,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionUpdate"
              }
            },
            {
              "id": 988,
              "name": "onCompositionUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1441,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionUpdateCapture"
              }
            },
            {
              "id": 989,
              "name": "onContextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1532,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onContextMenu"
              }
            },
            {
              "id": 990,
              "name": "onContextMenuCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1533,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onContextMenuCapture"
              }
            },
            {
              "id": 991,
              "name": "onCopy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1428,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCopy"
              }
            },
            {
              "id": 992,
              "name": "onCopyCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1429,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCopyCapture"
              }
            },
            {
              "id": 993,
              "name": "onCut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1430,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCut"
              }
            },
            {
              "id": 994,
              "name": "onCutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1431,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCutCapture"
              }
            },
            {
              "id": 995,
              "name": "onDoubleClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1534,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDoubleClick"
              }
            },
            {
              "id": 996,
              "name": "onDoubleClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1535,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDoubleClickCapture"
              }
            },
            {
              "id": 997,
              "name": "onDrag",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1536,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDrag"
              }
            },
            {
              "id": 998,
              "name": "onDragCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1537,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragCapture"
              }
            },
            {
              "id": 999,
              "name": "onDragEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1538,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEnd"
              }
            },
            {
              "id": 1000,
              "name": "onDragEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1539,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEndCapture"
              }
            },
            {
              "id": 1001,
              "name": "onDragEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1540,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEnter"
              }
            },
            {
              "id": 1002,
              "name": "onDragEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1541,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEnterCapture"
              }
            },
            {
              "id": 1003,
              "name": "onDragExit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1542,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragExit"
              }
            },
            {
              "id": 1004,
              "name": "onDragExitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1543,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragExitCapture"
              }
            },
            {
              "id": 1005,
              "name": "onDragLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1544,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragLeave"
              }
            },
            {
              "id": 1006,
              "name": "onDragLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1545,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragLeaveCapture"
              }
            },
            {
              "id": 1007,
              "name": "onDragOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1546,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragOver"
              }
            },
            {
              "id": 1008,
              "name": "onDragOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1547,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragOverCapture"
              }
            },
            {
              "id": 1009,
              "name": "onDragStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1548,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragStart"
              }
            },
            {
              "id": 1010,
              "name": "onDragStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1549,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragStartCapture"
              }
            },
            {
              "id": 1011,
              "name": "onDrop",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1550,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDrop"
              }
            },
            {
              "id": 1012,
              "name": "onDropCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1551,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDropCapture"
              }
            },
            {
              "id": 1013,
              "name": "onDurationChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1486,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDurationChange"
              }
            },
            {
              "id": 1014,
              "name": "onDurationChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1487,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDurationChangeCapture"
              }
            },
            {
              "id": 1015,
              "name": "onEmptied",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1488,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEmptied"
              }
            },
            {
              "id": 1016,
              "name": "onEmptiedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1489,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEmptiedCapture"
              }
            },
            {
              "id": 1017,
              "name": "onEncrypted",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1490,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEncrypted"
              }
            },
            {
              "id": 1018,
              "name": "onEncryptedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1491,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEncryptedCapture"
              }
            },
            {
              "id": 1019,
              "name": "onEnded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1492,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEnded"
              }
            },
            {
              "id": 1020,
              "name": "onEndedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1493,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEndedCapture"
              }
            },
            {
              "id": 1021,
              "name": "onError",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1466,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onError"
              }
            },
            {
              "id": 1022,
              "name": "onErrorCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1467,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onErrorCapture"
              }
            },
            {
              "id": 1023,
              "name": "onFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1444,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onFocus"
              }
            },
            {
              "id": 1024,
              "name": "onFocusCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1445,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onFocusCapture"
              }
            },
            {
              "id": 1025,
              "name": "onGotPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1596,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onGotPointerCapture"
              }
            },
            {
              "id": 1026,
              "name": "onGotPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1597,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onGotPointerCaptureCapture"
              }
            },
            {
              "id": 1027,
              "name": "onInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1454,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInput"
              }
            },
            {
              "id": 1028,
              "name": "onInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1455,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInputCapture"
              }
            },
            {
              "id": 1029,
              "name": "onInvalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1460,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInvalid"
              }
            },
            {
              "id": 1030,
              "name": "onInvalidCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1461,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInvalidCapture"
              }
            },
            {
              "id": 1031,
              "name": "onKeyDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1470,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyDown"
              }
            },
            {
              "id": 1032,
              "name": "onKeyDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1471,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyDownCapture"
              }
            },
            {
              "id": 1033,
              "name": "onKeyPress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1473,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyPress"
              }
            },
            {
              "id": 1034,
              "name": "onKeyPressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1475,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyPressCapture"
              }
            },
            {
              "id": 1035,
              "name": "onKeyUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1476,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyUp"
              }
            },
            {
              "id": 1036,
              "name": "onKeyUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1477,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyUpCapture"
              }
            },
            {
              "id": 1037,
              "name": "onLoad",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1464,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoad"
              }
            },
            {
              "id": 1038,
              "name": "onLoadCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1465,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadCapture"
              }
            },
            {
              "id": 1039,
              "name": "onLoadStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1498,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadStart"
              }
            },
            {
              "id": 1040,
              "name": "onLoadStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1499,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadStartCapture"
              }
            },
            {
              "id": 1041,
              "name": "onLoadedData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1494,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedData"
              }
            },
            {
              "id": 1042,
              "name": "onLoadedDataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1495,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedDataCapture"
              }
            },
            {
              "id": 1043,
              "name": "onLoadedMetadata",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1496,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedMetadata"
              }
            },
            {
              "id": 1044,
              "name": "onLoadedMetadataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1497,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedMetadataCapture"
              }
            },
            {
              "id": 1045,
              "name": "onLostPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1598,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLostPointerCapture"
              }
            },
            {
              "id": 1046,
              "name": "onLostPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1599,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLostPointerCaptureCapture"
              }
            },
            {
              "id": 1047,
              "name": "onMouseDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1552,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseDown"
              }
            },
            {
              "id": 1048,
              "name": "onMouseDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1553,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseDownCapture"
              }
            },
            {
              "id": 1049,
              "name": "onMouseEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1554,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseEnter"
              }
            },
            {
              "id": 1050,
              "name": "onMouseLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1555,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseLeave"
              }
            },
            {
              "id": 1051,
              "name": "onMouseMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1556,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseMove"
              }
            },
            {
              "id": 1052,
              "name": "onMouseMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1557,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseMoveCapture"
              }
            },
            {
              "id": 1053,
              "name": "onMouseOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1558,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOut"
              }
            },
            {
              "id": 1054,
              "name": "onMouseOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1559,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOutCapture"
              }
            },
            {
              "id": 1055,
              "name": "onMouseOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1560,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOver"
              }
            },
            {
              "id": 1056,
              "name": "onMouseOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1561,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOverCapture"
              }
            },
            {
              "id": 1057,
              "name": "onMouseUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1562,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseUp"
              }
            },
            {
              "id": 1058,
              "name": "onMouseUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1563,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseUpCapture"
              }
            },
            {
              "id": 1059,
              "name": "onPaste",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1432,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPaste"
              }
            },
            {
              "id": 1060,
              "name": "onPasteCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1433,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPasteCapture"
              }
            },
            {
              "id": 1061,
              "name": "onPause",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1500,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPause"
              }
            },
            {
              "id": 1062,
              "name": "onPauseCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1501,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPauseCapture"
              }
            },
            {
              "id": 1063,
              "name": "onPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1502,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlay"
              }
            },
            {
              "id": 1064,
              "name": "onPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1503,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlayCapture"
              }
            },
            {
              "id": 1065,
              "name": "onPlaying",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1504,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlaying"
              }
            },
            {
              "id": 1066,
              "name": "onPlayingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1505,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlayingCapture"
              }
            },
            {
              "id": 1067,
              "name": "onPointerCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1586,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerCancel"
              }
            },
            {
              "id": 1068,
              "name": "onPointerCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1587,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerCancelCapture"
              }
            },
            {
              "id": 1069,
              "name": "onPointerDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1580,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerDown"
              }
            },
            {
              "id": 1070,
              "name": "onPointerDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1581,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerDownCapture"
              }
            },
            {
              "id": 1071,
              "name": "onPointerEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1588,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerEnter"
              }
            },
            {
              "id": 1072,
              "name": "onPointerEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1589,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerEnterCapture"
              }
            },
            {
              "id": 1073,
              "name": "onPointerLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1590,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerLeave"
              }
            },
            {
              "id": 1074,
              "name": "onPointerLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1591,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerLeaveCapture"
              }
            },
            {
              "id": 1075,
              "name": "onPointerMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1582,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerMove"
              }
            },
            {
              "id": 1076,
              "name": "onPointerMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1583,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerMoveCapture"
              }
            },
            {
              "id": 1077,
              "name": "onPointerOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1594,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOut"
              }
            },
            {
              "id": 1078,
              "name": "onPointerOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1595,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOutCapture"
              }
            },
            {
              "id": 1079,
              "name": "onPointerOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1592,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOver"
              }
            },
            {
              "id": 1080,
              "name": "onPointerOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1593,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOverCapture"
              }
            },
            {
              "id": 1081,
              "name": "onPointerUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1584,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerUp"
              }
            },
            {
              "id": 1082,
              "name": "onPointerUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1585,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerUpCapture"
              }
            },
            {
              "id": 1083,
              "name": "onProgress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1506,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onProgress"
              }
            },
            {
              "id": 1084,
              "name": "onProgressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1507,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onProgressCapture"
              }
            },
            {
              "id": 1085,
              "name": "onRateChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1508,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onRateChange"
              }
            },
            {
              "id": 1086,
              "name": "onRateChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1509,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onRateChangeCapture"
              }
            },
            {
              "id": 1087,
              "name": "onReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1456,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onReset"
              }
            },
            {
              "id": 1088,
              "name": "onResetCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1457,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onResetCapture"
              }
            },
            {
              "id": 1089,
              "name": "onResize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1510,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onResize"
              }
            },
            {
              "id": 1090,
              "name": "onResizeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1511,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onResizeCapture"
              }
            },
            {
              "id": 1091,
              "name": "onScroll",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1602,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onScroll"
              }
            },
            {
              "id": 1092,
              "name": "onScrollCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1603,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onScrollCapture"
              }
            },
            {
              "id": 1093,
              "name": "onSeeked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1512,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeeked"
              }
            },
            {
              "id": 1094,
              "name": "onSeekedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1513,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeekedCapture"
              }
            },
            {
              "id": 1095,
              "name": "onSeeking",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1514,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeeking"
              }
            },
            {
              "id": 1096,
              "name": "onSeekingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1515,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeekingCapture"
              }
            },
            {
              "id": 1097,
              "name": "onSelect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1566,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSelect"
              }
            },
            {
              "id": 1098,
              "name": "onSelectCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1567,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSelectCapture"
              }
            },
            {
              "id": 1099,
              "name": "onStalled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1516,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onStalled"
              }
            },
            {
              "id": 1100,
              "name": "onStalledCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1517,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onStalledCapture"
              }
            },
            {
              "id": 1101,
              "name": "onSubmit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1458,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSubmit"
              }
            },
            {
              "id": 1102,
              "name": "onSubmitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1459,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSubmitCapture"
              }
            },
            {
              "id": 1103,
              "name": "onSuspend",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1518,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSuspend"
              }
            },
            {
              "id": 1104,
              "name": "onSuspendCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1519,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSuspendCapture"
              }
            },
            {
              "id": 1105,
              "name": "onTimeUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1520,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTimeUpdate"
              }
            },
            {
              "id": 1106,
              "name": "onTimeUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1521,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTimeUpdateCapture"
              }
            },
            {
              "id": 1107,
              "name": "onTouchCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1570,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchCancel"
              }
            },
            {
              "id": 1108,
              "name": "onTouchCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1571,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchCancelCapture"
              }
            },
            {
              "id": 1109,
              "name": "onTouchEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1572,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchEnd"
              }
            },
            {
              "id": 1110,
              "name": "onTouchEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1573,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchEndCapture"
              }
            },
            {
              "id": 1111,
              "name": "onTouchMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1574,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchMove"
              }
            },
            {
              "id": 1112,
              "name": "onTouchMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1575,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchMoveCapture"
              }
            },
            {
              "id": 1113,
              "name": "onTouchStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1576,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchStart"
              }
            },
            {
              "id": 1114,
              "name": "onTouchStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1577,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchStartCapture"
              }
            },
            {
              "id": 1115,
              "name": "onTransitionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1618,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTransitionEnd"
              }
            },
            {
              "id": 1116,
              "name": "onTransitionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1619,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTransitionEndCapture"
              }
            },
            {
              "id": 1117,
              "name": "onVolumeChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1522,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onVolumeChange"
              }
            },
            {
              "id": 1118,
              "name": "onVolumeChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1523,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onVolumeChangeCapture"
              }
            },
            {
              "id": 1119,
              "name": "onWaiting",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1524,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWaiting"
              }
            },
            {
              "id": 1120,
              "name": "onWaitingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1525,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWaitingCapture"
              }
            },
            {
              "id": 1121,
              "name": "onWheel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1606,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWheel"
              }
            },
            {
              "id": 1122,
              "name": "onWheelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1607,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWheelCapture"
              }
            },
            {
              "id": 1123,
              "name": "ping",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2134,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.ping"
              }
            },
            {
              "id": 1124,
              "name": "placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1938,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.placeholder"
              }
            },
            {
              "id": 1125,
              "name": "prefetch",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the data and module prefetching behavior for the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link /> // default\n<Link prefetch=\"none\" />\n<Link prefetch=\"intent\" />\n<Link prefetch=\"render\" />\n<Link prefetch=\"viewport\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n- **none** - default, no prefetching\n- **intent** - prefetches when the user hovers or focuses the link\n- **render** - prefetches when the link renders\n- **viewport** - prefetches when the link is in the viewport, very useful for mobile\n\nPrefetching is done with HTML "
                  },
                  {
                    "kind": "code",
                    "text": "`<link rel=\"prefetch\">`"
                  },
                  {
                    "kind": "text",
                    "text": " tags. They are inserted after the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<a href=\"...\" />\n<a href=\"...\" />\n<link rel=\"prefetch\" /> // might conditionally render\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nBecause of this, if you are using "
                  },
                  {
                    "kind": "code",
                    "text": "`nav :last-child`"
                  },
                  {
                    "kind": "text",
                    "text": " you will need to use "
                  },
                  {
                    "kind": "code",
                    "text": "`nav :last-of-type`"
                  },
                  {
                    "kind": "text",
                    "text": " so the styles don't conditionally fall off your last link (and any other similar selectors)."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 745,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L745"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "qualifiedName": "PrefetchBehavior"
                },
                "name": "PrefetchBehavior",
                "package": "react-router"
              }
            },
            {
              "id": 1126,
              "name": "prefix",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1957,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.prefix"
              }
            },
            {
              "id": 1127,
              "name": "preventScrollReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Prevents the scroll position from being reset to the top of the window when the link is clicked and the app is using "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "ScrollRestoration",
                    "target": 2365,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ". This only prevents new locations reseting scroll to the top, scroll position will be restored for back/forward button navigation.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"?tab=one\" preventScrollReset />\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 803,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L803"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1128,
              "name": "property",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1958,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.property"
              }
            },
            {
              "id": 1129,
              "name": "radioGroup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1947,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.radioGroup"
              }
            },
            {
              "id": 1130,
              "name": "referrerPolicy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2137,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.HTMLAttributeReferrerPolicy"
                },
                "name": "HTMLAttributeReferrerPolicy",
                "package": "@types/react",
                "qualifiedName": "React.HTMLAttributeReferrerPolicy"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.referrerPolicy"
              }
            },
            {
              "id": 1131,
              "name": "rel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1959,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.rel"
              }
            },
            {
              "id": 1132,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the relative path behavior for the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"..\" /> // default: \"route\"\n<Link relative=\"route\" />\n<Link relative=\"path\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nConsider a route hierarchy where a parent route pattern is \"blog\" and a child route pattern is \"blog/:slug/edit\".\n\n- **route** - default, resolves the link relative to the route pattern. In the example above a relative link of "
                  },
                  {
                    "kind": "code",
                    "text": "`\"..\"`"
                  },
                  {
                    "kind": "text",
                    "text": " will remove both "
                  },
                  {
                    "kind": "code",
                    "text": "`:slug/edit`"
                  },
                  {
                    "kind": "text",
                    "text": " segments back to \"/blog\".\n- **path** - relative to the path so "
                  },
                  {
                    "kind": "code",
                    "text": "`..`"
                  },
                  {
                    "kind": "text",
                    "text": " will only remove one URL segment up to \"/blog/:slug\""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 819,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L819"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              }
            },
            {
              "id": 1133,
              "name": "reloadDocument",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Will use document navigation instead of client side routing when the link is clicked: the browser will handle the transition normally (as if it were an "
                  },
                  {
                    "kind": "code",
                    "text": "`<a href>`"
                  },
                  {
                    "kind": "text",
                    "text": ").\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"/logout\" reloadDocument />\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 754,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L754"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1134,
              "name": "replace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Replaces the current entry in the history stack instead of pushing a new one onto it.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link replace />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```\n# with a history stack like this\nA -> B\n\n# normal link click pushes a new entry\nA -> B -> C\n\n# but with `replace`, B is replaced by C\nA -> C\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 774,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L774"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1135,
              "name": "resource",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1960,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.resource"
              }
            },
            {
              "id": 1136,
              "name": "results",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1975,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.results"
              }
            },
            {
              "id": 1137,
              "name": "rev",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1961,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.rev"
              }
            },
            {
              "id": 1138,
              "name": "role",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1950,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AriaRole"
                },
                "name": "AriaRole",
                "package": "@types/react",
                "qualifiedName": "React.AriaRole"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.role"
              }
            },
            {
              "id": 1139,
              "name": "security",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1976,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.security"
              }
            },
            {
              "id": 1140,
              "name": "slot",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1939,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.slot"
              }
            },
            {
              "id": 1141,
              "name": "spellCheck",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1940,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.spellCheck"
              }
            },
            {
              "id": 1142,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Adds persistent client side routing state to the next location.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"/somewhere/else\" state={{ some: \"value\" }} />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nThe location state is accessed from the "
                  },
                  {
                    "kind": "code",
                    "text": "`location`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nfunction SomeComp() {\n  const location = useLocation()\n  location.state; // { some: \"value\" }\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nThis state is inaccessible on the server as it is implemented on top of ["
                  },
                  {
                    "kind": "code",
                    "text": "`history.state`"
                  },
                  {
                    "kind": "text",
                    "text": "](https://developer.mozilla.org/en-US/docs/Web/API/History/state)"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 794,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L794"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1143,
              "name": "style",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1941,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CSSProperties"
                },
                "name": "CSSProperties",
                "package": "@types/react",
                "qualifiedName": "React.CSSProperties"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.style"
              }
            },
            {
              "id": 1144,
              "name": "suppressContentEditableWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1923,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.suppressContentEditableWarning"
              }
            },
            {
              "id": 1145,
              "name": "suppressHydrationWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1924,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.suppressHydrationWarning"
              }
            },
            {
              "id": 1146,
              "name": "tabIndex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1942,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.tabIndex"
              }
            },
            {
              "id": 1147,
              "name": "target",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2135,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.HTMLAttributeAnchorTarget"
                },
                "name": "HTMLAttributeAnchorTarget",
                "package": "@types/react",
                "qualifiedName": "React.HTMLAttributeAnchorTarget"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.target"
              }
            },
            {
              "id": 1148,
              "name": "title",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1943,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.title"
              }
            },
            {
              "id": 1149,
              "name": "to",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Can be a string or a partial "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Path",
                    "target": 1556
                  },
                  {
                    "kind": "text",
                    "text": ":\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"/some/path\" />\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 836,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L836"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2248,
                "name": "To",
                "package": "react-router"
              }
            },
            {
              "id": 1150,
              "name": "translate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1944,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "yes"
                  },
                  {
                    "type": "literal",
                    "value": "no"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.translate"
              }
            },
            {
              "id": 1151,
              "name": "type",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2136,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.type"
              }
            },
            {
              "id": 1152,
              "name": "typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1962,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.typeof"
              }
            },
            {
              "id": 1153,
              "name": "unselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1977,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "on"
                  },
                  {
                    "type": "literal",
                    "value": "off"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.unselectable"
              }
            },
            {
              "id": 1154,
              "name": "unstable_viewTransition",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Enables a [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) for this navigation.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```jsx\n<Link to={to} unstable_viewTransition>\n  Click me\n</Link>\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nTo apply specific styles for the transition, see "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useViewTransitionState",
                    "target": 2581,
                    "tsLinkText": ""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 849,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L849"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1155,
              "name": "vocab",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1963,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.vocab"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884,
                885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897,
                898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910,
                911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923,
                924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936,
                937, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951,
                952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964,
                965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977,
                978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990,
                991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002,
                1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012,
                1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022,
                1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032,
                1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042,
                1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052,
                1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062,
                1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072,
                1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082,
                1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092,
                1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102,
                1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112,
                1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122,
                1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132,
                1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142,
                1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152,
                1153, 1154, 1155
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 703,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L703"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Omit"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                    "qualifiedName": "React.AnchorHTMLAttributes"
                  },
                  "typeArguments": [
                    {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                        "qualifiedName": "HTMLAnchorElement"
                      },
                      "name": "HTMLAnchorElement",
                      "package": "typescript"
                    }
                  ],
                  "name": "React.AnchorHTMLAttributes",
                  "package": "@types/react"
                },
                {
                  "type": "literal",
                  "value": "href"
                }
              ],
              "name": "Omit",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 1156,
          "name": "LinksFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A function that defines "
              },
              {
                "kind": "code",
                "text": "`<link>`"
              },
              {
                "kind": "text",
                "text": " tags to be inserted into the "
              },
              {
                "kind": "code",
                "text": "`<head>`"
              },
              {
                "kind": "text",
                "text": " of\nthe document on route transitions."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://remix.run/route/meta"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 95,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L95"
            }
          ],
          "signatures": [
            {
              "id": 1157,
              "name": "LinksFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 96,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L96"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 2099,
                  "name": "LinkDescriptor",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 1158,
          "name": "LoaderFunctionArgs",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Arguments passed to loader functions"
              }
            ]
          },
          "children": [
            {
              "id": 1159,
              "name": "context",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 144,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L144"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1162,
                "name": "Context",
                "package": "react-router",
                "qualifiedName": "LoaderFunctionArgs.Context",
                "refersToTypeParameter": true
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.context"
              }
            },
            {
              "id": 1160,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 143,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L143"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.params"
              }
            },
            {
              "id": 1161,
              "name": "request",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 142,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L142"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Request"
                },
                "name": "Request",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.request"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1159, 1160, 1161]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 154,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L154"
            }
          ],
          "typeParameters": [
            {
              "id": 1162,
              "name": "Context",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                "qualifiedName": "DataFunctionArgs"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 1162,
                  "name": "Context",
                  "package": "react-router",
                  "qualifiedName": "LoaderFunctionArgs.Context",
                  "refersToTypeParameter": true
                }
              ],
              "name": "DataFunctionArgs",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1163,
          "name": "Location",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An entry in a history stack. A location contains information about the\nURL path, as well as possibly some arbitrary state and a key."
              }
            ]
          },
          "children": [
            {
              "id": 1164,
              "name": "hash",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A URL fragment identifier, beginning with a #."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 49,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L49"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1557,
                "name": "Path.hash"
              }
            },
            {
              "id": 1165,
              "name": "key",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A unique string associated with this location. May be used to safely store\nand retrieve data in some other storage API, like "
                  },
                  {
                    "kind": "code",
                    "text": "`localStorage`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nNote: This value is always \"default\" on the initial location."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 71,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L71"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1166,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A URL pathname, beginning with a /."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 39,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L39"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1558,
                "name": "Path.pathname"
              }
            },
            {
              "id": 1167,
              "name": "search",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A URL search string, beginning with a ?."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 44,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L44"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 1559,
                "name": "Path.search"
              }
            },
            {
              "id": 1168,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A value of arbitrary data associated with this location."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 63,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L63"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1169,
                "name": "State",
                "package": "react-router",
                "qualifiedName": "Location.State",
                "refersToTypeParameter": true
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1164, 1165, 1166, 1167, 1168]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 59,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L59"
            }
          ],
          "typeParameters": [
            {
              "id": 1169,
              "name": "State",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 1556,
              "name": "Path",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1170,
          "name": "MemoryRouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1171,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 157,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L157"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1172,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 158,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L158"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1173,
              "name": "initialEntries",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 159,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L159"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 2084,
                  "name": "InitialEntry",
                  "package": "react-router"
                }
              }
            },
            {
              "id": 1174,
              "name": "initialIndex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 160,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L160"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1171, 1172, 1173, 1174]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 156,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L156"
            }
          ]
        },
        {
          "id": 1175,
          "name": "MetaArgs",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1176,
              "name": "data",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 146,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L146"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "reference",
                      "target": 1181,
                      "name": "Loader",
                      "package": "react-router",
                      "qualifiedName": "MetaArgs.Loader",
                      "refersToTypeParameter": true
                    },
                    "extendsType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                        "qualifiedName": "LoaderFunction"
                      },
                      "name": "LoaderFunction",
                      "package": "react-router"
                    },
                    "trueType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                        "qualifiedName": "SerializeFrom"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 1181,
                          "typeArguments": [
                            {
                              "type": "reference",
                              "target": 1181,
                              "name": "Loader",
                              "package": "react-router",
                              "qualifiedName": "MetaArgs.Loader",
                              "refersToTypeParameter": true
                            }
                          ],
                          "name": "Loader",
                          "package": "react-router",
                          "qualifiedName": "MetaArgs.Loader",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "SerializeFrom",
                      "package": "react-router"
                    },
                    "falseType": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                ]
              }
            },
            {
              "id": 1177,
              "name": "error",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 152,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L152"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 1178,
              "name": "location",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 150,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L150"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1163,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "Location",
                "package": "react-router"
              }
            },
            {
              "id": 1179,
              "name": "matches",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 151,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L151"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "qualifiedName": "MetaMatches"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1182,
                    "name": "MatchLoaders",
                    "package": "react-router",
                    "qualifiedName": "MetaArgs.MatchLoaders",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "MetaMatches",
                "package": "react-router"
              }
            },
            {
              "id": 1180,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 149,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L149"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "name": "Params",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1176, 1177, 1178, 1179, 1180]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 139,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L139"
            }
          ],
          "typeParameters": [
            {
              "id": 1181,
              "name": "Loader",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "qualifiedName": "LoaderFunction"
                    },
                    "name": "LoaderFunction",
                    "package": "react-router"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ]
              },
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 1182,
              "name": "MatchLoaders",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "qualifiedName": "LoaderFunction"
                        },
                        "name": "LoaderFunction",
                        "package": "react-router"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ]
                  }
                ],
                "name": "Record",
                "package": "typescript"
              },
              "default": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "name": "Record",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 1183,
          "name": "MetaFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 155,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L155"
            }
          ],
          "typeParameters": [
            {
              "id": 1184,
              "name": "Loader",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "qualifiedName": "LoaderFunction"
                    },
                    "name": "LoaderFunction",
                    "package": "react-router"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ]
              },
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 1185,
              "name": "MatchLoaders",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "qualifiedName": "LoaderFunction"
                        },
                        "name": "LoaderFunction",
                        "package": "react-router"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ]
                  }
                ],
                "name": "Record",
                "package": "typescript"
              },
              "default": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "name": "Record",
                "package": "typescript"
              }
            }
          ],
          "signatures": [
            {
              "id": 1186,
              "name": "MetaFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 162,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L162"
                }
              ],
              "parameters": [
                {
                  "id": 1187,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1175,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1184,
                        "name": "Loader",
                        "package": "react-router",
                        "qualifiedName": "MetaFunction.Loader",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 1185,
                        "name": "MatchLoaders",
                        "package": "react-router",
                        "qualifiedName": "MetaFunction.MatchLoaders",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "MetaArgs",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2122,
                      "name": "MetaDescriptor",
                      "package": "react-router"
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1188,
          "name": "NavLinkProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1189,
              "name": "about",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1953,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.about"
              }
            },
            {
              "id": 1190,
              "name": "accessKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1927,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.accessKey"
              }
            },
            {
              "id": 1191,
              "name": "aria-activedescendant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1636,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-activedescendant"
              }
            },
            {
              "id": 1192,
              "name": "aria-atomic",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1638,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-atomic"
              }
            },
            {
              "id": 1193,
              "name": "aria-autocomplete",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be\npresented if they are made."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1643,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "list"
                  },
                  {
                    "type": "literal",
                    "value": "inline"
                  },
                  {
                    "type": "literal",
                    "value": "both"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-autocomplete"
              }
            },
            {
              "id": 1194,
              "name": "aria-braillelabel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-label."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1649,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-braillelabel"
              }
            },
            {
              "id": 1195,
              "name": "aria-brailleroledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized abbreviated description for the role of an element, which is intended to be converted into Braille."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-roledescription."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1654,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-brailleroledescription"
              }
            },
            {
              "id": 1196,
              "name": "aria-busy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1655,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-busy"
              }
            },
            {
              "id": 1197,
              "name": "aria-checked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"checked\" state of checkboxes, radio buttons, and other widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1660,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-checked"
              }
            },
            {
              "id": 1198,
              "name": "aria-colcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of columns in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1665,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colcount"
              }
            },
            {
              "id": 1199,
              "name": "aria-colindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1670,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colindex"
              }
            },
            {
              "id": 1200,
              "name": "aria-colindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-colindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1675,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colindextext"
              }
            },
            {
              "id": 1201,
              "name": "aria-colspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1680,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-colspan"
              }
            },
            {
              "id": 1202,
              "name": "aria-controls",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) whose contents or presence are controlled by the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-owns."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1685,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-controls"
              }
            },
            {
              "id": 1203,
              "name": "aria-current",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the element that represents the current item within a container or set of related elements."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1687,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "time"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "location"
                  },
                  {
                    "type": "literal",
                    "value": "page"
                  },
                  {
                    "type": "literal",
                    "value": "step"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "date"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-current"
              }
            },
            {
              "id": 1204,
              "name": "aria-describedby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that describes the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1692,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-describedby"
              }
            },
            {
              "id": 1205,
              "name": "aria-description",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that describes or annotates the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "related aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1697,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-description"
              }
            },
            {
              "id": 1206,
              "name": "aria-details",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides a detailed, extended description for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1702,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-details"
              }
            },
            {
              "id": 1207,
              "name": "aria-disabled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-hidden"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-readonly."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1707,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-disabled"
              }
            },
            {
              "id": 1208,
              "name": "aria-dropeffect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what functions can be performed when a dragged object is released on the drop target."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1712,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "link"
                  },
                  {
                    "type": "literal",
                    "value": "copy"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "execute"
                  },
                  {
                    "type": "literal",
                    "value": "move"
                  },
                  {
                    "type": "literal",
                    "value": "popup"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-dropeffect"
              }
            },
            {
              "id": 1209,
              "name": "aria-errormessage",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element that provides an error message for the object."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-invalid"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1717,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-errormessage"
              }
            },
            {
              "id": 1210,
              "name": "aria-expanded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1719,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-expanded"
              }
            },
            {
              "id": 1211,
              "name": "aria-flowto",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,\nallows assistive technology to override the general default of reading in document source order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1724,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-flowto"
              }
            },
            {
              "id": 1212,
              "name": "aria-grabbed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates an element's \"grabbed\" state in a drag-and-drop operation."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": [
                      {
                        "kind": "text",
                        "text": "in ARIA 1.1"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1729,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-grabbed"
              }
            },
            {
              "id": 1213,
              "name": "aria-haspopup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1731,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "dialog"
                  },
                  {
                    "type": "literal",
                    "value": "menu"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grid"
                  },
                  {
                    "type": "literal",
                    "value": "listbox"
                  },
                  {
                    "type": "literal",
                    "value": "tree"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-haspopup"
              }
            },
            {
              "id": 1214,
              "name": "aria-hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element is exposed to an accessibility API."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1736,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-hidden"
              }
            },
            {
              "id": 1215,
              "name": "aria-invalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the entered value does not conform to the format expected by the application."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-errormessage."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1741,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "grammar"
                  },
                  {
                    "type": "literal",
                    "value": "spelling"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-invalid"
              }
            },
            {
              "id": 1216,
              "name": "aria-keyshortcuts",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1743,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-keyshortcuts"
              }
            },
            {
              "id": 1217,
              "name": "aria-label",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a string value that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-labelledby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1748,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-label"
              }
            },
            {
              "id": 1218,
              "name": "aria-labelledby",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies the element (or elements) that labels the current element."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-describedby."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1753,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-labelledby"
              }
            },
            {
              "id": 1219,
              "name": "aria-level",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the hierarchical level of an element within a structure."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1755,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-level"
              }
            },
            {
              "id": 1220,
              "name": "aria-live",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1757,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "off"
                  },
                  {
                    "type": "literal",
                    "value": "assertive"
                  },
                  {
                    "type": "literal",
                    "value": "polite"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-live"
              }
            },
            {
              "id": 1221,
              "name": "aria-modal",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether an element is modal when displayed."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1759,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-modal"
              }
            },
            {
              "id": 1222,
              "name": "aria-multiline",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether a text box accepts multiple lines of input or only a single line."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1761,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-multiline"
              }
            },
            {
              "id": 1223,
              "name": "aria-multiselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the user may select more than one item from the current selectable descendants."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1763,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-multiselectable"
              }
            },
            {
              "id": 1224,
              "name": "aria-orientation",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1765,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "horizontal"
                  },
                  {
                    "type": "literal",
                    "value": "vertical"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-orientation"
              }
            },
            {
              "id": 1225,
              "name": "aria-owns",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship\nbetween DOM elements where the DOM hierarchy cannot be used to represent the relationship."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-controls."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1771,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-owns"
              }
            },
            {
              "id": 1226,
              "name": "aria-placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.\nA hint could be a sample value or a brief description of the expected format."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1776,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-placeholder"
              }
            },
            {
              "id": 1227,
              "name": "aria-posinset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-setsize."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1781,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-posinset"
              }
            },
            {
              "id": 1228,
              "name": "aria-pressed",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"pressed\" state of toggle buttons."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-selected."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1786,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "literal",
                    "value": "true"
                  },
                  {
                    "type": "literal",
                    "value": "false"
                  },
                  {
                    "type": "literal",
                    "value": "mixed"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-pressed"
              }
            },
            {
              "id": 1229,
              "name": "aria-readonly",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that the element is not editable, but is otherwise operable."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-disabled."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1791,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-readonly"
              }
            },
            {
              "id": 1230,
              "name": "aria-relevant",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-atomic."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1796,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "additions"
                  },
                  {
                    "type": "literal",
                    "value": "additions removals"
                  },
                  {
                    "type": "literal",
                    "value": "additions text"
                  },
                  {
                    "type": "literal",
                    "value": "all"
                  },
                  {
                    "type": "literal",
                    "value": "removals"
                  },
                  {
                    "type": "literal",
                    "value": "removals additions"
                  },
                  {
                    "type": "literal",
                    "value": "removals text"
                  },
                  {
                    "type": "literal",
                    "value": "text additions"
                  },
                  {
                    "type": "literal",
                    "value": "text removals"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-relevant"
              }
            },
            {
              "id": 1231,
              "name": "aria-required",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates that user input is required on the element before a form may be submitted."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1798,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-required"
              }
            },
            {
              "id": 1232,
              "name": "aria-roledescription",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human-readable, author-localized description for the role of an element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1800,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-roledescription"
              }
            },
            {
              "id": 1233,
              "name": "aria-rowcount",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the total number of rows in a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-rowindex."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1805,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowcount"
              }
            },
            {
              "id": 1234,
              "name": "aria-rowindex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowcount"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1810,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowindex"
              }
            },
            {
              "id": 1235,
              "name": "aria-rowindextext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines a human readable text alternative of aria-rowindex."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-colindextext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1815,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowindextext"
              }
            },
            {
              "id": 1236,
              "name": "aria-rowspan",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-rowindex"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-colspan."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1820,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-rowspan"
              }
            },
            {
              "id": 1237,
              "name": "aria-selected",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates the current \"selected\" state of various widgets."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-checked"
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      },
                      {
                        "kind": "text",
                        "text": " - "
                      },
                      {
                        "kind": "text",
                        "text": "aria-pressed."
                      },
                      {
                        "kind": "text",
                        "text": "\n"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1825,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-selected"
              }
            },
            {
              "id": 1238,
              "name": "aria-setsize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-posinset."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1830,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-setsize"
              }
            },
            {
              "id": 1239,
              "name": "aria-sort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicates if items in a table or grid are sorted in ascending or descending order."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1832,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "ascending"
                  },
                  {
                    "type": "literal",
                    "value": "descending"
                  },
                  {
                    "type": "literal",
                    "value": "other"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-sort"
              }
            },
            {
              "id": 1240,
              "name": "aria-valuemax",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the maximum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1834,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuemax"
              }
            },
            {
              "id": 1241,
              "name": "aria-valuemin",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the minimum allowed value for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1836,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuemin"
              }
            },
            {
              "id": 1242,
              "name": "aria-valuenow",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the current value for a range widget."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "aria-valuetext."
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1841,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuenow"
              }
            },
            {
              "id": 1243,
              "name": "aria-valuetext",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the human readable text alternative of aria-valuenow for a range widget."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1843,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.aria-valuetext"
              }
            },
            {
              "id": 1244,
              "name": "autoCapitalize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1966,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoCapitalize"
              }
            },
            {
              "id": 1245,
              "name": "autoCorrect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1967,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoCorrect"
              }
            },
            {
              "id": 1246,
              "name": "autoFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1928,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoFocus"
              }
            },
            {
              "id": 1247,
              "name": "autoSave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1968,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.autoSave"
              }
            },
            {
              "id": 1248,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Changes the matching logic to make it case-sensitive:\n\n| Link                                         | URL           | isActive |\n| -------------------------------------------- | ------------- | -------- |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/SpOnGe-bOB\" />`"
                  },
                  {
                    "kind": "text",
                    "text": "               | "
                  },
                  {
                    "kind": "code",
                    "text": "`/sponge-bob`"
                  },
                  {
                    "kind": "text",
                    "text": " | true     |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/SpOnGe-bOB\" caseSensitive />`"
                  },
                  {
                    "kind": "text",
                    "text": " | "
                  },
                  {
                    "kind": "code",
                    "text": "`/sponge-bob`"
                  },
                  {
                    "kind": "text",
                    "text": " | false    |"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1056,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1056"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1249,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Can be regular React children or a function that receives an object with the active and pending states of the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<NavLink to=\"/tasks\">\n  {({ isActive }) => (\n    <span className={isActive ? \"active\" : \"\"}>Tasks</span>\n  )}\n</NavLink>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1046,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1046"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactNode"
                    },
                    "name": "ReactNode",
                    "package": "@types/react",
                    "qualifiedName": "React.ReactNode"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1250,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1046,
                          "character": 32,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1046"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1251,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1046,
                              "character": 32,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1046"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1252,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": 2147,
                                "name": "NavLinkRenderProps",
                                "package": "react-router"
                              }
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                              "qualifiedName": "React.ReactNode"
                            },
                            "name": "ReactNode",
                            "package": "@types/react",
                            "qualifiedName": "React.ReactNode"
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 1253,
              "name": "className",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Classes are automatically applied to NavLink that correspond to "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "NavLinkRenderProps",
                    "target": 2147,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```css\na.active { color: red; }\na.pending { color: blue; }\na.transitioning {\n  view-transition-name: my-transition;\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1069,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1069"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1254,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1069,
                          "character": 24,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1069"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1255,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1069,
                              "character": 24,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1069"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1256,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": 2147,
                                "name": "NavLinkRenderProps",
                                "package": "react-router"
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 1257,
              "name": "color",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1969,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.color"
              }
            },
            {
              "id": 1258,
              "name": "content",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1954,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.content"
              }
            },
            {
              "id": 1259,
              "name": "contentEditable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1930,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "inherit"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "Booleanish"
                    },
                    "name": "Booleanish",
                    "package": "@types/react"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.contentEditable"
              }
            },
            {
              "id": 1260,
              "name": "contextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1931,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.contextMenu"
              }
            },
            {
              "id": 1261,
              "name": "dangerouslySetInnerHTML",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1421,
                  "character": 8
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1262,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {
                    "isExternal": true
                  },
                  "children": [
                    {
                      "id": 1263,
                      "name": "__html",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isExternal": true
                      },
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "line": 1424,
                          "character": 12
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/global.d.ts",
                              "qualifiedName": "TrustedHTML"
                            },
                            "name": "TrustedHTML",
                            "package": "@types/react"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1263]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "line": 1421,
                      "character": 34
                    }
                  ]
                }
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.dangerouslySetInnerHTML"
              }
            },
            {
              "id": 1264,
              "name": "datatype",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1955,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.datatype"
              }
            },
            {
              "id": 1265,
              "name": "defaultChecked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1921,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.defaultChecked"
              }
            },
            {
              "id": 1266,
              "name": "defaultValue",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1922,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "number"
                  },
                  {
                    "type": "typeOperator",
                    "operator": "readonly",
                    "target": {
                      "type": "array",
                      "elementType": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.defaultValue"
              }
            },
            {
              "id": 1267,
              "name": "dir",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1932,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.dir"
              }
            },
            {
              "id": 1268,
              "name": "discover",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the link discovery behavior\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link /> // default (\"render\")\n<Link discover=\"render\" />\n<Link discover=\"none\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n- **render** - default, discover the route when the link renders\n- **none** - don't eagerly discover, only discover if the link is clicked"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 717,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L717"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "qualifiedName": "DiscoverBehavior"
                },
                "name": "DiscoverBehavior",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.discover"
              }
            },
            {
              "id": 1269,
              "name": "download",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2130,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.download"
              }
            },
            {
              "id": 1270,
              "name": "draggable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1933,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.draggable"
              }
            },
            {
              "id": 1271,
              "name": "end",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Changes the matching logic for the "
                  },
                  {
                    "kind": "code",
                    "text": "`active`"
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "code",
                    "text": "`pending`"
                  },
                  {
                    "kind": "text",
                    "text": " states to only match to the \"end\" of the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "NavLinkProps.to",
                    "target": 1477,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ". If the URL is longer, it will no longer be considered active.\n\n| Link                          | URL          | isActive |\n| ----------------------------- | ------------ | -------- |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/tasks\" />`"
                  },
                  {
                    "kind": "text",
                    "text": "     | "
                  },
                  {
                    "kind": "code",
                    "text": "`/tasks`"
                  },
                  {
                    "kind": "text",
                    "text": "     | true     |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/tasks\" />`"
                  },
                  {
                    "kind": "text",
                    "text": "     | "
                  },
                  {
                    "kind": "code",
                    "text": "`/tasks/123`"
                  },
                  {
                    "kind": "text",
                    "text": " | true     |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/tasks\" end />`"
                  },
                  {
                    "kind": "text",
                    "text": " | "
                  },
                  {
                    "kind": "code",
                    "text": "`/tasks`"
                  },
                  {
                    "kind": "text",
                    "text": "     | true     |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/tasks\" end />`"
                  },
                  {
                    "kind": "text",
                    "text": " | "
                  },
                  {
                    "kind": "code",
                    "text": "`/tasks/123`"
                  },
                  {
                    "kind": "text",
                    "text": " | false    |\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink to=\"/\">`"
                  },
                  {
                    "kind": "text",
                    "text": " is an exceptional case because _every_ URL matches "
                  },
                  {
                    "kind": "code",
                    "text": "`/`"
                  },
                  {
                    "kind": "text",
                    "text": ". To avoid this matching every single route by default, it effectively ignores the "
                  },
                  {
                    "kind": "code",
                    "text": "`end`"
                  },
                  {
                    "kind": "text",
                    "text": " prop and only matches when you're at the root route."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1083,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1083"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1272,
              "name": "hidden",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1934,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.hidden"
              }
            },
            {
              "id": 1273,
              "name": "hrefLang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2132,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.hrefLang"
              }
            },
            {
              "id": 1274,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1935,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.id"
              }
            },
            {
              "id": 1275,
              "name": "inlist",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1956,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.inlist"
              }
            },
            {
              "id": 1276,
              "name": "inputMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Hints at the type of data that might be entered by the user while editing the element or its contents"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1984,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "search"
                  },
                  {
                    "type": "literal",
                    "value": "text"
                  },
                  {
                    "type": "literal",
                    "value": "url"
                  },
                  {
                    "type": "literal",
                    "value": "none"
                  },
                  {
                    "type": "literal",
                    "value": "tel"
                  },
                  {
                    "type": "literal",
                    "value": "email"
                  },
                  {
                    "type": "literal",
                    "value": "numeric"
                  },
                  {
                    "type": "literal",
                    "value": "decimal"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.inputMode"
              }
            },
            {
              "id": 1277,
              "name": "is",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Specify that a standard HTML element should behave like a defined custom built-in element"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://html.spec.whatwg.org/multipage/custom-elements.html#attr-is"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1989,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.is"
              }
            },
            {
              "id": 1278,
              "name": "itemID",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1973,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemID"
              }
            },
            {
              "id": 1279,
              "name": "itemProp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1970,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemProp"
              }
            },
            {
              "id": 1280,
              "name": "itemRef",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1974,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemRef"
              }
            },
            {
              "id": 1281,
              "name": "itemScope",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1971,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemScope"
              }
            },
            {
              "id": 1282,
              "name": "itemType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1972,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.itemType"
              }
            },
            {
              "id": 1283,
              "name": "lang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1936,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.lang"
              }
            },
            {
              "id": 1284,
              "name": "media",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2133,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.media"
              }
            },
            {
              "id": 1285,
              "name": "nonce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1937,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.nonce"
              }
            },
            {
              "id": 1286,
              "name": "onAbort",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1480,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAbort"
              }
            },
            {
              "id": 1287,
              "name": "onAbortCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1481,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAbortCapture"
              }
            },
            {
              "id": 1288,
              "name": "onAnimationEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1612,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationEnd"
              }
            },
            {
              "id": 1289,
              "name": "onAnimationEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1613,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationEndCapture"
              }
            },
            {
              "id": 1290,
              "name": "onAnimationIteration",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1614,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationIteration"
              }
            },
            {
              "id": 1291,
              "name": "onAnimationIterationCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1615,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationIterationCapture"
              }
            },
            {
              "id": 1292,
              "name": "onAnimationStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1610,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationStart"
              }
            },
            {
              "id": 1293,
              "name": "onAnimationStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1611,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AnimationEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "AnimationEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.AnimationEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAnimationStartCapture"
              }
            },
            {
              "id": 1294,
              "name": "onAuxClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1528,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAuxClick"
              }
            },
            {
              "id": 1295,
              "name": "onAuxClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1529,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onAuxClickCapture"
              }
            },
            {
              "id": 1296,
              "name": "onBeforeInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1452,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBeforeInput"
              }
            },
            {
              "id": 1297,
              "name": "onBeforeInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1453,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBeforeInputCapture"
              }
            },
            {
              "id": 1298,
              "name": "onBlur",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1446,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBlur"
              }
            },
            {
              "id": 1299,
              "name": "onBlurCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1447,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onBlurCapture"
              }
            },
            {
              "id": 1300,
              "name": "onCanPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1482,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlay"
              }
            },
            {
              "id": 1301,
              "name": "onCanPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1483,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlayCapture"
              }
            },
            {
              "id": 1302,
              "name": "onCanPlayThrough",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1484,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlayThrough"
              }
            },
            {
              "id": 1303,
              "name": "onCanPlayThroughCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1485,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCanPlayThroughCapture"
              }
            },
            {
              "id": 1304,
              "name": "onChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1450,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onChange"
              }
            },
            {
              "id": 1305,
              "name": "onChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1451,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onChangeCapture"
              }
            },
            {
              "id": 1306,
              "name": "onClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1530,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onClick"
              }
            },
            {
              "id": 1307,
              "name": "onClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1531,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onClickCapture"
              }
            },
            {
              "id": 1308,
              "name": "onCompositionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1436,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionEnd"
              }
            },
            {
              "id": 1309,
              "name": "onCompositionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1437,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionEndCapture"
              }
            },
            {
              "id": 1310,
              "name": "onCompositionStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1438,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionStart"
              }
            },
            {
              "id": 1311,
              "name": "onCompositionStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1439,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionStartCapture"
              }
            },
            {
              "id": 1312,
              "name": "onCompositionUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1440,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionUpdate"
              }
            },
            {
              "id": 1313,
              "name": "onCompositionUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1441,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.CompositionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "CompositionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.CompositionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCompositionUpdateCapture"
              }
            },
            {
              "id": 1314,
              "name": "onContextMenu",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1532,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onContextMenu"
              }
            },
            {
              "id": 1315,
              "name": "onContextMenuCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1533,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onContextMenuCapture"
              }
            },
            {
              "id": 1316,
              "name": "onCopy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1428,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCopy"
              }
            },
            {
              "id": 1317,
              "name": "onCopyCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1429,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCopyCapture"
              }
            },
            {
              "id": 1318,
              "name": "onCut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1430,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCut"
              }
            },
            {
              "id": 1319,
              "name": "onCutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1431,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onCutCapture"
              }
            },
            {
              "id": 1320,
              "name": "onDoubleClick",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1534,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDoubleClick"
              }
            },
            {
              "id": 1321,
              "name": "onDoubleClickCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1535,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDoubleClickCapture"
              }
            },
            {
              "id": 1322,
              "name": "onDrag",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1536,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDrag"
              }
            },
            {
              "id": 1323,
              "name": "onDragCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1537,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragCapture"
              }
            },
            {
              "id": 1324,
              "name": "onDragEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1538,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEnd"
              }
            },
            {
              "id": 1325,
              "name": "onDragEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1539,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEndCapture"
              }
            },
            {
              "id": 1326,
              "name": "onDragEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1540,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEnter"
              }
            },
            {
              "id": 1327,
              "name": "onDragEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1541,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragEnterCapture"
              }
            },
            {
              "id": 1328,
              "name": "onDragExit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1542,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragExit"
              }
            },
            {
              "id": 1329,
              "name": "onDragExitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1543,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragExitCapture"
              }
            },
            {
              "id": 1330,
              "name": "onDragLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1544,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragLeave"
              }
            },
            {
              "id": 1331,
              "name": "onDragLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1545,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragLeaveCapture"
              }
            },
            {
              "id": 1332,
              "name": "onDragOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1546,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragOver"
              }
            },
            {
              "id": 1333,
              "name": "onDragOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1547,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragOverCapture"
              }
            },
            {
              "id": 1334,
              "name": "onDragStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1548,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragStart"
              }
            },
            {
              "id": 1335,
              "name": "onDragStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1549,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDragStartCapture"
              }
            },
            {
              "id": 1336,
              "name": "onDrop",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1550,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDrop"
              }
            },
            {
              "id": 1337,
              "name": "onDropCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1551,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.DragEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "DragEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.DragEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDropCapture"
              }
            },
            {
              "id": 1338,
              "name": "onDurationChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1486,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDurationChange"
              }
            },
            {
              "id": 1339,
              "name": "onDurationChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1487,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onDurationChangeCapture"
              }
            },
            {
              "id": 1340,
              "name": "onEmptied",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1488,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEmptied"
              }
            },
            {
              "id": 1341,
              "name": "onEmptiedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1489,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEmptiedCapture"
              }
            },
            {
              "id": 1342,
              "name": "onEncrypted",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1490,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEncrypted"
              }
            },
            {
              "id": 1343,
              "name": "onEncryptedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1491,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEncryptedCapture"
              }
            },
            {
              "id": 1344,
              "name": "onEnded",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1492,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEnded"
              }
            },
            {
              "id": 1345,
              "name": "onEndedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1493,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onEndedCapture"
              }
            },
            {
              "id": 1346,
              "name": "onError",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1466,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onError"
              }
            },
            {
              "id": 1347,
              "name": "onErrorCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1467,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onErrorCapture"
              }
            },
            {
              "id": 1348,
              "name": "onFocus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1444,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onFocus"
              }
            },
            {
              "id": 1349,
              "name": "onFocusCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1445,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FocusEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FocusEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FocusEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onFocusCapture"
              }
            },
            {
              "id": 1350,
              "name": "onGotPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1596,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onGotPointerCapture"
              }
            },
            {
              "id": 1351,
              "name": "onGotPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1597,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onGotPointerCaptureCapture"
              }
            },
            {
              "id": 1352,
              "name": "onInput",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1454,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInput"
              }
            },
            {
              "id": 1353,
              "name": "onInputCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1455,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInputCapture"
              }
            },
            {
              "id": 1354,
              "name": "onInvalid",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1460,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInvalid"
              }
            },
            {
              "id": 1355,
              "name": "onInvalidCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1461,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onInvalidCapture"
              }
            },
            {
              "id": 1356,
              "name": "onKeyDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1470,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyDown"
              }
            },
            {
              "id": 1357,
              "name": "onKeyDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1471,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyDownCapture"
              }
            },
            {
              "id": 1358,
              "name": "onKeyPress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1473,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyPress"
              }
            },
            {
              "id": 1359,
              "name": "onKeyPressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "comment": {
                "summary": [],
                "blockTags": [
                  {
                    "tag": "@deprecated",
                    "content": []
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1475,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyPressCapture"
              }
            },
            {
              "id": 1360,
              "name": "onKeyUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1476,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyUp"
              }
            },
            {
              "id": 1361,
              "name": "onKeyUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1477,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.KeyboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "KeyboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.KeyboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onKeyUpCapture"
              }
            },
            {
              "id": 1362,
              "name": "onLoad",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1464,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoad"
              }
            },
            {
              "id": 1363,
              "name": "onLoadCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1465,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadCapture"
              }
            },
            {
              "id": 1364,
              "name": "onLoadStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1498,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadStart"
              }
            },
            {
              "id": 1365,
              "name": "onLoadStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1499,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadStartCapture"
              }
            },
            {
              "id": 1366,
              "name": "onLoadedData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1494,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedData"
              }
            },
            {
              "id": 1367,
              "name": "onLoadedDataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1495,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedDataCapture"
              }
            },
            {
              "id": 1368,
              "name": "onLoadedMetadata",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1496,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedMetadata"
              }
            },
            {
              "id": 1369,
              "name": "onLoadedMetadataCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1497,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLoadedMetadataCapture"
              }
            },
            {
              "id": 1370,
              "name": "onLostPointerCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1598,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLostPointerCapture"
              }
            },
            {
              "id": 1371,
              "name": "onLostPointerCaptureCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1599,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onLostPointerCaptureCapture"
              }
            },
            {
              "id": 1372,
              "name": "onMouseDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1552,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseDown"
              }
            },
            {
              "id": 1373,
              "name": "onMouseDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1553,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseDownCapture"
              }
            },
            {
              "id": 1374,
              "name": "onMouseEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1554,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseEnter"
              }
            },
            {
              "id": 1375,
              "name": "onMouseLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1555,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseLeave"
              }
            },
            {
              "id": 1376,
              "name": "onMouseMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1556,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseMove"
              }
            },
            {
              "id": 1377,
              "name": "onMouseMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1557,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseMoveCapture"
              }
            },
            {
              "id": 1378,
              "name": "onMouseOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1558,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOut"
              }
            },
            {
              "id": 1379,
              "name": "onMouseOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1559,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOutCapture"
              }
            },
            {
              "id": 1380,
              "name": "onMouseOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1560,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOver"
              }
            },
            {
              "id": 1381,
              "name": "onMouseOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1561,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseOverCapture"
              }
            },
            {
              "id": 1382,
              "name": "onMouseUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1562,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseUp"
              }
            },
            {
              "id": 1383,
              "name": "onMouseUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1563,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.MouseEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "MouseEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.MouseEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onMouseUpCapture"
              }
            },
            {
              "id": 1384,
              "name": "onPaste",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1432,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPaste"
              }
            },
            {
              "id": 1385,
              "name": "onPasteCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1433,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ClipboardEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ClipboardEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ClipboardEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPasteCapture"
              }
            },
            {
              "id": 1386,
              "name": "onPause",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1500,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPause"
              }
            },
            {
              "id": 1387,
              "name": "onPauseCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1501,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPauseCapture"
              }
            },
            {
              "id": 1388,
              "name": "onPlay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1502,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlay"
              }
            },
            {
              "id": 1389,
              "name": "onPlayCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1503,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlayCapture"
              }
            },
            {
              "id": 1390,
              "name": "onPlaying",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1504,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlaying"
              }
            },
            {
              "id": 1391,
              "name": "onPlayingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1505,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPlayingCapture"
              }
            },
            {
              "id": 1392,
              "name": "onPointerCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1586,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerCancel"
              }
            },
            {
              "id": 1393,
              "name": "onPointerCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1587,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerCancelCapture"
              }
            },
            {
              "id": 1394,
              "name": "onPointerDown",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1580,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerDown"
              }
            },
            {
              "id": 1395,
              "name": "onPointerDownCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1581,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerDownCapture"
              }
            },
            {
              "id": 1396,
              "name": "onPointerEnter",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1588,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerEnter"
              }
            },
            {
              "id": 1397,
              "name": "onPointerEnterCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1589,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerEnterCapture"
              }
            },
            {
              "id": 1398,
              "name": "onPointerLeave",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1590,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerLeave"
              }
            },
            {
              "id": 1399,
              "name": "onPointerLeaveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1591,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerLeaveCapture"
              }
            },
            {
              "id": 1400,
              "name": "onPointerMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1582,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerMove"
              }
            },
            {
              "id": 1401,
              "name": "onPointerMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1583,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerMoveCapture"
              }
            },
            {
              "id": 1402,
              "name": "onPointerOut",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1594,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOut"
              }
            },
            {
              "id": 1403,
              "name": "onPointerOutCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1595,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOutCapture"
              }
            },
            {
              "id": 1404,
              "name": "onPointerOver",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1592,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOver"
              }
            },
            {
              "id": 1405,
              "name": "onPointerOverCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1593,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerOverCapture"
              }
            },
            {
              "id": 1406,
              "name": "onPointerUp",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1584,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerUp"
              }
            },
            {
              "id": 1407,
              "name": "onPointerUpCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1585,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.PointerEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "PointerEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.PointerEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onPointerUpCapture"
              }
            },
            {
              "id": 1408,
              "name": "onProgress",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1506,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onProgress"
              }
            },
            {
              "id": 1409,
              "name": "onProgressCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1507,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onProgressCapture"
              }
            },
            {
              "id": 1410,
              "name": "onRateChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1508,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onRateChange"
              }
            },
            {
              "id": 1411,
              "name": "onRateChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1509,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onRateChangeCapture"
              }
            },
            {
              "id": 1412,
              "name": "onReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1456,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onReset"
              }
            },
            {
              "id": 1413,
              "name": "onResetCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1457,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onResetCapture"
              }
            },
            {
              "id": 1414,
              "name": "onResize",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1510,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onResize"
              }
            },
            {
              "id": 1415,
              "name": "onResizeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1511,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onResizeCapture"
              }
            },
            {
              "id": 1416,
              "name": "onScroll",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1602,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onScroll"
              }
            },
            {
              "id": 1417,
              "name": "onScrollCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1603,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.UIEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "UIEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.UIEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onScrollCapture"
              }
            },
            {
              "id": 1418,
              "name": "onSeeked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1512,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeeked"
              }
            },
            {
              "id": 1419,
              "name": "onSeekedCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1513,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeekedCapture"
              }
            },
            {
              "id": 1420,
              "name": "onSeeking",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1514,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeeking"
              }
            },
            {
              "id": 1421,
              "name": "onSeekingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1515,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSeekingCapture"
              }
            },
            {
              "id": 1422,
              "name": "onSelect",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1566,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSelect"
              }
            },
            {
              "id": 1423,
              "name": "onSelectCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1567,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSelectCapture"
              }
            },
            {
              "id": 1424,
              "name": "onStalled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1516,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onStalled"
              }
            },
            {
              "id": 1425,
              "name": "onStalledCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1517,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onStalledCapture"
              }
            },
            {
              "id": 1426,
              "name": "onSubmit",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1458,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSubmit"
              }
            },
            {
              "id": 1427,
              "name": "onSubmitCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1459,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.FormEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "FormEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.FormEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSubmitCapture"
              }
            },
            {
              "id": 1428,
              "name": "onSuspend",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1518,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSuspend"
              }
            },
            {
              "id": 1429,
              "name": "onSuspendCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1519,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onSuspendCapture"
              }
            },
            {
              "id": 1430,
              "name": "onTimeUpdate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1520,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTimeUpdate"
              }
            },
            {
              "id": 1431,
              "name": "onTimeUpdateCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1521,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTimeUpdateCapture"
              }
            },
            {
              "id": 1432,
              "name": "onTouchCancel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1570,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchCancel"
              }
            },
            {
              "id": 1433,
              "name": "onTouchCancelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1571,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchCancelCapture"
              }
            },
            {
              "id": 1434,
              "name": "onTouchEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1572,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchEnd"
              }
            },
            {
              "id": 1435,
              "name": "onTouchEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1573,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchEndCapture"
              }
            },
            {
              "id": 1436,
              "name": "onTouchMove",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1574,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchMove"
              }
            },
            {
              "id": 1437,
              "name": "onTouchMoveCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1575,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchMoveCapture"
              }
            },
            {
              "id": 1438,
              "name": "onTouchStart",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1576,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchStart"
              }
            },
            {
              "id": 1439,
              "name": "onTouchStartCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1577,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TouchEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TouchEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TouchEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTouchStartCapture"
              }
            },
            {
              "id": 1440,
              "name": "onTransitionEnd",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1618,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTransitionEnd"
              }
            },
            {
              "id": 1441,
              "name": "onTransitionEndCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1619,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.TransitionEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "TransitionEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.TransitionEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onTransitionEndCapture"
              }
            },
            {
              "id": 1442,
              "name": "onVolumeChange",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1522,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onVolumeChange"
              }
            },
            {
              "id": 1443,
              "name": "onVolumeChangeCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1523,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onVolumeChangeCapture"
              }
            },
            {
              "id": 1444,
              "name": "onWaiting",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1524,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWaiting"
              }
            },
            {
              "id": 1445,
              "name": "onWaitingCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1525,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "ReactEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.ReactEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWaitingCapture"
              }
            },
            {
              "id": 1446,
              "name": "onWheel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1606,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWheel"
              }
            },
            {
              "id": 1447,
              "name": "onWheelCapture",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1607,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WheelEventHandler"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                ],
                "name": "WheelEventHandler",
                "package": "@types/react",
                "qualifiedName": "React.WheelEventHandler"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.onWheelCapture"
              }
            },
            {
              "id": 1448,
              "name": "ping",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2134,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.ping"
              }
            },
            {
              "id": 1449,
              "name": "placeholder",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1938,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.placeholder"
              }
            },
            {
              "id": 1450,
              "name": "prefetch",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the data and module prefetching behavior for the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link /> // default\n<Link prefetch=\"none\" />\n<Link prefetch=\"intent\" />\n<Link prefetch=\"render\" />\n<Link prefetch=\"viewport\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n- **none** - default, no prefetching\n- **intent** - prefetches when the user hovers or focuses the link\n- **render** - prefetches when the link renders\n- **viewport** - prefetches when the link is in the viewport, very useful for mobile\n\nPrefetching is done with HTML "
                  },
                  {
                    "kind": "code",
                    "text": "`<link rel=\"prefetch\">`"
                  },
                  {
                    "kind": "text",
                    "text": " tags. They are inserted after the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<a href=\"...\" />\n<a href=\"...\" />\n<link rel=\"prefetch\" /> // might conditionally render\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nBecause of this, if you are using "
                  },
                  {
                    "kind": "code",
                    "text": "`nav :last-child`"
                  },
                  {
                    "kind": "text",
                    "text": " you will need to use "
                  },
                  {
                    "kind": "code",
                    "text": "`nav :last-of-type`"
                  },
                  {
                    "kind": "text",
                    "text": " so the styles don't conditionally fall off your last link (and any other similar selectors)."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 745,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L745"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "qualifiedName": "PrefetchBehavior"
                },
                "name": "PrefetchBehavior",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.prefetch"
              }
            },
            {
              "id": 1451,
              "name": "prefix",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1957,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.prefix"
              }
            },
            {
              "id": 1452,
              "name": "preventScrollReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Prevents the scroll position from being reset to the top of the window when the link is clicked and the app is using "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "ScrollRestoration",
                    "target": 2365,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ". This only prevents new locations reseting scroll to the top, scroll position will be restored for back/forward button navigation.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"?tab=one\" preventScrollReset />\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 803,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L803"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.preventScrollReset"
              }
            },
            {
              "id": 1453,
              "name": "property",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1958,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.property"
              }
            },
            {
              "id": 1454,
              "name": "radioGroup",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1947,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.radioGroup"
              }
            },
            {
              "id": 1455,
              "name": "referrerPolicy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2137,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.HTMLAttributeReferrerPolicy"
                },
                "name": "HTMLAttributeReferrerPolicy",
                "package": "@types/react",
                "qualifiedName": "React.HTMLAttributeReferrerPolicy"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.referrerPolicy"
              }
            },
            {
              "id": 1456,
              "name": "rel",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1959,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.rel"
              }
            },
            {
              "id": 1457,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Defines the relative path behavior for the link.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"..\" /> // default: \"route\"\n<Link relative=\"route\" />\n<Link relative=\"path\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nConsider a route hierarchy where a parent route pattern is \"blog\" and a child route pattern is \"blog/:slug/edit\".\n\n- **route** - default, resolves the link relative to the route pattern. In the example above a relative link of "
                  },
                  {
                    "kind": "code",
                    "text": "`\"..\"`"
                  },
                  {
                    "kind": "text",
                    "text": " will remove both "
                  },
                  {
                    "kind": "code",
                    "text": "`:slug/edit`"
                  },
                  {
                    "kind": "text",
                    "text": " segments back to \"/blog\".\n- **path** - relative to the path so "
                  },
                  {
                    "kind": "code",
                    "text": "`..`"
                  },
                  {
                    "kind": "text",
                    "text": " will only remove one URL segment up to \"/blog/:slug\""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 819,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L819"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.relative"
              }
            },
            {
              "id": 1458,
              "name": "reloadDocument",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Will use document navigation instead of client side routing when the link is clicked: the browser will handle the transition normally (as if it were an "
                  },
                  {
                    "kind": "code",
                    "text": "`<a href>`"
                  },
                  {
                    "kind": "text",
                    "text": ").\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"/logout\" reloadDocument />\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 754,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L754"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.reloadDocument"
              }
            },
            {
              "id": 1459,
              "name": "replace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Replaces the current entry in the history stack instead of pushing a new one onto it.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link replace />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```\n# with a history stack like this\nA -> B\n\n# normal link click pushes a new entry\nA -> B -> C\n\n# but with `replace`, B is replaced by C\nA -> C\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 774,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L774"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.replace"
              }
            },
            {
              "id": 1460,
              "name": "resource",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1960,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.resource"
              }
            },
            {
              "id": 1461,
              "name": "results",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1975,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.results"
              }
            },
            {
              "id": 1462,
              "name": "rev",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1961,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.rev"
              }
            },
            {
              "id": 1463,
              "name": "role",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1950,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.AriaRole"
                },
                "name": "AriaRole",
                "package": "@types/react",
                "qualifiedName": "React.AriaRole"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.role"
              }
            },
            {
              "id": 1464,
              "name": "security",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1976,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.security"
              }
            },
            {
              "id": 1465,
              "name": "slot",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1939,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.slot"
              }
            },
            {
              "id": 1466,
              "name": "spellCheck",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1940,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "Booleanish"
                },
                "name": "Booleanish",
                "package": "@types/react"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.spellCheck"
              }
            },
            {
              "id": 1467,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Adds persistent client side routing state to the next location.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"/somewhere/else\" state={{ some: \"value\" }} />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nThe location state is accessed from the "
                  },
                  {
                    "kind": "code",
                    "text": "`location`"
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nfunction SomeComp() {\n  const location = useLocation()\n  location.state; // { some: \"value\" }\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nThis state is inaccessible on the server as it is implemented on top of ["
                  },
                  {
                    "kind": "code",
                    "text": "`history.state`"
                  },
                  {
                    "kind": "text",
                    "text": "](https://developer.mozilla.org/en-US/docs/Web/API/History/state)"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 794,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L794"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.state"
              }
            },
            {
              "id": 1468,
              "name": "style",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1085,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1085"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.CSSProperties"
                    },
                    "name": "CSSProperties",
                    "package": "@types/react",
                    "qualifiedName": "React.CSSProperties"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 1469,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1087,
                          "character": 7,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1087"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 1470,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1087,
                              "character": 7,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1087"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 1471,
                              "name": "props",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": 2147,
                                "name": "NavLinkRenderProps",
                                "package": "react-router"
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                                  "qualifiedName": "React.CSSProperties"
                                },
                                "name": "CSSProperties",
                                "package": "@types/react",
                                "qualifiedName": "React.CSSProperties"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                ]
              }
            },
            {
              "id": 1472,
              "name": "suppressContentEditableWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1923,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.suppressContentEditableWarning"
              }
            },
            {
              "id": 1473,
              "name": "suppressHydrationWarning",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1924,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.suppressHydrationWarning"
              }
            },
            {
              "id": 1474,
              "name": "tabIndex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1942,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.tabIndex"
              }
            },
            {
              "id": 1475,
              "name": "target",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2135,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.HTMLAttributeAnchorTarget"
                },
                "name": "HTMLAttributeAnchorTarget",
                "package": "@types/react",
                "qualifiedName": "React.HTMLAttributeAnchorTarget"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.target"
              }
            },
            {
              "id": 1476,
              "name": "title",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1943,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.title"
              }
            },
            {
              "id": 1477,
              "name": "to",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Can be a string or a partial "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Path",
                    "target": 1556
                  },
                  {
                    "kind": "text",
                    "text": ":\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Link to=\"/some/path\" />\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 836,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L836"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2248,
                "name": "To",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.to"
              }
            },
            {
              "id": 1478,
              "name": "translate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1944,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "yes"
                  },
                  {
                    "type": "literal",
                    "value": "no"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.translate"
              }
            },
            {
              "id": 1479,
              "name": "type",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 2136,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.type"
              }
            },
            {
              "id": 1480,
              "name": "typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1962,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.typeof"
              }
            },
            {
              "id": 1481,
              "name": "unselectable",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1977,
                  "character": 8
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "on"
                  },
                  {
                    "type": "literal",
                    "value": "off"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.unselectable"
              }
            },
            {
              "id": 1482,
              "name": "unstable_viewTransition",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Enables a [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) for this navigation.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```jsx\n<Link to={to} unstable_viewTransition>\n  Click me\n</Link>\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nTo apply specific styles for the transition, see "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useViewTransitionState",
                    "target": 2581,
                    "tsLinkText": ""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 849,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L849"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.unstable_viewTransition"
              }
            },
            {
              "id": 1483,
              "name": "vocab",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 1963,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.vocab"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198,
                1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208,
                1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218,
                1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228,
                1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238,
                1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248,
                1249, 1253, 1257, 1258, 1259, 1260, 1261, 1264, 1265, 1266,
                1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276,
                1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286,
                1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296,
                1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306,
                1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316,
                1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326,
                1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336,
                1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346,
                1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356,
                1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366,
                1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376,
                1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386,
                1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396,
                1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406,
                1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416,
                1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426,
                1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436,
                1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446,
                1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456,
                1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466,
                1467, 1468, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479,
                1480, 1481, 1482, 1483
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1033,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1033"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Omit"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 871,
                  "name": "LinkProps",
                  "package": "react-router"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "className"
                    },
                    {
                      "type": "literal",
                      "value": "style"
                    },
                    {
                      "type": "literal",
                      "value": "children"
                    }
                  ]
                }
              ],
              "name": "Omit",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 1484,
          "name": "NavigateFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The interface for the navigate() function returned from useNavigate()."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 178,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L178"
            }
          ],
          "signatures": [
            {
              "id": 1485,
              "name": "NavigateFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 179,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L179"
                }
              ],
              "parameters": [
                {
                  "id": 1486,
                  "name": "to",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2248,
                    "name": "To",
                    "package": "react-router"
                  }
                },
                {
                  "id": 1487,
                  "name": "options",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": 1490,
                    "name": "NavigateOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            },
            {
              "id": 1488,
              "name": "NavigateFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 180,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L180"
                }
              ],
              "parameters": [
                {
                  "id": 1489,
                  "name": "delta",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 1490,
          "name": "NavigateOptions",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1491,
              "name": "preventScrollReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 96,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L96"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1492,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 97,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L97"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              }
            },
            {
              "id": 1493,
              "name": "replace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 94,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L94"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1494,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 95,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L95"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1495,
              "name": "unstable_flushSync",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 98,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L98"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1496,
              "name": "unstable_viewTransition",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 99,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L99"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1491, 1492, 1493, 1494, 1495, 1496]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 93,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L93"
            }
          ]
        },
        {
          "id": 1497,
          "name": "NavigateProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1498,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 215,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L215"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              }
            },
            {
              "id": 1499,
              "name": "replace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 213,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L213"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1500,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 214,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L214"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1501,
              "name": "to",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 212,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L212"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2248,
                "name": "To",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1498, 1499, 1500, 1501]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 211,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L211"
            }
          ]
        },
        {
          "id": 1502,
          "name": "Navigator",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A Navigator is a \"location changer\"; it's how you get to different locations.\n\nEvery history instance conforms to the Navigator interface, but the\ndistinction is useful primarily when it comes to the low-level "
              },
              {
                "kind": "code",
                "text": "`<Router>`"
              },
              {
                "kind": "text",
                "text": " API\nwhere both the location and a navigator must be provided separately in order\nto avoid \"tearing\" that may occur in a suspense-enabled app if the action\nand/or location were to be read directly from the history instance."
              }
            ]
          },
          "children": [
            {
              "id": 1503,
              "name": "createHref",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 112,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L112"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1504,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/history.ts",
                      "line": 133,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L133"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1505,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Returns a valid href for the given "
                          },
                          {
                            "kind": "code",
                            "text": "`to`"
                          },
                          {
                            "kind": "text",
                            "text": " value that may be used as\nthe value of an <a href> attribute."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/history.ts",
                          "line": 133,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L133"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1506,
                          "name": "to",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The destination URL"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": 2248,
                            "name": "To",
                            "package": "react-router"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1507,
              "name": "encodeLocation",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 114,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L114"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1508,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/history.ts",
                      "line": 149,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L149"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1509,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Encode a location the same way window.history would do (no-op for memory\nhistory) so we ensure our PUSH/REPLACE navigations for data routers\nbehave the same as POP"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/history.ts",
                          "line": 149,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L149"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1510,
                          "name": "to",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "Unencoded path"
                              }
                            ]
                          },
                          "type": {
                            "type": "reference",
                            "target": 2248,
                            "name": "To",
                            "package": "react-router"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 1556,
                        "name": "Path",
                        "package": "react-router"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1511,
              "name": "go",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 115,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L115"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1512,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/history.ts",
                      "line": 176,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L176"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1513,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Navigates "
                          },
                          {
                            "kind": "code",
                            "text": "`n`"
                          },
                          {
                            "kind": "text",
                            "text": " entries backward/forward in the history stack relative to the\ncurrent index. For example, a \"back\" navigation would use go(-1)."
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/history.ts",
                          "line": 176,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L176"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1514,
                          "name": "delta",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "The delta in the stack index"
                              }
                            ]
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1515,
              "name": "push",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 116,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L116"
                }
              ],
              "signatures": [
                {
                  "id": 1516,
                  "name": "push",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/context.ts",
                      "line": 116,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L116"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1517,
                      "name": "to",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 2248,
                        "name": "To",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 1518,
                      "name": "state",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 1519,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 1490,
                        "name": "NavigateOptions",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 1520,
              "name": "replace",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 117,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L117"
                }
              ],
              "signatures": [
                {
                  "id": 1521,
                  "name": "replace",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/context.ts",
                      "line": 117,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L117"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1522,
                      "name": "to",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 2248,
                        "name": "To",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 1523,
                      "name": "state",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 1524,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 1490,
                        "name": "NavigateOptions",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1503, 1507, 1511]
            },
            {
              "title": "Methods",
              "children": [1515, 1520]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 111,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L111"
            }
          ]
        },
        {
          "id": 1525,
          "name": "NonIndexRouteObject",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1526,
              "name": "Component",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 53,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L53"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1527,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 1528,
              "name": "ErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 55,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L55"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1529,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 1530,
              "name": "HydrateFallback",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 54,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L54"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1531,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 1532,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 44,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L44"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 114,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ActionFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 1533,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 40,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L40"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1534,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 49,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L49"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 2204,
                  "name": "RouteObject",
                  "package": "react-router"
                }
              }
            },
            {
              "id": 1535,
              "name": "element",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 50,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L50"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1536,
              "name": "errorElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 52,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L52"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1537,
              "name": "handle",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 47,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L47"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1538,
              "name": "hasErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 45,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L45"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1539,
              "name": "hydrateFallbackElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 51,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L51"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1540,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 42,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L42"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1541,
              "name": "index",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 48,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L48"
                }
              ],
              "type": {
                "type": "literal",
                "value": false
              }
            },
            {
              "id": 1542,
              "name": "lazy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 56,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L56"
                }
              ],
              "type": {
                "type": "reference",
                "target": 868,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2204,
                    "name": "RouteObject",
                    "package": "react-router"
                  }
                ],
                "name": "LazyRouteFunction",
                "package": "react-router"
              }
            },
            {
              "id": 1543,
              "name": "loader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 43,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L43"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 2100,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "LoaderFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 1544,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 41,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L41"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1545,
              "name": "shouldRevalidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/context.ts",
                  "line": 46,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L46"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1716,
                "name": "ShouldRevalidateFunction",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1526, 1528, 1530, 1532, 1533, 1534, 1535, 1536, 1537, 1538,
                1539, 1540, 1541, 1542, 1543, 1544, 1545
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 39,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L39"
            }
          ]
        },
        {
          "id": 1546,
          "name": "OutletProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1547,
              "name": "context",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Provides a context value to the element tree below the outlet. Use when the parent route needs to provide values to child routes.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<Outlet context={myContextValue} />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nAccess the context with "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useOutletContext",
                    "target": 2664
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 283,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L283"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1547]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 273,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L273"
            }
          ]
        },
        {
          "id": 1548,
          "name": "PageLinkDescriptor",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1549,
              "name": "crossOrigin",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "How the element handles crossorigin requests"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 16,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L16"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "anonymous"
                  },
                  {
                    "type": "literal",
                    "value": "use-credentials"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.crossOrigin"
              }
            },
            {
              "id": 1550,
              "name": "disabled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Whether the link is disabled"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 113,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L113"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.disabled"
              }
            },
            {
              "id": 1551,
              "name": "hrefLang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Language of the linked resource"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 51,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L51"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.hrefLang"
              }
            },
            {
              "id": 1552,
              "name": "integrity",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Integrity metadata used in Subresource Integrity checks"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 46,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L46"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.integrity"
              }
            },
            {
              "id": 1553,
              "name": "media",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Applicable media: \"screen\", \"print\", \"(max-width: 764px)\""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 41,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L41"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.media"
              }
            },
            {
              "id": 1554,
              "name": "page",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The absolute path of the page to prefetch."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 189,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L189"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1555,
              "name": "referrerPolicy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Referrer policy for fetches initiated by the element"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/links.ts",
                  "line": 61,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L61"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "no-referrer"
                  },
                  {
                    "type": "literal",
                    "value": "no-referrer-when-downgrade"
                  },
                  {
                    "type": "literal",
                    "value": "same-origin"
                  },
                  {
                    "type": "literal",
                    "value": "origin"
                  },
                  {
                    "type": "literal",
                    "value": "strict-origin"
                  },
                  {
                    "type": "literal",
                    "value": "origin-when-cross-origin"
                  },
                  {
                    "type": "literal",
                    "value": "strict-origin-when-cross-origin"
                  },
                  {
                    "type": "literal",
                    "value": "unsafe-url"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.referrerPolicy"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1549, 1550, 1551, 1552, 1553, 1554, 1555]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/links.ts",
              "line": 173,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/links.ts#L173"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Omit"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
                    "qualifiedName": "HtmlLinkDescriptor"
                  },
                  "name": "HtmlLinkDescriptor",
                  "package": "react-router"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "href"
                    },
                    {
                      "type": "literal",
                      "value": "rel"
                    },
                    {
                      "type": "literal",
                      "value": "type"
                    },
                    {
                      "type": "literal",
                      "value": "sizes"
                    },
                    {
                      "type": "literal",
                      "value": "imageSrcSet"
                    },
                    {
                      "type": "literal",
                      "value": "imageSizes"
                    },
                    {
                      "type": "literal",
                      "value": "as"
                    },
                    {
                      "type": "literal",
                      "value": "color"
                    },
                    {
                      "type": "literal",
                      "value": "title"
                    }
                  ]
                }
              ],
              "name": "Omit",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 1556,
          "name": "Path",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The pathname, search, and hash values of a URL."
              }
            ]
          },
          "children": [
            {
              "id": 1557,
              "name": "hash",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A URL fragment identifier, beginning with a #."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 49,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L49"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1558,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A URL pathname, beginning with a /."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 39,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L39"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1559,
              "name": "search",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A URL search string, beginning with a ?."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 44,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L44"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1557, 1558, 1559]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 35,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L35"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "target": 1163,
              "name": "Location"
            }
          ]
        },
        {
          "id": 1560,
          "name": "PathMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A PathMatch contains info about how a PathPattern matched on a URL pathname."
              }
            ]
          },
          "children": [
            {
              "id": 1561,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The names and values of dynamic parameters in the URL."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 936,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L936"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1565,
                    "name": "ParamKey",
                    "package": "react-router",
                    "qualifiedName": "PathMatch.ParamKey",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "Params",
                "package": "react-router"
              }
            },
            {
              "id": 1562,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 940,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L940"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1563,
              "name": "pathnameBase",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched before child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 944,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L944"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1564,
              "name": "pattern",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The pattern that was used to match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 948,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L948"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1566,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "PathPattern",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1561, 1562, 1563, 1564]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 932,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L932"
            }
          ],
          "typeParameters": [
            {
              "id": 1565,
              "name": "ParamKey",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "default": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 1566,
          "name": "PathPattern",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A PathPattern is used to match on some portion of a URL pathname."
              }
            ]
          },
          "children": [
            {
              "id": 1567,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Should be "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " if the static portions of the "
                  },
                  {
                    "kind": "code",
                    "text": "`path`"
                  },
                  {
                    "kind": "text",
                    "text": " should be matched in\nthe same case."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 922,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L922"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1568,
              "name": "end",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Should be "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " if this pattern should match the entire URL pathname."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 926,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L926"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1569,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A string to match against a URL pathname. May contain "
                  },
                  {
                    "kind": "code",
                    "text": "`:id`"
                  },
                  {
                    "kind": "text",
                    "text": "-style segments\nto indicate placeholders for dynamic parameters. May also end with "
                  },
                  {
                    "kind": "code",
                    "text": "`/*`"
                  },
                  {
                    "kind": "text",
                    "text": " to\nindicate matching the rest of the URL pathname."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 917,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L917"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1570,
                "name": "Path",
                "package": "react-router",
                "qualifiedName": "PathPattern.Path",
                "refersToTypeParameter": true
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1567, 1568, 1569]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 911,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L911"
            }
          ],
          "typeParameters": [
            {
              "id": 1570,
              "name": "Path",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "default": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 1571,
          "name": "PathRouteProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1572,
              "name": "Component",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 326,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L326"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1573,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 1574,
              "name": "ErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 328,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L328"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1575,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 1576,
              "name": "HydrateFallback",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 327,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L327"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ComponentType"
                    },
                    "typeArguments": [
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1577,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {}
                        }
                      }
                    ],
                    "name": "ComponentType",
                    "package": "@types/react",
                    "qualifiedName": "React.ComponentType"
                  }
                ]
              }
            },
            {
              "id": 1578,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 317,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L317"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 114,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ActionFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 1579,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 312,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L312"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1580,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 322,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L322"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1581,
              "name": "element",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 323,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L323"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1582,
              "name": "errorElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 325,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L325"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1583,
              "name": "handle",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 320,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L320"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1584,
              "name": "hasErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 318,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L318"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1585,
              "name": "hydrateFallbackElement",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 324,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L324"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1586,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 314,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L314"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1587,
              "name": "index",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 321,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L321"
                }
              ],
              "type": {
                "type": "literal",
                "value": false
              }
            },
            {
              "id": 1588,
              "name": "lazy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 315,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L315"
                }
              ],
              "type": {
                "type": "reference",
                "target": 868,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1525,
                    "name": "NonIndexRouteObject",
                    "package": "react-router"
                  }
                ],
                "name": "LazyRouteFunction",
                "package": "react-router"
              }
            },
            {
              "id": 1589,
              "name": "loader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 316,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L316"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "boolean"
                  },
                  {
                    "type": "reference",
                    "target": 2100,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "LoaderFunction",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 1590,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 313,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L313"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1591,
              "name": "shouldRevalidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 319,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L319"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1716,
                "name": "ShouldRevalidateFunction",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1572, 1574, 1576, 1578, 1579, 1580, 1581, 1582, 1583, 1584,
                1585, 1586, 1587, 1588, 1589, 1590, 1591
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 311,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L311"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "target": 847,
              "name": "LayoutRouteProps"
            }
          ]
        },
        {
          "id": 1592,
          "name": "PrefetchPageDescriptor",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1593,
              "name": "crossOrigin",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "How the element handles crossorigin requests"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 24,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L24"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "anonymous"
                  },
                  {
                    "type": "literal",
                    "value": "use-credentials"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.crossOrigin"
              }
            },
            {
              "id": 1594,
              "name": "disabled",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Whether the link is disabled"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 121,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L121"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.disabled"
              }
            },
            {
              "id": 1595,
              "name": "hrefLang",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Language of the linked resource"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 59,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L59"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.hrefLang"
              }
            },
            {
              "id": 1596,
              "name": "integrity",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Integrity metadata used in Subresource Integrity checks"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 54,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L54"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.integrity"
              }
            },
            {
              "id": 1597,
              "name": "media",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Applicable media: \"screen\", \"print\", \"(max-width: 764px)\""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 49,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L49"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.media"
              }
            },
            {
              "id": 1598,
              "name": "page",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The absolute path of the page to prefetch."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 197,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L197"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1599,
              "name": "referrerPolicy",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Referrer policy for fetches initiated by the element"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                  "line": 69,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L69"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": ""
                  },
                  {
                    "type": "literal",
                    "value": "no-referrer"
                  },
                  {
                    "type": "literal",
                    "value": "no-referrer-when-downgrade"
                  },
                  {
                    "type": "literal",
                    "value": "same-origin"
                  },
                  {
                    "type": "literal",
                    "value": "origin"
                  },
                  {
                    "type": "literal",
                    "value": "strict-origin"
                  },
                  {
                    "type": "literal",
                    "value": "origin-when-cross-origin"
                  },
                  {
                    "type": "literal",
                    "value": "strict-origin-when-cross-origin"
                  },
                  {
                    "type": "literal",
                    "value": "unsafe-url"
                  }
                ]
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Omit.referrerPolicy"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1593, 1594, 1595, 1596, 1597, 1598, 1599]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/links.ts",
              "line": 181,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L181"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Omit"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 2080,
                  "name": "HtmlLinkDescriptor",
                  "package": "react-router"
                },
                {
                  "type": "union",
                  "types": [
                    {
                      "type": "literal",
                      "value": "href"
                    },
                    {
                      "type": "literal",
                      "value": "rel"
                    },
                    {
                      "type": "literal",
                      "value": "type"
                    },
                    {
                      "type": "literal",
                      "value": "sizes"
                    },
                    {
                      "type": "literal",
                      "value": "imageSrcSet"
                    },
                    {
                      "type": "literal",
                      "value": "imageSizes"
                    },
                    {
                      "type": "literal",
                      "value": "as"
                    },
                    {
                      "type": "literal",
                      "value": "color"
                    },
                    {
                      "type": "literal",
                      "value": "title"
                    }
                  ]
                }
              ],
              "name": "Omit",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 1600,
          "name": "RouteMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A RouteMatch contains info about how a route matched a URL."
              }
            ]
          },
          "children": [
            {
              "id": 1601,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The names and values of dynamic parameters in the URL."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 421,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L421"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1605,
                    "name": "ParamKey",
                    "package": "react-router",
                    "qualifiedName": "RouteMatch.ParamKey",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 130,
                "name": "AgnosticRouteMatch.params"
              }
            },
            {
              "id": 1602,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 425,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L425"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 131,
                "name": "AgnosticRouteMatch.pathname"
              }
            },
            {
              "id": 1603,
              "name": "pathnameBase",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched before child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 429,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L429"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 132,
                "name": "AgnosticRouteMatch.pathnameBase"
              }
            },
            {
              "id": 1604,
              "name": "route",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The route object that was used to match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 433,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L433"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1606,
                "name": "RouteObjectType",
                "package": "react-router",
                "qualifiedName": "RouteMatch.RouteObjectType",
                "refersToTypeParameter": true
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 133,
                "name": "AgnosticRouteMatch.route"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1601, 1602, 1603, 1604]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 66,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L66"
            }
          ],
          "typeParameters": [
            {
              "id": 1605,
              "name": "ParamKey",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "default": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1606,
              "name": "RouteObjectType",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": 2204,
                "name": "RouteObject",
                "package": "react-router"
              },
              "default": {
                "type": "reference",
                "target": 2204,
                "name": "RouteObject",
                "package": "react-router"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 129,
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 1605,
                  "name": "ParamKey",
                  "package": "react-router",
                  "qualifiedName": "RouteMatch.ParamKey",
                  "refersToTypeParameter": true
                },
                {
                  "type": "reference",
                  "target": 1606,
                  "name": "RouteObjectType",
                  "package": "react-router",
                  "qualifiedName": "RouteMatch.RouteObjectType",
                  "refersToTypeParameter": true
                }
              ],
              "name": "AgnosticRouteMatch",
              "package": "react-router"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "target": 178,
              "name": "DataRouteMatch"
            }
          ]
        },
        {
          "id": 1607,
          "name": "RouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1608,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 381,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L381"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1609,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 382,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L382"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1610,
              "name": "location",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 383,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L383"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Partial"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1163,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "Location",
                        "package": "react-router"
                      }
                    ],
                    "name": "Partial",
                    "package": "typescript"
                  }
                ]
              }
            },
            {
              "id": 1611,
              "name": "navigationType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 384,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L384"
                }
              ],
              "type": {
                "type": "reference",
                "target": 3,
                "name": "Action",
                "package": "react-router"
              }
            },
            {
              "id": 1612,
              "name": "navigator",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 385,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L385"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1502,
                "name": "Navigator",
                "package": "react-router"
              }
            },
            {
              "id": 1613,
              "name": "static",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 386,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L386"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1608, 1609, 1610, 1611, 1612, 1613]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 380,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L380"
            }
          ]
        },
        {
          "id": 1614,
          "name": "RouterProviderProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1615,
              "name": "router",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 308,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L308"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "Router"
                },
                "name": "Router",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1615]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 307,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L307"
            }
          ]
        },
        {
          "id": 1616,
          "name": "RoutesProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1617,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Nested "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Route",
                    "target": 2350,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " elements"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 481,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L481"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1618,
              "name": "location",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The location to match against. Defaults to the current location."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 486,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L486"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Partial"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1163,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "Location",
                        "package": "react-router"
                      }
                    ],
                    "name": "Partial",
                    "package": "typescript"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1617, 1618]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 477,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L477"
            }
          ]
        },
        {
          "id": 1619,
          "name": "RoutesTestStubProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1620,
              "name": "future",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Future flags mimicking the settings in remix.config.js"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                  "line": 87,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L87"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1872,
                    "name": "FutureConfig",
                    "package": "react-router"
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 1621,
              "name": "hydrationData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Used to set the route's initial loader and action data.\n e.g. hydrationData={{\n  loaderData: { \"/contact\": { locale: \"en-US\" } },\n  actionData: { \"/login\": { errors: { email: \"invalid email\" } }}\n }}"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                  "line": 82,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L82"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Pick"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/router.ts",
                          "qualifiedName": "RouterState"
                        },
                        "name": "RouterState",
                        "package": "react-router"
                      },
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "loaderData"
                          },
                          {
                            "type": "literal",
                            "value": "actionData"
                          },
                          {
                            "type": "literal",
                            "value": "errors"
                          }
                        ]
                      }
                    ],
                    "name": "Pick",
                    "package": "typescript"
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 1622,
              "name": "initialEntries",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The initial entries in the history stack. This allows you to start a test with\n multiple locations already in the history stack (for testing a back navigation, etc.)\n The test will default to the last entry in initialEntries if no initialIndex is provided.\n e.g. initialEntries={[\"/home\", \"/about\", \"/contact\"]}"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                  "line": 64,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L64"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 2084,
                  "name": "InitialEntry",
                  "package": "react-router"
                }
              }
            },
            {
              "id": 1623,
              "name": "initialIndex",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The initial index in the history stack to render. This allows you to start a test at a specific entry.\nIt defaults to the last entry in initialEntries.\ne.g.\n  initialEntries: [\"/\", \"/events/123\"]\n  initialIndex: 1 // start at \"/events/123\""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                  "line": 73,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L73"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1620, 1621, 1622, 1623]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
              "line": 57,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L57"
            }
          ]
        },
        {
          "id": 1624,
          "name": "ServerBuild",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The output of the compiler for the server build."
              }
            ]
          },
          "children": [
            {
              "id": 1625,
              "name": "assets",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 18,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L18"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1825,
                "name": "AssetsManifest",
                "package": "react-router"
              }
            },
            {
              "id": 1626,
              "name": "assetsBuildDirectory",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 21,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L21"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1627,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 19,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L19"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1628,
              "name": "entry",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 14,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L14"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1629,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1630,
                      "name": "module",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/build.ts",
                          "line": 15,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L15"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 1635,
                        "name": "ServerEntryModule",
                        "package": "react-router"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1630]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/build.ts",
                      "line": 14,
                      "character": 9,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L14"
                    }
                  ]
                }
              }
            },
            {
              "id": 1631,
              "name": "future",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 22,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L22"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1872,
                "name": "FutureConfig",
                "package": "react-router"
              }
            },
            {
              "id": 1632,
              "name": "isSpaMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 23,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L23"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1633,
              "name": "publicPath",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 20,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L20"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1634,
              "name": "routes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 17,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L17"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/server-runtime/routes.ts",
                  "qualifiedName": "ServerRouteManifest"
                },
                "name": "ServerRouteManifest",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1625, 1626, 1627, 1628, 1631, 1632, 1633, 1634]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/build.ts",
              "line": 13,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L13"
            }
          ]
        },
        {
          "id": 1635,
          "name": "ServerEntryModule",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A module that serves as the entry point for a Remix app during server\nrendering."
              }
            ]
          },
          "children": [
            {
              "id": 1636,
              "name": "default",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 51,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L51"
                }
              ],
              "type": {
                "type": "reference",
                "target": 783,
                "name": "HandleDocumentRequestFunction",
                "package": "react-router"
              }
            },
            {
              "id": 1637,
              "name": "handleDataRequest",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 52,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L52"
                }
              ],
              "type": {
                "type": "reference",
                "target": 779,
                "name": "HandleDataRequestFunction",
                "package": "react-router"
              }
            },
            {
              "id": 1638,
              "name": "handleError",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 53,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L53"
                }
              ],
              "type": {
                "type": "reference",
                "target": 790,
                "name": "HandleErrorFunction",
                "package": "react-router"
              }
            },
            {
              "id": 1639,
              "name": "streamTimeout",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/build.ts",
                  "line": 54,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L54"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1636, 1637, 1638, 1639]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/build.ts",
              "line": 50,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/build.ts#L50"
            }
          ]
        },
        {
          "id": 1640,
          "name": "ServerRouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1641,
              "name": "abortDelay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
                  "line": 14,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L14"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1642,
              "name": "context",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
                  "line": 12,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L12"
                }
              ],
              "type": {
                "type": "reference",
                "target": 183,
                "name": "EntryContext",
                "package": "react-router"
              }
            },
            {
              "id": 1643,
              "name": "nonce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
                  "line": 15,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L15"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1644,
              "name": "url",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
                  "line": 13,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L13"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "URL"
                    },
                    "name": "URL",
                    "package": "typescript"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1641, 1642, 1643, 1644]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
              "line": 11,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L11"
            }
          ]
        },
        {
          "id": 1645,
          "name": "Session",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Session persists data across HTTP requests."
              }
            ],
            "blockTags": [
              {
                "tag": "@see",
                "content": [
                  {
                    "kind": "text",
                    "text": "https://remix.run/utils/sessions#session-api"
                  }
                ]
              }
            ]
          },
          "children": [
            {
              "id": 1646,
              "name": "data",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The raw data contained in this session.\n\nThis is useful mostly for SessionStorage internally to access the raw\nsession data to persist."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 34,
                  "character": 11,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L34"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 1668,
                        "name": "Data",
                        "package": "react-router",
                        "qualifiedName": "Session.Data",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "mapped",
                        "parameter": "Key",
                        "parameterType": {
                          "type": "union",
                          "types": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "intrinsic",
                              "name": "number"
                            },
                            {
                              "type": "intrinsic",
                              "name": "symbol"
                            }
                          ]
                        },
                        "templateType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "target": 1655,
                            "name": "Key",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          "objectType": {
                            "type": "reference",
                            "target": 1669,
                            "name": "FlashData",
                            "package": "react-router",
                            "qualifiedName": "Session.FlashData",
                            "refersToTypeParameter": true
                          }
                        },
                        "nameType": {
                          "type": "templateLiteral",
                          "head": "__flash_",
                          "tail": [
                            [
                              {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": 1655,
                                    "name": "Key",
                                    "package": "react-router",
                                    "refersToTypeParameter": true
                                  },
                                  {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                ]
                              },
                              "__"
                            ]
                          ]
                        }
                      }
                    ]
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 1647,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isReadonly": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A unique identifier for this session.\n\nNote: This will be the empty string for newly created sessions and\nsessions that are not backed by a database (i.e. cookie-based sessions)."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 26,
                  "character": 11,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L26"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1648,
              "name": "flash",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 61,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L61"
                }
              ],
              "signatures": [
                {
                  "id": 1649,
                  "name": "flash",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Sets a value in the session that is only valid until the next "
                      },
                      {
                        "kind": "code",
                        "text": "`get()`"
                      },
                      {
                        "kind": "text",
                        "text": ".\nThis can be useful for temporary values, like error messages."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 61,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L61"
                    }
                  ],
                  "typeParameter": [
                    {
                      "id": 1650,
                      "name": "Key",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1651,
                      "name": "name",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 1650,
                        "name": "Key",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 1652,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "target": 1650,
                          "name": "Key",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        },
                        "objectType": {
                          "type": "reference",
                          "target": 1669,
                          "name": "FlashData",
                          "package": "react-router",
                          "qualifiedName": "Session.FlashData",
                          "refersToTypeParameter": true
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 1653,
              "name": "get",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 45,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L45"
                }
              ],
              "signatures": [
                {
                  "id": 1654,
                  "name": "get",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Returns the value for the given "
                      },
                      {
                        "kind": "code",
                        "text": "`name`"
                      },
                      {
                        "kind": "text",
                        "text": " in this session."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 45,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L45"
                    }
                  ],
                  "typeParameter": [
                    {
                      "id": 1655,
                      "name": "Key",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1656,
                      "name": "name",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 1655,
                        "name": "Key",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "target": 1655,
                          "name": "Key",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        },
                        "extendsType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "target": 1668,
                            "name": "Data",
                            "package": "react-router",
                            "qualifiedName": "Session.Data",
                            "refersToTypeParameter": true
                          }
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "target": 1655,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 1655,
                                "name": "Key",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Key",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          "objectType": {
                            "type": "reference",
                            "target": 1668,
                            "name": "Data",
                            "package": "react-router",
                            "qualifiedName": "Session.Data",
                            "refersToTypeParameter": true
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "undefined"
                        }
                      },
                      {
                        "type": "conditional",
                        "checkType": {
                          "type": "reference",
                          "target": 1655,
                          "name": "Key",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        },
                        "extendsType": {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "target": 1669,
                            "name": "FlashData",
                            "package": "react-router",
                            "qualifiedName": "Session.FlashData",
                            "refersToTypeParameter": true
                          }
                        },
                        "trueType": {
                          "type": "indexedAccess",
                          "indexType": {
                            "type": "reference",
                            "target": 1655,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 1655,
                                "name": "Key",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Key",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          "objectType": {
                            "type": "reference",
                            "target": 1669,
                            "name": "FlashData",
                            "package": "react-router",
                            "qualifiedName": "Session.FlashData",
                            "refersToTypeParameter": true
                          }
                        },
                        "falseType": {
                          "type": "intrinsic",
                          "name": "undefined"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            {
              "id": 1657,
              "name": "has",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 40,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L40"
                }
              ],
              "signatures": [
                {
                  "id": 1658,
                  "name": "has",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Returns "
                      },
                      {
                        "kind": "code",
                        "text": "`true`"
                      },
                      {
                        "kind": "text",
                        "text": " if the session has a value for the given "
                      },
                      {
                        "kind": "code",
                        "text": "`name`"
                      },
                      {
                        "kind": "text",
                        "text": ", "
                      },
                      {
                        "kind": "code",
                        "text": "`false`"
                      },
                      {
                        "kind": "text",
                        "text": "\notherwise."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 40,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L40"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1659,
                      "name": "name",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "reference",
                                  "target": 1669,
                                  "name": "FlashData",
                                  "package": "react-router",
                                  "qualifiedName": "Session.FlashData",
                                  "refersToTypeParameter": true
                                }
                              },
                              {
                                "type": "typeOperator",
                                "operator": "keyof",
                                "target": {
                                  "type": "reference",
                                  "target": 1668,
                                  "name": "Data",
                                  "package": "react-router",
                                  "qualifiedName": "Session.Data",
                                  "refersToTypeParameter": true
                                }
                              }
                            ]
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            },
            {
              "id": 1660,
              "name": "set",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 55,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L55"
                }
              ],
              "signatures": [
                {
                  "id": 1661,
                  "name": "set",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Sets a value in the session for the given "
                      },
                      {
                        "kind": "code",
                        "text": "`name`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 55,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L55"
                    }
                  ],
                  "typeParameter": [
                    {
                      "id": 1662,
                      "name": "Key",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1663,
                      "name": "name",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 1662,
                        "name": "Key",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 1664,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "indexedAccess",
                        "indexType": {
                          "type": "reference",
                          "target": 1662,
                          "name": "Key",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        },
                        "objectType": {
                          "type": "reference",
                          "target": 1668,
                          "name": "Data",
                          "package": "react-router",
                          "qualifiedName": "Session.Data",
                          "refersToTypeParameter": true
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            },
            {
              "id": 1665,
              "name": "unset",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 69,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L69"
                }
              ],
              "signatures": [
                {
                  "id": 1666,
                  "name": "unset",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Removes a value from the session."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 69,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L69"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1667,
                      "name": "name",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intersection",
                        "types": [
                          {
                            "type": "typeOperator",
                            "operator": "keyof",
                            "target": {
                              "type": "reference",
                              "target": 1668,
                              "name": "Data",
                              "package": "react-router",
                              "qualifiedName": "Session.Data",
                              "refersToTypeParameter": true
                            }
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1646, 1647]
            },
            {
              "title": "Methods",
              "children": [1648, 1653, 1657, 1660, 1665]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 19,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L19"
            }
          ],
          "typeParameters": [
            {
              "id": 1668,
              "name": "Data",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "reference",
                "target": 1670,
                "name": "SessionData",
                "package": "react-router"
              }
            },
            {
              "id": 1669,
              "name": "FlashData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "reference",
                "target": 1668,
                "name": "Data",
                "package": "react-router",
                "qualifiedName": "Session.Data",
                "refersToTypeParameter": true
              }
            }
          ]
        },
        {
          "id": 1670,
          "name": "SessionData",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "An object of name/value pairs to be used in the session."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 10,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L10"
            }
          ],
          "indexSignature": {
            "id": 1671,
            "name": "__index",
            "variant": "signature",
            "kind": 8192,
            "flags": {},
            "sources": [
              {
                "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                "line": 11,
                "character": 2,
                "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L11"
              }
            ],
            "parameters": [
              {
                "id": 1672,
                "name": "name",
                "variant": "param",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "intrinsic",
              "name": "any"
            }
          }
        },
        {
          "id": 1673,
          "name": "SessionIdStorageStrategy",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "SessionIdStorageStrategy is designed to allow anyone to easily build their\nown SessionStorage using "
              },
              {
                "kind": "code",
                "text": "`createSessionStorage(strategy)`"
              },
              {
                "kind": "text",
                "text": ".\n\nThis strategy describes a common scenario where the session id is stored in\na cookie but the actual session data is stored elsewhere, usually in a\ndatabase or on disk. A set of create, read, update, and delete operations\nare provided for managing the session data."
              }
            ]
          },
          "children": [
            {
              "id": 1674,
              "name": "cookie",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The Cookie used to store the session id, or options used to automatically\ncreate one."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 218,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L218"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": 147,
                    "name": "Cookie",
                    "package": "react-router"
                  },
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 159,
                        "name": "CookieParseOptions",
                        "package": "@types/cookie"
                      },
                      {
                        "type": "reference",
                        "target": 163,
                        "name": "CookieSerializeOptions",
                        "package": "@types/cookie"
                      },
                      {
                        "type": "reference",
                        "target": 176,
                        "name": "CookieSignatureOptions",
                        "package": "react-router"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 1675,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 1676,
                              "name": "name",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                                  "line": 218,
                                  "character": 39,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L218"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [1676]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                              "line": 218,
                              "character": 37,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L218"
                            }
                          ]
                        }
                      }
                    ]
                  }
                ]
              }
            },
            {
              "id": 1677,
              "name": "createData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a new record with the given data and returns the session id."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 223,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L223"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1678,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 223,
                      "character": 14,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L223"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1679,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 223,
                          "character": 14,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L223"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1680,
                          "name": "data",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Partial"
                            },
                            "typeArguments": [
                              {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": 1696,
                                    "name": "Data",
                                    "package": "react-router",
                                    "qualifiedName": "SessionIdStorageStrategy.Data",
                                    "refersToTypeParameter": true
                                  },
                                  {
                                    "type": "mapped",
                                    "parameter": "Key",
                                    "parameterType": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        {
                                          "type": "intrinsic",
                                          "name": "number"
                                        },
                                        {
                                          "type": "intrinsic",
                                          "name": "symbol"
                                        }
                                      ]
                                    },
                                    "templateType": {
                                      "type": "indexedAccess",
                                      "indexType": {
                                        "type": "reference",
                                        "target": 1655,
                                        "name": "Key",
                                        "package": "react-router",
                                        "refersToTypeParameter": true
                                      },
                                      "objectType": {
                                        "type": "reference",
                                        "target": 1697,
                                        "name": "FlashData",
                                        "package": "react-router",
                                        "qualifiedName": "SessionIdStorageStrategy.FlashData",
                                        "refersToTypeParameter": true
                                      }
                                    },
                                    "nameType": {
                                      "type": "templateLiteral",
                                      "head": "__flash_",
                                      "tail": [
                                        [
                                          {
                                            "type": "intersection",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "target": 1655,
                                                "name": "Key",
                                                "package": "react-router",
                                                "refersToTypeParameter": true
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          },
                                          "__"
                                        ]
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "name": "Partial",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 1681,
                          "name": "expires",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Date"
                            },
                            "name": "Date",
                            "package": "typescript"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1682,
              "name": "deleteData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Deletes data for a given session id from the data store."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 245,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L245"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1683,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 245,
                      "character": 14,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L245"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1684,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 245,
                          "character": 14,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L245"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1685,
                          "name": "id",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1686,
              "name": "readData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns data for a given session id, or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": " if there isn't any."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 231,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L231"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1687,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 231,
                      "character": 12,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L231"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1688,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 231,
                          "character": 12,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L231"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1689,
                          "name": "id",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Partial"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intersection",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "target": 1696,
                                        "name": "Data",
                                        "package": "react-router",
                                        "qualifiedName": "SessionIdStorageStrategy.Data",
                                        "refersToTypeParameter": true
                                      },
                                      {
                                        "type": "mapped",
                                        "parameter": "Key",
                                        "parameterType": {
                                          "type": "union",
                                          "types": [
                                            {
                                              "type": "intrinsic",
                                              "name": "string"
                                            },
                                            {
                                              "type": "intrinsic",
                                              "name": "number"
                                            },
                                            {
                                              "type": "intrinsic",
                                              "name": "symbol"
                                            }
                                          ]
                                        },
                                        "templateType": {
                                          "type": "indexedAccess",
                                          "indexType": {
                                            "type": "reference",
                                            "target": 1655,
                                            "name": "Key",
                                            "package": "react-router",
                                            "refersToTypeParameter": true
                                          },
                                          "objectType": {
                                            "type": "reference",
                                            "target": 1697,
                                            "name": "FlashData",
                                            "package": "react-router",
                                            "qualifiedName": "SessionIdStorageStrategy.FlashData",
                                            "refersToTypeParameter": true
                                          }
                                        },
                                        "nameType": {
                                          "type": "templateLiteral",
                                          "head": "__flash_",
                                          "tail": [
                                            [
                                              {
                                                "type": "intersection",
                                                "types": [
                                                  {
                                                    "type": "reference",
                                                    "target": 1655,
                                                    "name": "Key",
                                                    "package": "react-router",
                                                    "refersToTypeParameter": true
                                                  },
                                                  {
                                                    "type": "intrinsic",
                                                    "name": "string"
                                                  }
                                                ]
                                              },
                                              "__"
                                            ]
                                          ]
                                        }
                                      }
                                    ]
                                  }
                                ],
                                "name": "Partial",
                                "package": "typescript"
                              }
                            ]
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1690,
              "name": "updateData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Updates data for the given session id."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 236,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L236"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1691,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 236,
                      "character": 14,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L236"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1692,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 236,
                          "character": 14,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L236"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1693,
                          "name": "id",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 1694,
                          "name": "data",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Partial"
                            },
                            "typeArguments": [
                              {
                                "type": "intersection",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": 1696,
                                    "name": "Data",
                                    "package": "react-router",
                                    "qualifiedName": "SessionIdStorageStrategy.Data",
                                    "refersToTypeParameter": true
                                  },
                                  {
                                    "type": "mapped",
                                    "parameter": "Key",
                                    "parameterType": {
                                      "type": "union",
                                      "types": [
                                        {
                                          "type": "intrinsic",
                                          "name": "string"
                                        },
                                        {
                                          "type": "intrinsic",
                                          "name": "number"
                                        },
                                        {
                                          "type": "intrinsic",
                                          "name": "symbol"
                                        }
                                      ]
                                    },
                                    "templateType": {
                                      "type": "indexedAccess",
                                      "indexType": {
                                        "type": "reference",
                                        "target": 1655,
                                        "name": "Key",
                                        "package": "react-router",
                                        "refersToTypeParameter": true
                                      },
                                      "objectType": {
                                        "type": "reference",
                                        "target": 1697,
                                        "name": "FlashData",
                                        "package": "react-router",
                                        "qualifiedName": "SessionIdStorageStrategy.FlashData",
                                        "refersToTypeParameter": true
                                      }
                                    },
                                    "nameType": {
                                      "type": "templateLiteral",
                                      "head": "__flash_",
                                      "tail": [
                                        [
                                          {
                                            "type": "intersection",
                                            "types": [
                                              {
                                                "type": "reference",
                                                "target": 1655,
                                                "name": "Key",
                                                "package": "react-router",
                                                "refersToTypeParameter": true
                                              },
                                              {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            ]
                                          },
                                          "__"
                                        ]
                                      ]
                                    }
                                  }
                                ]
                              }
                            ],
                            "name": "Partial",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 1695,
                          "name": "expires",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Date"
                            },
                            "name": "Date",
                            "package": "typescript"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "void"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1674, 1677, 1682, 1686, 1690]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 210,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L210"
            }
          ],
          "typeParameters": [
            {
              "id": 1696,
              "name": "Data",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "reference",
                "target": 1670,
                "name": "SessionData",
                "package": "react-router"
              }
            },
            {
              "id": 1697,
              "name": "FlashData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "reference",
                "target": 1696,
                "name": "Data",
                "package": "react-router",
                "qualifiedName": "SessionIdStorageStrategy.Data",
                "refersToTypeParameter": true
              }
            }
          ]
        },
        {
          "id": 1698,
          "name": "SessionStorage",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "SessionStorage stores session data between HTTP requests and knows how to\nparse and create cookies.\n\nA SessionStorage creates Session objects using a "
              },
              {
                "kind": "code",
                "text": "`Cookie`"
              },
              {
                "kind": "text",
                "text": " header as input.\nThen, later it generates the "
              },
              {
                "kind": "code",
                "text": "`Set-Cookie`"
              },
              {
                "kind": "text",
                "text": " header to be used in the response."
              }
            ]
          },
          "children": [
            {
              "id": 1699,
              "name": "commitSession",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Stores all data in the Session and returns the Set-Cookie header to be\nused in the HTTP response."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 186,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L186"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1700,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 186,
                      "character": 17,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L186"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1701,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 186,
                          "character": 17,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L186"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1702,
                          "name": "session",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 1645,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 1714,
                                "name": "Data",
                                "package": "react-router",
                                "qualifiedName": "SessionStorage.Data",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "reference",
                                "target": 1715,
                                "name": "FlashData",
                                "package": "react-router",
                                "qualifiedName": "SessionStorage.FlashData",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Session",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 1703,
                          "name": "options",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": 163,
                            "name": "CookieSerializeOptions",
                            "package": "@types/cookie"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1704,
              "name": "destroySession",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Deletes all data associated with the Session and returns the Set-Cookie\nheader to be used in the HTTP response."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 195,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L195"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1705,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 195,
                      "character": 18,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L195"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1706,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 195,
                          "character": 18,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L195"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1707,
                          "name": "session",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 1645,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 1714,
                                "name": "Data",
                                "package": "react-router",
                                "qualifiedName": "SessionStorage.Data",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "reference",
                                "target": 1715,
                                "name": "FlashData",
                                "package": "react-router",
                                "qualifiedName": "SessionStorage.FlashData",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Session",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 1708,
                          "name": "options",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": 163,
                            "name": "CookieSerializeOptions",
                            "package": "@types/cookie"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1709,
              "name": "getSession",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Parses a Cookie header from a HTTP request and returns the associated\nSession. If there is no session associated with the cookie, this will\nreturn a new Session with no data."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 177,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L177"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1710,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                      "line": 177,
                      "character": 14,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L177"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1711,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                          "line": 177,
                          "character": 14,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L177"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1712,
                          "name": "cookieHeader",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "literal",
                                "value": null
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        },
                        {
                          "id": 1713,
                          "name": "options",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reference",
                            "target": 159,
                            "name": "CookieParseOptions",
                            "package": "@types/cookie"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 1645,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 1714,
                                "name": "Data",
                                "package": "react-router",
                                "qualifiedName": "SessionStorage.Data",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "reference",
                                "target": 1715,
                                "name": "FlashData",
                                "package": "react-router",
                                "qualifiedName": "SessionStorage.FlashData",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Session",
                            "package": "react-router"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1699, 1704, 1709]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 171,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L171"
            }
          ],
          "typeParameters": [
            {
              "id": 1714,
              "name": "Data",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "reference",
                "target": 1670,
                "name": "SessionData",
                "package": "react-router"
              }
            },
            {
              "id": 1715,
              "name": "FlashData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "reference",
                "target": 1714,
                "name": "Data",
                "package": "react-router",
                "qualifiedName": "SessionStorage.Data",
                "refersToTypeParameter": true
              }
            }
          ]
        },
        {
          "id": 1716,
          "name": "ShouldRevalidateFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Route shouldRevalidate function signature.  This runs after any submission\n(navigation or fetcher), so we flatten the navigation/fetcher submission\nonto the arguments.  It shouldn't matter whether it came from a navigation\nor a fetcher, what really matters is the URLs and the formData since loaders\nhave to re-run based on the data models that were potentially mutated."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 218,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L218"
            }
          ],
          "signatures": [
            {
              "id": 1717,
              "name": "ShouldRevalidateFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 219,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L219"
                }
              ],
              "parameters": [
                {
                  "id": 1718,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1719,
                    "name": "ShouldRevalidateFunctionArgs",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 1719,
          "name": "ShouldRevalidateFunctionArgs",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Arguments passed to shouldRevalidate function"
              }
            ]
          },
          "children": [
            {
              "id": 1720,
              "name": "actionResult",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 207,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L207"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1721,
              "name": "currentParams",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 197,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L197"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              }
            },
            {
              "id": 1722,
              "name": "currentUrl",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 196,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L196"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "URL"
                },
                "name": "URL",
                "package": "typescript"
              }
            },
            {
              "id": 1723,
              "name": "defaultShouldRevalidate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 208,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L208"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1724,
              "name": "formAction",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 201,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L201"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1725,
              "name": "formData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 204,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L204"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "FormData"
                },
                "name": "FormData",
                "package": "typescript"
              }
            },
            {
              "id": 1726,
              "name": "formEncType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 202,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L202"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2071,
                "name": "FormEncType",
                "package": "react-router"
              }
            },
            {
              "id": 1727,
              "name": "formMethod",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 200,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L200"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "GET"
                  },
                  {
                    "type": "literal",
                    "value": "POST"
                  },
                  {
                    "type": "literal",
                    "value": "PUT"
                  },
                  {
                    "type": "literal",
                    "value": "PATCH"
                  },
                  {
                    "type": "literal",
                    "value": "DELETE"
                  }
                ]
              }
            },
            {
              "id": 1728,
              "name": "json",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 205,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L205"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "JsonValue"
                },
                "name": "JsonValue",
                "package": "react-router"
              }
            },
            {
              "id": 1729,
              "name": "nextParams",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 199,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L199"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              }
            },
            {
              "id": 1730,
              "name": "nextUrl",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 198,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L198"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "URL"
                },
                "name": "URL",
                "package": "typescript"
              }
            },
            {
              "id": 1731,
              "name": "text",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 203,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L203"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1732,
              "name": "unstable_actionStatus",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 206,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L206"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729,
                1730, 1731, 1732
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 195,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L195"
            }
          ]
        },
        {
          "id": 1733,
          "name": "StaticHandler",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A StaticHandler instance manages a singular SSR navigation/fetch event"
              }
            ]
          },
          "children": [
            {
              "id": 1734,
              "name": "dataRoutes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 411,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L411"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 1930,
                  "name": "AgnosticDataRouteObject",
                  "package": "react-router"
                }
              }
            },
            {
              "id": 1735,
              "name": "query",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 412,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L412"
                }
              ],
              "signatures": [
                {
                  "id": 1736,
                  "name": "query",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 412,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L412"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1737,
                      "name": "request",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Request"
                        },
                        "name": "Request",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 1738,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1739,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 1740,
                              "name": "requestContext",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 415,
                                  "character": 6,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L415"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            },
                            {
                              "id": 1741,
                              "name": "skipLoaderErrorBubbling",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 416,
                                  "character": 6,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L416"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            },
                            {
                              "id": 1742,
                              "name": "unstable_dataStrategy",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 417,
                                  "character": 6,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L417"
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": 1883,
                                "name": "DataStrategyFunction",
                                "package": "react-router"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [1740, 1741, 1742]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 414,
                              "character": 11,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L414"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "Response"
                            },
                            "name": "Response",
                            "package": "typescript"
                          },
                          {
                            "type": "reference",
                            "target": 1751,
                            "name": "StaticHandlerContext",
                            "package": "react-router"
                          }
                        ]
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 1743,
              "name": "queryRoute",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 420,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L420"
                }
              ],
              "signatures": [
                {
                  "id": 1744,
                  "name": "queryRoute",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 420,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L420"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1745,
                      "name": "request",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Request"
                        },
                        "name": "Request",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 1746,
                      "name": "opts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1747,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 1748,
                              "name": "requestContext",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 424,
                                  "character": 6,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L424"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "unknown"
                              }
                            },
                            {
                              "id": 1749,
                              "name": "routeId",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 423,
                                  "character": 6,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L423"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            },
                            {
                              "id": 1750,
                              "name": "unstable_dataStrategy",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 425,
                                  "character": 6,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L425"
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": 1883,
                                "name": "DataStrategyFunction",
                                "package": "react-router"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [1748, 1749, 1750]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 422,
                              "character": 11,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L422"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1734]
            },
            {
              "title": "Methods",
              "children": [1735, 1743]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 410,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L410"
            }
          ]
        },
        {
          "id": 1751,
          "name": "StaticHandlerContext",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "State returned from a server-side query() call"
              }
            ]
          },
          "children": [
            {
              "id": 1752,
              "name": "_deepestRenderedBoundaryId",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 404,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L404"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 1753,
              "name": "actionData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 398,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L398"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/utils.ts",
                      "qualifiedName": "RouteData"
                    },
                    "name": "RouteData",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 1754,
              "name": "actionHeaders",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 402,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L402"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Headers"
                    },
                    "name": "Headers",
                    "package": "typescript"
                  }
                ],
                "name": "Record",
                "package": "typescript"
              }
            },
            {
              "id": 1755,
              "name": "activeDeferreds",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 403,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L403"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Record"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "target": 48,
                        "name": "DeferredData",
                        "package": "react-router"
                      }
                    ],
                    "name": "Record",
                    "package": "typescript"
                  }
                ]
              }
            },
            {
              "id": 1756,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 394,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L394"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ]
              }
            },
            {
              "id": 1757,
              "name": "errors",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 399,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L399"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/utils.ts",
                      "qualifiedName": "RouteData"
                    },
                    "name": "RouteData",
                    "package": "react-router"
                  }
                ]
              }
            },
            {
              "id": 1758,
              "name": "loaderData",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 397,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L397"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "RouteData"
                },
                "name": "RouteData",
                "package": "react-router"
              }
            },
            {
              "id": 1759,
              "name": "loaderHeaders",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 401,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L401"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Headers"
                    },
                    "name": "Headers",
                    "package": "typescript"
                  }
                ],
                "name": "Record",
                "package": "typescript"
              }
            },
            {
              "id": 1760,
              "name": "location",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 395,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L395"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1163,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "Location",
                "package": "react-router"
              }
            },
            {
              "id": 1761,
              "name": "matches",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 396,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L396"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 124,
                  "name": "AgnosticDataRouteMatch",
                  "package": "react-router"
                }
              }
            },
            {
              "id": 1762,
              "name": "statusCode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 400,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L400"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 393,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L393"
            }
          ]
        },
        {
          "id": 1763,
          "name": "StaticRouterProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1764,
              "name": "basename",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 37,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L37"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1765,
              "name": "children",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 38,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L38"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            },
            {
              "id": 1766,
              "name": "location",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 39,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L39"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Partial"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1163,
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        ],
                        "name": "Location",
                        "package": "react-router"
                      }
                    ],
                    "name": "Partial",
                    "package": "typescript"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1764, 1765, 1766]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/server.tsx",
              "line": 36,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L36"
            }
          ]
        },
        {
          "id": 1767,
          "name": "StaticRouterProviderProps",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1768,
              "name": "context",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 80,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L80"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1751,
                "name": "StaticHandlerContext",
                "package": "react-router"
              }
            },
            {
              "id": 1769,
              "name": "hydrate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 82,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L82"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1770,
              "name": "nonce",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 83,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L83"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1771,
              "name": "router",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 81,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L81"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "Router"
                },
                "name": "Router",
                "package": "react-router"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1768, 1769, 1770, 1771]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/server.tsx",
              "line": 79,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L79"
            }
          ]
        },
        {
          "id": 1772,
          "name": "SubmitFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Submits a HTML "
              },
              {
                "kind": "code",
                "text": "`<form>`"
              },
              {
                "kind": "text",
                "text": " to the server without reloading the page."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1745,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1745"
            }
          ],
          "signatures": [
            {
              "id": 1773,
              "name": "SubmitFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1746,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1746"
                }
              ],
              "parameters": [
                {
                  "id": 1774,
                  "name": "target",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Can be multiple types of elements and objects\n\n**"
                      },
                      {
                        "kind": "code",
                        "text": "`HTMLFormElement`"
                      },
                      {
                        "kind": "text",
                        "text": "**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\n<Form\n  onSubmit={(event) => {\n    submit(event.currentTarget);\n  }}\n/>\n```"
                      },
                      {
                        "kind": "text",
                        "text": "\n\n**"
                      },
                      {
                        "kind": "code",
                        "text": "`FormData`"
                      },
                      {
                        "kind": "text",
                        "text": "**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nconst formData = new FormData();\nformData.append(\"myKey\", \"myValue\");\nsubmit(formData, { method: \"post\" });\n```"
                      },
                      {
                        "kind": "text",
                        "text": "\n\n**Plain object that will be serialized as "
                      },
                      {
                        "kind": "code",
                        "text": "`FormData`"
                      },
                      {
                        "kind": "text",
                        "text": "**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nsubmit({ myKey: \"myValue\" }, { method: \"post\" });\n```"
                      },
                      {
                        "kind": "text",
                        "text": "\n\n**Plain object that will be serialized as JSON**\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nsubmit(\n  { myKey: \"myValue\" },\n  { method: \"post\", encType: \"application/json\" }\n);\n```"
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "target": 2247,
                    "name": "SubmitTarget",
                    "package": "react-router"
                  }
                },
                {
                  "id": 1775,
                  "name": "options",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Options that override the "
                      },
                      {
                        "kind": "code",
                        "text": "`<form>`"
                      },
                      {
                        "kind": "text",
                        "text": "'s own attributes. Required when\nsubmitting arbitrary data without a backing "
                      },
                      {
                        "kind": "code",
                        "text": "`<form>`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "type": {
                    "type": "reference",
                    "target": 1776,
                    "name": "SubmitOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 1776,
          "name": "SubmitOptions",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Submit options available to navigations"
              }
            ]
          },
          "children": [
            {
              "id": 1777,
              "name": "action",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The action URL path used to submit the form. Overrides "
                  },
                  {
                    "kind": "code",
                    "text": "`<form action>`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nDefaults to the path of the current route."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 172,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L172"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "FetcherSubmitOptions.action"
              }
            },
            {
              "id": 1778,
              "name": "encType",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The encoding used to submit the form. Overrides "
                  },
                  {
                    "kind": "code",
                    "text": "`<form encType>`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nDefaults to \"application/x-www-form-urlencoded\"."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 178,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L178"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2071,
                "name": "FormEncType",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "FetcherSubmitOptions.encType"
              }
            },
            {
              "id": 1779,
              "name": "fetcherKey",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Indicate a specific fetcherKey to use when using navigate=false"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 223,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L223"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1780,
              "name": "method",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The HTTP method used to submit the form. Overrides "
                  },
                  {
                    "kind": "code",
                    "text": "`<form method>`"
                  },
                  {
                    "kind": "text",
                    "text": ".\nDefaults to \"GET\"."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 166,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L166"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "HTMLFormMethod"
                },
                "name": "HTMLFormMethod",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "FetcherSubmitOptions.method"
              }
            },
            {
              "id": 1781,
              "name": "navigate",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "navigate=false will use a fetcher instead of a navigation"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 228,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L228"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1782,
              "name": "preventScrollReset",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "In browser-based environments, prevent resetting scroll after this\nnavigation when using the <ScrollRestoration> component"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 191,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L191"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "FetcherSubmitOptions.preventScrollReset"
              }
            },
            {
              "id": 1783,
              "name": "relative",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Determines whether the form action is relative to the route hierarchy or\nthe pathname.  Use this if you want to opt out of navigating the route\nhierarchy and want to instead route based on /-delimited URL segments"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 185,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L185"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2198,
                "name": "RelativeRoutingType",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "FetcherSubmitOptions.relative"
              }
            },
            {
              "id": 1784,
              "name": "replace",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Set "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " to replace the current entry in the browser's history stack\ninstead of creating a new one (i.e. stay on \"the same page\"). Defaults\nto "
                  },
                  {
                    "kind": "code",
                    "text": "`false`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 213,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L213"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1785,
              "name": "state",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "State object to add to the history stack entry for this navigation"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 218,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L218"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1786,
              "name": "unstable_flushSync",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Enable flushSync for this submission's state updates"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 196,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L196"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "FetcherSubmitOptions.unstable_flushSync"
              }
            },
            {
              "id": 1787,
              "name": "unstable_viewTransition",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Enable view transitions on this submission navigation"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 233,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L233"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/dom.ts",
              "line": 207,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L207"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/dom/dom.ts",
                "qualifiedName": "FetcherSubmitOptions"
              },
              "name": "FetcherSubmitOptions",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1788,
          "name": "TrackedPromise",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1789,
              "name": "[toStringTag]",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
                  "line": 176,
                  "character": 13
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Promise.[toStringTag]"
              }
            },
            {
              "id": 1790,
              "name": "_data",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1370,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1370"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1791,
              "name": "_error",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1371,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1371"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "any"
              }
            },
            {
              "id": 1792,
              "name": "_tracked",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1369,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1369"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1793,
              "name": "catch",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1557,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 1794,
                  "name": "catch",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Attaches a callback for only the rejection of the Promise."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "A Promise for the completion of the callback."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1557,
                      "character": 4
                    }
                  ],
                  "typeParameter": [
                    {
                      "id": 1795,
                      "name": "TResult",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {
                        "isExternal": true
                      },
                      "default": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1796,
                      "name": "onrejected",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The callback to execute when the Promise is rejected."
                          }
                        ]
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1797,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "line": 1557,
                                  "character": 41
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1798,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "line": 1557,
                                      "character": 41
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 1799,
                                      "name": "reason",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "target": 1795,
                                        "name": "TResult",
                                        "package": "typescript",
                                        "refersToTypeParameter": true
                                      },
                                      {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "PromiseLike"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "target": 1795,
                                            "name": "TResult",
                                            "package": "typescript",
                                            "refersToTypeParameter": true
                                          }
                                        ],
                                        "name": "PromiseLike",
                                        "package": "typescript"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Promise.catch"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Promise.catch"
              }
            },
            {
              "id": 1800,
              "name": "finally",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
                  "line": 29,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 1801,
                  "name": "finally",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The\nresolved value cannot be modified from the callback."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "A Promise for the completion of the callback."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
                      "line": 29,
                      "character": 4
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1802,
                      "name": "onfinally",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The callback to execute when the Promise is settled (fulfilled or rejected)."
                          }
                        ]
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1803,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
                                  "line": 29,
                                  "character": 25
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1804,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
                                      "line": 29,
                                      "character": 25
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Promise.finally"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Promise.finally"
              }
            },
            {
              "id": 1805,
              "name": "then",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isExternal": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "line": 1550,
                  "character": 4
                }
              ],
              "signatures": [
                {
                  "id": 1806,
                  "name": "then",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {
                    "isExternal": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Attaches callbacks for the resolution and/or rejection of the Promise."
                      }
                    ],
                    "blockTags": [
                      {
                        "tag": "@returns",
                        "content": [
                          {
                            "kind": "text",
                            "text": "A Promise for the completion of which ever callback is executed."
                          }
                        ]
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "line": 1550,
                      "character": 4
                    }
                  ],
                  "typeParameter": [
                    {
                      "id": 1807,
                      "name": "TResult1",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {
                        "isExternal": true
                      },
                      "default": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    },
                    {
                      "id": 1808,
                      "name": "TResult2",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {
                        "isExternal": true
                      },
                      "default": {
                        "type": "intrinsic",
                        "name": "never"
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1809,
                      "name": "onfulfilled",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The callback to execute when the Promise is resolved."
                          }
                        ]
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1810,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "line": 1550,
                                  "character": 56
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1811,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "line": 1550,
                                      "character": 56
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 1812,
                                      "name": "value",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "target": 1807,
                                        "name": "TResult1",
                                        "package": "typescript",
                                        "refersToTypeParameter": true
                                      },
                                      {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "PromiseLike"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "target": 1807,
                                            "name": "TResult1",
                                            "package": "typescript",
                                            "refersToTypeParameter": true
                                          }
                                        ],
                                        "name": "PromiseLike",
                                        "package": "typescript"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 1813,
                      "name": "onrejected",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isExternal": true,
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "The callback to execute when the Promise is rejected."
                          }
                        ]
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1814,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {
                                "isExternal": true
                              },
                              "sources": [
                                {
                                  "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "line": 1550,
                                  "character": 138
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1815,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {
                                    "isExternal": true
                                  },
                                  "sources": [
                                    {
                                      "fileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "line": 1550,
                                      "character": 138
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 1816,
                                      "name": "reason",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {
                                        "isExternal": true
                                      },
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "any"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "target": 1808,
                                        "name": "TResult2",
                                        "package": "typescript",
                                        "refersToTypeParameter": true
                                      },
                                      {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "PromiseLike"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "target": 1808,
                                            "name": "TResult2",
                                            "package": "typescript",
                                            "refersToTypeParameter": true
                                          }
                                        ],
                                        "name": "PromiseLike",
                                        "package": "typescript"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "target": 1807,
                            "name": "TResult1",
                            "package": "typescript",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 1808,
                            "name": "TResult2",
                            "package": "typescript",
                            "refersToTypeParameter": true
                          }
                        ]
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "inheritedFrom": {
                    "type": "reference",
                    "target": -1,
                    "name": "Promise.then"
                  }
                }
              ],
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Promise.then"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1789, 1790, 1791, 1792]
            },
            {
              "title": "Methods",
              "children": [1793, 1800, 1805]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1368,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1368"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Promise"
              },
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "any"
                }
              ],
              "name": "Promise",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 1817,
          "name": "UIMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1818,
              "name": "data",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 555,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L555"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1823,
                "name": "Data",
                "package": "react-router",
                "qualifiedName": "UIMatch.Data",
                "refersToTypeParameter": true
              }
            },
            {
              "id": 1819,
              "name": "handle",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 556,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L556"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1824,
                "name": "Handle",
                "package": "react-router",
                "qualifiedName": "UIMatch.Handle",
                "refersToTypeParameter": true
              }
            },
            {
              "id": 1820,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 552,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L552"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1821,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 554,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L554"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              }
            },
            {
              "id": 1822,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 553,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L553"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1818, 1819, 1820, 1821, 1822]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 551,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L551"
            }
          ],
          "typeParameters": [
            {
              "id": 1823,
              "name": "Data",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 1824,
              "name": "Handle",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 1825,
          "name": "UNSAFE_AssetsManifest",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1826,
              "name": "entry",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 50,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L50"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1827,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1828,
                      "name": "imports",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 51,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L51"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    },
                    {
                      "id": 1829,
                      "name": "module",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 52,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L52"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1828, 1829]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "line": 50,
                      "character": 9,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L50"
                    }
                  ]
                }
              }
            },
            {
              "id": 1830,
              "name": "hmr",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 57,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L57"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1831,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1832,
                      "name": "runtime",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 59,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L59"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1833,
                      "name": "timestamp",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 58,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L58"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1832, 1833]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "line": 57,
                      "character": 8,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L57"
                    }
                  ]
                }
              }
            },
            {
              "id": 1834,
              "name": "routes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 54,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L54"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1876,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1837,
                    "name": "EntryRoute",
                    "package": "react-router"
                  }
                ],
                "name": "RouteManifest",
                "package": "react-router"
              }
            },
            {
              "id": 1835,
              "name": "url",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 55,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L55"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1836,
              "name": "version",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 56,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L56"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1826, 1830, 1834, 1835, 1836]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
              "line": 49,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L49"
            }
          ]
        },
        {
          "id": 1837,
          "name": "UNSAFE_EntryRoute",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1838,
              "name": "caseSensitive",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 27,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L27"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Route.caseSensitive"
              }
            },
            {
              "id": 1839,
              "name": "css",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 41,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L41"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            {
              "id": 1840,
              "name": "hasAction",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 35,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L35"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1841,
              "name": "hasClientAction",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 37,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L37"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1842,
              "name": "hasClientLoader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 38,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L38"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1843,
              "name": "hasErrorBoundary",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 39,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L39"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1844,
              "name": "hasLoader",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 36,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L36"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1845,
              "name": "id",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 28,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L28"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Route.id"
              }
            },
            {
              "id": 1846,
              "name": "imports",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 40,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L40"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            {
              "id": 1847,
              "name": "index",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 26,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L26"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Route.index"
              }
            },
            {
              "id": 1848,
              "name": "module",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 42,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L42"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1849,
              "name": "parentId",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 43,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L43"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "overwrites": {
                "type": "reference",
                "target": -1,
                "name": "Route.parentId"
              }
            },
            {
              "id": 1850,
              "name": "path",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                  "line": 30,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L30"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "Route.path"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [
                1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847,
                1848, 1849, 1850
              ]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
              "line": 34,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L34"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                "qualifiedName": "Route"
              },
              "name": "Route",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1851,
          "name": "UNSAFE_FrameworkContextObject",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1852,
              "name": "abortDelay",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 19,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L19"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1853,
              "name": "criticalCss",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 15,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L15"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1854,
              "name": "future",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 17,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L17"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1872,
                "name": "FutureConfig",
                "package": "react-router"
              }
            },
            {
              "id": 1855,
              "name": "isSpaMode",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 18,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L18"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1856,
              "name": "manifest",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 13,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L13"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1825,
                "name": "AssetsManifest",
                "package": "react-router"
              }
            },
            {
              "id": 1857,
              "name": "renderMeta",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 21,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L21"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1858,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1859,
                      "name": "didRenderScripts",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 22,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L22"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    },
                    {
                      "id": 1860,
                      "name": "streamCache",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                          "line": 23,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L23"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Record"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          {
                            "type": "intersection",
                            "types": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 1861,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 1862,
                                      "name": "error",
                                      "variant": "declaration",
                                      "kind": 1024,
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                          "line": 30,
                                          "character": 8,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L30"
                                        }
                                      ],
                                      "type": {
                                        "type": "intrinsic",
                                        "name": "unknown"
                                      }
                                    },
                                    {
                                      "id": 1863,
                                      "name": "result",
                                      "variant": "declaration",
                                      "kind": 1024,
                                      "flags": {
                                        "isOptional": true
                                      },
                                      "sources": [
                                        {
                                          "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                          "line": 26,
                                          "character": 8,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L26"
                                        }
                                      ],
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 1864,
                                          "name": "__type",
                                          "variant": "declaration",
                                          "kind": 65536,
                                          "flags": {},
                                          "children": [
                                            {
                                              "id": 1865,
                                              "name": "done",
                                              "variant": "declaration",
                                              "kind": 1024,
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                                  "line": 27,
                                                  "character": 10,
                                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L27"
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "boolean"
                                              }
                                            },
                                            {
                                              "id": 1866,
                                              "name": "value",
                                              "variant": "declaration",
                                              "kind": 1024,
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                                  "line": 28,
                                                  "character": 10,
                                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L28"
                                                }
                                              ],
                                              "type": {
                                                "type": "intrinsic",
                                                "name": "string"
                                              }
                                            }
                                          ],
                                          "groups": [
                                            {
                                              "title": "Properties",
                                              "children": [1865, 1866]
                                            }
                                          ],
                                          "sources": [
                                            {
                                              "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                              "line": 26,
                                              "character": 17,
                                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L26"
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "children": [1862, 1863]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                                      "line": 25,
                                      "character": 22,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L25"
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        ],
                        "name": "Record",
                        "package": "typescript"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1859, 1860]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "line": 21,
                      "character": 15,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L21"
                    }
                  ]
                }
              }
            },
            {
              "id": 1867,
              "name": "routeModules",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 14,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L14"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1880,
                "name": "RouteModules",
                "package": "react-router"
              }
            },
            {
              "id": 1868,
              "name": "serverHandoffString",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 16,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L16"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 1869,
              "name": "serializeError",
              "variant": "declaration",
              "kind": 2048,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 20,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L20"
                }
              ],
              "signatures": [
                {
                  "id": 1870,
                  "name": "serializeError",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "line": 20,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L20"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1871,
                      "name": "error",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Error"
                        },
                        "name": "Error",
                        "package": "typescript"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
                      "qualifiedName": "SerializedError"
                    },
                    "name": "SerializedError",
                    "package": "react-router"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1852, 1853, 1854, 1855, 1856, 1857, 1867, 1868]
            },
            {
              "title": "Methods",
              "children": [1869]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
              "line": 12,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L12"
            }
          ],
          "extendedBy": [
            {
              "type": "reference",
              "target": 183,
              "name": "EntryContext"
            }
          ]
        },
        {
          "id": 1872,
          "name": "UNSAFE_FutureConfig",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1873,
              "name": "v3_fetcherPersist",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 44,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L44"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1874,
              "name": "v3_relativeSplatPath",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 45,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L45"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            },
            {
              "id": 1875,
              "name": "v3_throwAbortReason",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
                  "line": 46,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L46"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1873, 1874, 1875]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/entry.ts",
              "line": 43,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/entry.ts#L43"
            }
          ]
        },
        {
          "id": 1876,
          "name": "UNSAFE_RouteManifest",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
              "line": 20,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L20"
            }
          ],
          "typeParameters": [
            {
              "id": 1877,
              "name": "Route",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {}
            }
          ],
          "indexSignature": {
            "id": 1878,
            "name": "__index",
            "variant": "signature",
            "kind": 8192,
            "flags": {},
            "sources": [
              {
                "fileName": "packages/react-router/lib/dom/ssr/routes.tsx",
                "line": 21,
                "character": 2,
                "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes.tsx#L21"
              }
            ],
            "parameters": [
              {
                "id": 1879,
                "name": "routeId",
                "variant": "param",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "reference",
              "target": 1877,
              "name": "Route",
              "package": "react-router",
              "qualifiedName": "RouteManifest.Route",
              "refersToTypeParameter": true
            }
          }
        },
        {
          "id": 1880,
          "name": "UNSAFE_RouteModules",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 19,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L19"
            }
          ],
          "indexSignature": {
            "id": 1881,
            "name": "__index",
            "variant": "signature",
            "kind": 8192,
            "flags": {},
            "sources": [
              {
                "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                "line": 20,
                "character": 2,
                "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L20"
              }
            ],
            "parameters": [
              {
                "id": 1882,
                "name": "routeId",
                "variant": "param",
                "kind": 32768,
                "flags": {},
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            ],
            "type": {
              "type": "union",
              "types": [
                {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                    "qualifiedName": "RouteModule"
                  },
                  "name": "RouteModule",
                  "package": "react-router"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            }
          }
        },
        {
          "id": 1883,
          "name": "unstable_DataStrategyFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 247,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L247"
            }
          ],
          "signatures": [
            {
              "id": 1884,
              "name": "unstable_DataStrategyFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 248,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L248"
                }
              ],
              "parameters": [
                {
                  "id": 1885,
                  "name": "args",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1886,
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "DataStrategyFunctionArgs",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 1908,
                      "name": "HandlerResult",
                      "package": "react-router"
                    }
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 1886,
          "name": "unstable_DataStrategyFunctionArgs",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "children": [
            {
              "id": 1887,
              "name": "context",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 144,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L144"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1891,
                "name": "Context",
                "package": "react-router",
                "qualifiedName": "DataStrategyFunctionArgs.Context",
                "refersToTypeParameter": true
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.context"
              }
            },
            {
              "id": 1888,
              "name": "matches",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 244,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L244"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 1892,
                  "name": "DataStrategyMatch",
                  "package": "react-router"
                }
              }
            },
            {
              "id": 1889,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 143,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L143"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.params"
              }
            },
            {
              "id": 1890,
              "name": "request",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 142,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L142"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Request"
                },
                "name": "Request",
                "package": "typescript"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": -1,
                "name": "DataFunctionArgs.request"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1887, 1888, 1889, 1890]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 242,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L242"
            }
          ],
          "typeParameters": [
            {
              "id": 1891,
              "name": "Context",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                "qualifiedName": "DataFunctionArgs"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 1891,
                  "name": "Context",
                  "package": "react-router",
                  "qualifiedName": "DataStrategyFunctionArgs.Context",
                  "refersToTypeParameter": true
                }
              ],
              "name": "DataFunctionArgs",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1892,
          "name": "unstable_DataStrategyMatch",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A RouteMatch contains info about how a route matched a URL."
              }
            ]
          },
          "children": [
            {
              "id": 1893,
              "name": "params",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The names and values of dynamic parameters in the URL."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 421,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L421"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2188,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Params",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 130,
                "name": "AgnosticRouteMatch.params"
              }
            },
            {
              "id": 1894,
              "name": "pathname",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 425,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L425"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 131,
                "name": "AgnosticRouteMatch.pathname"
              }
            },
            {
              "id": 1895,
              "name": "pathnameBase",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The portion of the URL pathname that was matched before child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 429,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L429"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 132,
                "name": "AgnosticRouteMatch.pathnameBase"
              }
            },
            {
              "id": 1896,
              "name": "resolve",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 235,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L235"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 1897,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 235,
                      "character": 11,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L235"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1898,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 235,
                          "character": 11,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L235"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 1899,
                          "name": "handlerOverride",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1900,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/utils.ts",
                                  "line": 236,
                                  "character": 22,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L236"
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1901,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "packages/react-router/lib/router/utils.ts",
                                      "line": 236,
                                      "character": 22,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L236"
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 1902,
                                      "name": "handler",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {},
                                      "type": {
                                        "type": "reflection",
                                        "declaration": {
                                          "id": 1903,
                                          "name": "__type",
                                          "variant": "declaration",
                                          "kind": 65536,
                                          "flags": {},
                                          "sources": [
                                            {
                                              "fileName": "packages/react-router/lib/router/utils.ts",
                                              "line": 237,
                                              "character": 15,
                                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L237"
                                            }
                                          ],
                                          "signatures": [
                                            {
                                              "id": 1904,
                                              "name": "__type",
                                              "variant": "signature",
                                              "kind": 4096,
                                              "flags": {},
                                              "sources": [
                                                {
                                                  "fileName": "packages/react-router/lib/router/utils.ts",
                                                  "line": 237,
                                                  "character": 15,
                                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L237"
                                                }
                                              ],
                                              "parameters": [
                                                {
                                                  "id": 1905,
                                                  "name": "ctx",
                                                  "variant": "param",
                                                  "kind": 32768,
                                                  "flags": {
                                                    "isOptional": true
                                                  },
                                                  "type": {
                                                    "type": "intrinsic",
                                                    "name": "unknown"
                                                  }
                                                }
                                              ],
                                              "type": {
                                                "type": "reference",
                                                "target": {
                                                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                                                  "qualifiedName": "DataFunctionReturnValue"
                                                },
                                                "name": "DataFunctionReturnValue",
                                                "package": "react-router"
                                              }
                                            }
                                          ]
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Promise"
                                    },
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 1908,
                                        "name": "HandlerResult",
                                        "package": "react-router"
                                      }
                                    ],
                                    "name": "Promise",
                                    "package": "typescript"
                                  }
                                }
                              ]
                            }
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 1908,
                            "name": "HandlerResult",
                            "package": "react-router"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              }
            },
            {
              "id": 1906,
              "name": "route",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The route object that was used to match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 433,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L433"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1930,
                "name": "AgnosticDataRouteObject",
                "package": "react-router"
              },
              "inheritedFrom": {
                "type": "reference",
                "target": 133,
                "name": "AgnosticRouteMatch.route"
              }
            },
            {
              "id": 1907,
              "name": "shouldLoad",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 234,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L234"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1893, 1894, 1895, 1896, 1906, 1907]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 232,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L232"
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": 129,
              "typeArguments": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "reference",
                  "target": 1930,
                  "name": "AgnosticDataRouteObject",
                  "package": "react-router"
                }
              ],
              "name": "AgnosticRouteMatch",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1908,
          "name": "unstable_HandlerResult",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Result from a loader or action called via dataStrategy"
              }
            ]
          },
          "children": [
            {
              "id": 1909,
              "name": "result",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 71,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L71"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            },
            {
              "id": 1910,
              "name": "status",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 72,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L72"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              }
            },
            {
              "id": 1911,
              "name": "type",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 70,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L70"
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "data"
                  },
                  {
                    "type": "literal",
                    "value": "error"
                  }
                ]
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [1909, 1910, 1911]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 69,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L69"
            }
          ]
        },
        {
          "id": 1912,
          "name": "unstable_PatchRoutesOnMissFunction",
          "variant": "declaration",
          "kind": 256,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 120,
              "character": 17,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L120"
            }
          ],
          "signatures": [
            {
              "id": 1913,
              "name": "unstable_PatchRoutesOnMissFunction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 120,
                  "character": 17,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L120"
                }
              ],
              "parameters": [
                {
                  "id": 1914,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 1915,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 1916,
                          "name": "matches",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/utils.ts",
                              "line": 256,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L256"
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "target": 1600,
                              "typeArguments": [
                                {
                                  "type": "intrinsic",
                                  "name": "string"
                                },
                                {
                                  "type": "reference",
                                  "target": 2204,
                                  "name": "RouteObject",
                                  "package": "react-router"
                                }
                              ],
                              "name": "RouteMatch",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 1917,
                          "name": "patch",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/utils.ts",
                              "line": 257,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L257"
                            }
                          ],
                          "type": {
                            "type": "reflection",
                            "declaration": {
                              "id": 1918,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/utils.ts",
                                  "line": 257,
                                  "character": 11,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L257"
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1919,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "packages/react-router/lib/router/utils.ts",
                                      "line": 257,
                                      "character": 11,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L257"
                                    }
                                  ],
                                  "parameters": [
                                    {
                                      "id": 1920,
                                      "name": "routeId",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {},
                                      "type": {
                                        "type": "union",
                                        "types": [
                                          {
                                            "type": "literal",
                                            "value": null
                                          },
                                          {
                                            "type": "intrinsic",
                                            "name": "string"
                                          }
                                        ]
                                      }
                                    },
                                    {
                                      "id": 1921,
                                      "name": "children",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {},
                                      "type": {
                                        "type": "array",
                                        "elementType": {
                                          "type": "reference",
                                          "target": 1939,
                                          "name": "AgnosticRouteObject",
                                          "package": "react-router"
                                        }
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                }
                              ]
                            }
                          }
                        },
                        {
                          "id": 1922,
                          "name": "path",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/utils.ts",
                              "line": 255,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L255"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [1916, 1917, 1922]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 254,
                          "character": 9,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L254"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                ]
              }
            }
          ],
          "extendedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "packages/react-router/lib/router/utils.ts",
                "qualifiedName": "AgnosticPatchRoutesOnMissFunction"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 1600,
                  "name": "RouteMatch",
                  "package": "react-router"
                }
              ],
              "name": "AgnosticPatchRoutesOnMissFunction",
              "package": "react-router"
            }
          ]
        },
        {
          "id": 1923,
          "name": "AgnosticDataIndexRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 347,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L347"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 1931,
                "name": "AgnosticIndexRouteObject",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1924,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1925,
                      "name": "id",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 348,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L348"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1925]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 347,
                      "character": 70,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L347"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1926,
          "name": "AgnosticDataNonIndexRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 351,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L351"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 1935,
                "name": "AgnosticNonIndexRouteObject",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1927,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1928,
                      "name": "children",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 352,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L352"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": 1930,
                          "name": "AgnosticDataRouteObject",
                          "package": "react-router"
                        }
                      }
                    },
                    {
                      "id": 1929,
                      "name": "id",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 353,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L353"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1928, 1929]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 351,
                      "character": 76,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L351"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1930,
          "name": "AgnosticDataRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A data route object, which is just a RouteObject with a required unique ID"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 359,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L359"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 1923,
                "name": "AgnosticDataIndexRouteObject",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": 1926,
                "name": "AgnosticDataNonIndexRouteObject",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 1931,
          "name": "AgnosticIndexRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Index routes must not have children"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 326,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L326"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "AgnosticBaseRouteObject"
                },
                "name": "AgnosticBaseRouteObject",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1932,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1933,
                      "name": "children",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 327,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L327"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 1934,
                      "name": "index",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 328,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L328"
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": true
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1933, 1934]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 326,
                      "character": 65,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L326"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1935,
          "name": "AgnosticNonIndexRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Non-index routes may have children, but cannot have index"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 334,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L334"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "AgnosticBaseRouteObject"
                },
                "name": "AgnosticBaseRouteObject",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1936,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1937,
                      "name": "children",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 335,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L335"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": 1939,
                          "name": "AgnosticRouteObject",
                          "package": "react-router"
                        }
                      }
                    },
                    {
                      "id": 1938,
                      "name": "index",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 336,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L336"
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": false
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1937, 1938]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 334,
                      "character": 68,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L334"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1939,
          "name": "AgnosticRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A route object represents a logical route, with (optionally) its child\nroutes organized in a tree-like structure."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 343,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L343"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 1931,
                "name": "AgnosticIndexRouteObject",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": 1935,
                "name": "AgnosticNonIndexRouteObject",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 1940,
          "name": "Blocker",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 668,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L668"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "BlockerUnblocked"
                },
                "name": "BlockerUnblocked",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "BlockerBlocked"
                },
                "name": "BlockerBlocked",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "BlockerProceeding"
                },
                "name": "BlockerProceeding",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 1941,
          "name": "BlockerFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 670,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L670"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1942,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 670,
                  "character": 30,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L670"
                }
              ],
              "signatures": [
                {
                  "id": 1943,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1944,
                      "name": "args",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1945,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 1946,
                              "name": "currentLocation",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 671,
                                  "character": 2,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L671"
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": 1163,
                                "name": "Location",
                                "package": "react-router"
                              }
                            },
                            {
                              "id": 1947,
                              "name": "historyAction",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 673,
                                  "character": 2,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L673"
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": 3,
                                "name": "HistoryAction",
                                "package": "react-router",
                                "qualifiedName": "Action"
                              }
                            },
                            {
                              "id": 1948,
                              "name": "nextLocation",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/router/router.ts",
                                  "line": 672,
                                  "character": 2,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L672"
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": 1163,
                                "name": "Location",
                                "package": "react-router"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [1946, 1947, 1948]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 670,
                              "character": 37,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L670"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 1949,
          "name": "ClientActionFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A function that handles data mutations for a route on the client"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 39,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L39"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1950,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                  "line": 39,
                  "character": 35,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L39"
                }
              ],
              "signatures": [
                {
                  "id": 1951,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1952,
                      "name": "args",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 1953,
                        "name": "ClientActionFunctionArgs",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "ReturnType"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 114,
                        "name": "RRActionFunction",
                        "package": "react-router",
                        "qualifiedName": "ActionFunction"
                      }
                    ],
                    "name": "ReturnType",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 1953,
          "name": "ClientActionFunctionArgs",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Arguments passed to a route "
              },
              {
                "kind": "code",
                "text": "`clientAction`"
              },
              {
                "kind": "text",
                "text": " function"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 46,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L46"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 119,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ],
                "name": "RRActionFunctionArgs",
                "package": "react-router",
                "qualifiedName": "ActionFunctionArgs"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1954,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1955,
                      "name": "serverAction",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 47,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L47"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1956,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                              "line": 47,
                              "character": 16,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L47"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1957,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 1958,
                                  "name": "T",
                                  "variant": "typeParam",
                                  "kind": 131072,
                                  "flags": {},
                                  "default": {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router/lib/dom/ssr/data.ts",
                                      "qualifiedName": "AppData"
                                    },
                                    "name": "AppData",
                                    "package": "react-router"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                                      "qualifiedName": "SerializeFrom"
                                    },
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 1958,
                                        "name": "T",
                                        "package": "react-router",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "SerializeFrom",
                                    "package": "react-router"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1955]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 46,
                      "character": 73,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L46"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1959,
          "name": "ClientLoaderFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A function that loads data for a route on the client"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 53,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L53"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 1960,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 53,
                      "character": 36,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L53"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 1961,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "parameters": [
                        {
                          "id": 1962,
                          "name": "args",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 1965,
                            "name": "ClientLoaderFunctionArgs",
                            "package": "react-router"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "ReturnType"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 2100,
                            "name": "RRLoaderFunction",
                            "package": "react-router",
                            "qualifiedName": "LoaderFunction"
                          }
                        ],
                        "name": "ReturnType",
                        "package": "typescript"
                      }
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1963,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1964,
                      "name": "hydrate",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 56,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L56"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1964]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 55,
                      "character": 37,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L55"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1965,
          "name": "ClientLoaderFunctionArgs",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Arguments passed to a route "
              },
              {
                "kind": "code",
                "text": "`clientLoader`"
              },
              {
                "kind": "text",
                "text": " function"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 62,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L62"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 1158,
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                ],
                "name": "RRLoaderFunctionArgs",
                "package": "react-router",
                "qualifiedName": "LoaderFunctionArgs"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 1966,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 1967,
                      "name": "serverLoader",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 63,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L63"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 1968,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                              "line": 63,
                              "character": 16,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L63"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 1969,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "typeParameter": [
                                {
                                  "id": 1970,
                                  "name": "T",
                                  "variant": "typeParam",
                                  "kind": 131072,
                                  "flags": {},
                                  "default": {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router/lib/dom/ssr/data.ts",
                                      "qualifiedName": "AppData"
                                    },
                                    "name": "AppData",
                                    "package": "react-router"
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
                                      "qualifiedName": "SerializeFrom"
                                    },
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 1970,
                                        "name": "T",
                                        "package": "react-router",
                                        "refersToTypeParameter": true
                                      }
                                    ],
                                    "name": "SerializeFrom",
                                    "package": "react-router"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [1967]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 62,
                      "character": 73,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L62"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 1971,
          "name": "CookieOptions",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 21,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L21"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 159,
                "name": "CookieParseOptions",
                "package": "@types/cookie"
              },
              {
                "type": "reference",
                "target": 163,
                "name": "CookieSerializeOptions",
                "package": "@types/cookie"
              },
              {
                "type": "reference",
                "target": 176,
                "name": "CookieSignatureOptions",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 1972,
          "name": "CreateCookieFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 70,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L70"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1973,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 70,
                  "character": 35,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L70"
                }
              ],
              "signatures": [
                {
                  "id": 1974,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1975,
                      "name": "name",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 1976,
                      "name": "cookieOptions",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 1971,
                        "name": "CookieOptions",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 147,
                    "name": "Cookie",
                    "package": "react-router"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 1977,
          "name": "CreateCookieSessionStorageFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
              "line": 18,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L18"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1978,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
                  "line": 18,
                  "character": 49,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L18"
                }
              ],
              "signatures": [
                {
                  "id": 1979,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 1980,
                      "name": "Data",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 1670,
                        "name": "SessionData",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 1981,
                      "name": "FlashData",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 1980,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1982,
                      "name": "options",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
                          "qualifiedName": "CookieSessionStorageOptions"
                        },
                        "name": "CookieSessionStorageOptions",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 1698,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1980,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 1981,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "SessionStorage",
                    "package": "react-router"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 1983,
          "name": "CreateMemorySessionStorageFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
              "line": 17,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L17"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1984,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
                  "line": 17,
                  "character": 49,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L17"
                }
              ],
              "signatures": [
                {
                  "id": 1985,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 1986,
                      "name": "Data",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 1670,
                        "name": "SessionData",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 1987,
                      "name": "FlashData",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 1986,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 1988,
                      "name": "options",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
                          "qualifiedName": "MemorySessionStorageOptions"
                        },
                        "name": "MemorySessionStorageOptions",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 1698,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1986,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 1987,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "SessionStorage",
                    "package": "react-router"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 1989,
          "name": "CreateRequestHandlerFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/server.ts",
              "line": 51,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L51"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1990,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/server.ts",
                  "line": 51,
                  "character": 43,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L51"
                }
              ],
              "signatures": [
                {
                  "id": 1991,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 1992,
                      "name": "build",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "target": 1624,
                            "name": "ServerBuild",
                            "package": "react-router"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 1993,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/server-runtime/server.ts",
                                  "line": 52,
                                  "character": 24,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L52"
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 1994,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {},
                                  "type": {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "reference",
                                        "target": 1624,
                                        "name": "ServerBuild",
                                        "package": "react-router"
                                      },
                                      {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "target": 1624,
                                            "name": "ServerBuild",
                                            "package": "react-router"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    ]
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 1995,
                      "name": "mode",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 2199,
                    "name": "RequestHandler",
                    "package": "react-router"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 1996,
          "name": "CreateSessionFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 82,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L82"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 1997,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 82,
                  "character": 36,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L82"
                }
              ],
              "signatures": [
                {
                  "id": 1998,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 1999,
                      "name": "Data",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 1670,
                        "name": "SessionData",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2000,
                      "name": "FlashData",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 2467,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 2001,
                      "name": "initialData",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 2467,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 2002,
                      "name": "id",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 1645,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2467,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 2468,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "Session",
                    "package": "react-router"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2003,
          "name": "CreateSessionStorageFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 248,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L248"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2004,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 248,
                  "character": 43,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L248"
                }
              ],
              "signatures": [
                {
                  "id": 2005,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 2006,
                      "name": "Data",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 1670,
                        "name": "SessionData",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2007,
                      "name": "FlashData",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {},
                      "default": {
                        "type": "reference",
                        "target": 2006,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    }
                  ],
                  "parameters": [
                    {
                      "id": 2008,
                      "name": "strategy",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 1673,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 2006,
                            "name": "Data",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2007,
                            "name": "FlashData",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "SessionIdStorageStrategy",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 1698,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2006,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 2007,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "SessionStorage",
                    "package": "react-router"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2009,
          "name": "DataFunctionArgs",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [],
            "blockTags": [
              {
                "tag": "@deprecated",
                "content": [
                  {
                    "kind": "text",
                    "text": "Use "
                  },
                  {
                    "kind": "code",
                    "text": "`LoaderFunctionArgs`"
                  },
                  {
                    "kind": "text",
                    "text": "/"
                  },
                  {
                    "kind": "code",
                    "text": "`ActionFunctionArgs`"
                  },
                  {
                    "kind": "text",
                    "text": " instead"
                  }
                ]
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
              "line": 22,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L22"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 119,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 136,
                    "name": "AppLoadContext",
                    "package": "react-router"
                  }
                ],
                "name": "RRActionFunctionArgs",
                "package": "react-router",
                "qualifiedName": "ActionFunctionArgs"
              },
              {
                "type": "reference",
                "target": 1158,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 136,
                    "name": "AppLoadContext",
                    "package": "react-router"
                  }
                ],
                "name": "RRLoaderFunctionArgs",
                "package": "react-router",
                "qualifiedName": "LoaderFunctionArgs"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2010,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2011,
                      "name": "context",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                          "line": 27,
                          "character": 4,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L27"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 136,
                        "name": "AppLoadContext",
                        "package": "react-router"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2011]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                      "line": 23,
                      "character": 41,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L23"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2012,
          "name": "DataRouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 61,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L61"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 2204,
                "name": "RouteObject",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2013,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2014,
                      "name": "children",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/context.ts",
                          "line": 62,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L62"
                        }
                      ],
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": 2012,
                          "name": "DataRouteObject",
                          "package": "react-router"
                        }
                      }
                    },
                    {
                      "id": 2015,
                      "name": "id",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/context.ts",
                          "line": 63,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L63"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2014, 2015]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/context.ts",
                      "line": 61,
                      "character": 44,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L61"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2016,
          "name": "ErrorResponse",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1619,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1619"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2017,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2018,
                  "name": "data",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1622,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1622"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                },
                {
                  "id": 2019,
                  "name": "status",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1620,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1620"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 2020,
                  "name": "statusText",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 1621,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1621"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2018, 2019, 2020]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1619,
                  "character": 28,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1619"
                }
              ]
            }
          },
          "implementedBy": [
            {
              "type": "reference",
              "target": 102,
              "name": "UNSAFE_ErrorResponseImpl"
            }
          ]
        },
        {
          "id": 2021,
          "name": "Fetcher",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 644,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L644"
            }
          ],
          "typeParameters": [
            {
              "id": 2022,
              "name": "TData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "indexedAccess",
            "indexType": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "target": 2023,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2022,
                    "name": "TData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "FetcherStates",
                "package": "react-router"
              }
            },
            "objectType": {
              "type": "reference",
              "target": 2023,
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 2022,
                  "name": "TData",
                  "package": "react-router",
                  "refersToTypeParameter": true
                }
              ],
              "name": "FetcherStates",
              "package": "react-router"
            }
          }
        },
        {
          "id": 2023,
          "name": "FetcherStates",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Potential states for fetchers"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 569,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L569"
            }
          ],
          "typeParameters": [
            {
              "id": 2024,
              "name": "TData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2025,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2026,
                  "name": "Idle",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The fetcher is not calling a loader or action\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\nfetcher.state === \"idle\"\n```"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 577,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L577"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2027,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2028,
                          "name": "data",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "If the fetcher has never been called, this will be undefined."
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 588,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L588"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": 2024,
                                "name": "TData",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2029,
                          "name": "formAction",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 580,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L580"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2030,
                          "name": "formData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 583,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L583"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2031,
                          "name": "formEncType",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 581,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L581"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2032,
                          "name": "formMethod",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 579,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L579"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2033,
                          "name": "json",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 584,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L584"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2034,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 578,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L578"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "idle"
                          }
                        },
                        {
                          "id": 2035,
                          "name": "text",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 582,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L582"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/router.ts",
                          "line": 577,
                          "character": 8,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L577"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2036,
                  "name": "Loading",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The fetcher is loading data from a "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "loader",
                        "target": 2100
                      },
                      {
                        "kind": "text",
                        "text": " from a\ncall to "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "FetcherWithComponents.load | `fetcher.load`"
                      },
                      {
                        "kind": "text",
                        "text": ".\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\n// somewhere\n<button onClick={() => fetcher.load(\"/some/route\") }>Load</button>\n\n// the state will update\nfetcher.state === \"loading\"\n```"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 603,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L603"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2037,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2038,
                          "name": "data",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 611,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L611"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": 2024,
                                "name": "TData",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2039,
                          "name": "formAction",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 606,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L606"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formAction"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2040,
                          "name": "formData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 609,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L609"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formData"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2041,
                          "name": "formEncType",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 607,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L607"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formEncType"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2042,
                          "name": "formMethod",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 605,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L605"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formMethod"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2043,
                          "name": "json",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 610,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L610"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "json"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2044,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 604,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L604"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "loading"
                          }
                        },
                        {
                          "id": 2045,
                          "name": "text",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 608,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L608"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "text"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/router.ts",
                          "line": 603,
                          "character": 11,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L603"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2046,
                  "name": "Submitting",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The fetcher is submitting to a "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "LoaderFunction",
                        "target": 2100
                      },
                      {
                        "kind": "text",
                        "text": " (GET) or "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "ActionFunction",
                        "target": 114
                      },
                      {
                        "kind": "text",
                        "text": " (POST) from a "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "FetcherWithComponents.Form | `fetcher.Form`"
                      },
                      {
                        "kind": "text",
                        "text": " or "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "FetcherWithComponents.submit | `fetcher.submit`"
                      },
                      {
                        "kind": "text",
                        "text": ".\n\n"
                      },
                      {
                        "kind": "code",
                        "text": "```tsx\n// somewhere\n<input\n  onChange={e => {\n    fetcher.submit(event.currentTarget.form, { method: \"post\" });\n  }}\n/>\n\n// the state will update\nfetcher.state === \"submitting\"\n\n// and formData will be available\nfetcher.formData\n```"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 632,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L632"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2047,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2048,
                          "name": "data",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 640,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L640"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": 2024,
                                "name": "TData",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2049,
                          "name": "formAction",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 635,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L635"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formAction"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2050,
                          "name": "formData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 638,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L638"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formData"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2051,
                          "name": "formEncType",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 636,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L636"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formEncType"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2052,
                          "name": "formMethod",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 634,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L634"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formMethod"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2053,
                          "name": "json",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 639,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L639"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "json"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2054,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 633,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L633"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "submitting"
                          }
                        },
                        {
                          "id": 2055,
                          "name": "text",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 637,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L637"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "text"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/router.ts",
                          "line": 632,
                          "character": 14,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L632"
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2026, 2036, 2046]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 569,
                  "character": 41,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L569"
                }
              ]
            }
          }
        },
        {
          "id": 2056,
          "name": "FetcherWithComponents",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The return value of "
              },
              {
                "kind": "code",
                "text": "`useFetcher`"
              },
              {
                "kind": "text",
                "text": " that keeps track of the state of a fetcher.\n\n"
              },
              {
                "kind": "code",
                "text": "```tsx\nlet fetcher = useFetcher();\n```"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1987,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1987"
            }
          ],
          "typeParameters": [
            {
              "id": 2057,
              "name": "TData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {}
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 2021,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2057,
                    "name": "TData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "Fetcher",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2058,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2059,
                      "name": "Form",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Just like "
                          },
                          {
                            "kind": "inline-tag",
                            "tag": "@link",
                            "text": "Form",
                            "target": 2308,
                            "tsLinkText": ""
                          },
                          {
                            "kind": "text",
                            "text": " except it doesn't cause a navigation.\n\n"
                          },
                          {
                            "kind": "code",
                            "text": "```tsx\nfunction SomeComponent() {\n  const fetcher = useFetcher()\n  return (\n    <fetcher.Form method=\"post\" action=\"/some/route\">\n      <input type=\"text\" />\n    </fetcher.Form>\n  )\n}\n```"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2002,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2002"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.ForwardRefExoticComponent"
                        },
                        "typeArguments": [
                          {
                            "type": "intersection",
                            "types": [
                              {
                                "type": "reference",
                                "target": 206,
                                "name": "FetcherFormProps",
                                "package": "react-router"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                                  "qualifiedName": "React.RefAttributes"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                                      "qualifiedName": "HTMLFormElement"
                                    },
                                    "name": "HTMLFormElement",
                                    "package": "typescript"
                                  }
                                ],
                                "name": "React.RefAttributes",
                                "package": "@types/react"
                              }
                            ]
                          }
                        ],
                        "name": "React.ForwardRefExoticComponent",
                        "package": "@types/react"
                      }
                    },
                    {
                      "id": 2060,
                      "name": "load",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Loads data from a route. Useful for loading data imperatively inside of user events outside of a normal button or form, like a combobox or search input.\n\n"
                          },
                          {
                            "kind": "code",
                            "text": "```tsx\nlet fetcher = useFetcher()\n\n<input onChange={e => {\n  fetcher.load(`/search?q=${e.target.value}`)\n}} />\n```"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2062,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2062"
                        }
                      ],
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 2061,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2062,
                              "character": 8,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2062"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 2062,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "parameters": [
                                {
                                  "id": 2063,
                                  "name": "href",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {},
                                  "type": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                },
                                {
                                  "id": 2064,
                                  "name": "opts",
                                  "variant": "param",
                                  "kind": 32768,
                                  "flags": {
                                    "isOptional": true
                                  },
                                  "type": {
                                    "type": "reflection",
                                    "declaration": {
                                      "id": 2065,
                                      "name": "__type",
                                      "variant": "declaration",
                                      "kind": 65536,
                                      "flags": {},
                                      "children": [
                                        {
                                          "id": 2066,
                                          "name": "unstable_flushSync",
                                          "variant": "declaration",
                                          "kind": 1024,
                                          "flags": {
                                            "isOptional": true
                                          },
                                          "comment": {
                                            "summary": [
                                              {
                                                "kind": "text",
                                                "text": "Wraps the initial state update for this "
                                              },
                                              {
                                                "kind": "code",
                                                "text": "`fetcher.load`"
                                              },
                                              {
                                                "kind": "text",
                                                "text": " in a\n"
                                              },
                                              {
                                                "kind": "code",
                                                "text": "`ReactDOM.flushSync`"
                                              },
                                              {
                                                "kind": "text",
                                                "text": " call instead of the default "
                                              },
                                              {
                                                "kind": "code",
                                                "text": "`React.startTransition`"
                                              },
                                              {
                                                "kind": "text",
                                                "text": ".\nThis allows you to perform synchronous DOM actions immediately after the\nupdate is flushed to the DOM."
                                              }
                                            ]
                                          },
                                          "sources": [
                                            {
                                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                                              "line": 2071,
                                              "character": 6,
                                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2071"
                                            }
                                          ],
                                          "type": {
                                            "type": "intrinsic",
                                            "name": "boolean"
                                          }
                                        }
                                      ],
                                      "groups": [
                                        {
                                          "title": "Properties",
                                          "children": [2066]
                                        }
                                      ],
                                      "sources": [
                                        {
                                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                                          "line": 2064,
                                          "character": 11,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2064"
                                        }
                                      ]
                                    }
                                  }
                                }
                              ],
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              }
                            }
                          ]
                        }
                      }
                    },
                    {
                      "id": 2067,
                      "name": "submit",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Submits form data to a route. While multiple nested routes can match a URL, only the leaf route will be called.\n\nThe "
                          },
                          {
                            "kind": "code",
                            "text": "`formData`"
                          },
                          {
                            "kind": "text",
                            "text": " can be multiple types:\n\n- ["
                          },
                          {
                            "kind": "code",
                            "text": "`FormData`"
                          },
                          {
                            "kind": "text",
                            "text": "][form_data] - A "
                          },
                          {
                            "kind": "code",
                            "text": "`FormData`"
                          },
                          {
                            "kind": "text",
                            "text": " instance.\n- ["
                          },
                          {
                            "kind": "code",
                            "text": "`HTMLFormElement`"
                          },
                          {
                            "kind": "text",
                            "text": "][html_form_element] - A ["
                          },
                          {
                            "kind": "code",
                            "text": "`<form>`"
                          },
                          {
                            "kind": "text",
                            "text": "][form_element] DOM element.\n- "
                          },
                          {
                            "kind": "code",
                            "text": "`Object`"
                          },
                          {
                            "kind": "text",
                            "text": " - An object of key/value pairs that will be converted to a "
                          },
                          {
                            "kind": "code",
                            "text": "`FormData`"
                          },
                          {
                            "kind": "text",
                            "text": " instance by default. You can pass a more complex object and serialize it as JSON by specifying "
                          },
                          {
                            "kind": "code",
                            "text": "`encType: \"application/json\"`"
                          },
                          {
                            "kind": "text",
                            "text": ". See ["
                          },
                          {
                            "kind": "code",
                            "text": "`useSubmit`"
                          },
                          {
                            "kind": "text",
                            "text": "][use-submit] for more details.\n\nIf the method is "
                          },
                          {
                            "kind": "code",
                            "text": "`GET`"
                          },
                          {
                            "kind": "text",
                            "text": ", then the route ["
                          },
                          {
                            "kind": "code",
                            "text": "`loader`"
                          },
                          {
                            "kind": "text",
                            "text": "][loader] is being called and with the "
                          },
                          {
                            "kind": "code",
                            "text": "`formData`"
                          },
                          {
                            "kind": "text",
                            "text": " serialized to the url as ["
                          },
                          {
                            "kind": "code",
                            "text": "`URLSearchParams`"
                          },
                          {
                            "kind": "text",
                            "text": "][url_search_params]. If "
                          },
                          {
                            "kind": "code",
                            "text": "`DELETE`"
                          },
                          {
                            "kind": "text",
                            "text": ", "
                          },
                          {
                            "kind": "code",
                            "text": "`PATCH`"
                          },
                          {
                            "kind": "text",
                            "text": ", "
                          },
                          {
                            "kind": "code",
                            "text": "`POST`"
                          },
                          {
                            "kind": "text",
                            "text": ", or "
                          },
                          {
                            "kind": "code",
                            "text": "`PUT`"
                          },
                          {
                            "kind": "text",
                            "text": ", then the route ["
                          },
                          {
                            "kind": "code",
                            "text": "`action`"
                          },
                          {
                            "kind": "text",
                            "text": "][action] is being called with "
                          },
                          {
                            "kind": "code",
                            "text": "`formData`"
                          },
                          {
                            "kind": "text",
                            "text": " as the body.\n\n"
                          },
                          {
                            "kind": "code",
                            "text": "```tsx\n// Submit a FormData instance (GET request)\nconst formData = new FormData();\nfetcher.submit(formData);\n\n// Submit the HTML form element\nfetcher.submit(event.currentTarget.form, {\n  method: \"POST\",\n});\n\n// Submit key/value JSON as a FormData instance\nfetcher.submit(\n  { serialized: \"values\" },\n  { method: \"POST\" }\n);\n\n// Submit raw JSON\nfetcher.submit(\n  {\n    deeply: {\n      nested: {\n        json: \"values\",\n      },\n    },\n  },\n  {\n    method: \"POST\",\n    encType: \"application/json\",\n  }\n);\n```"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2049,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2049"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 485,
                        "name": "FetcherSubmitFunction",
                        "package": "react-router"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2059, 2060, 2067]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/lib.tsx",
                      "line": 1987,
                      "character": 60,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1987"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2068,
          "name": "FlashSessionData",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 72,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L72"
            }
          ],
          "typeParameters": [
            {
              "id": 2069,
              "name": "Data",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {}
            },
            {
              "id": 2070,
              "name": "FlashData",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {}
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
              "qualifiedName": "Partial"
            },
            "typeArguments": [
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": 2069,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  },
                  {
                    "type": "mapped",
                    "parameter": "Key",
                    "parameterType": {
                      "type": "typeOperator",
                      "operator": "keyof",
                      "target": {
                        "type": "reference",
                        "target": 2070,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    },
                    "templateType": {
                      "type": "indexedAccess",
                      "indexType": {
                        "type": "reference",
                        "target": 1655,
                        "name": "Key",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      "objectType": {
                        "type": "reference",
                        "target": 2070,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    },
                    "nameType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
                        "qualifiedName": "FlashDataKey"
                      },
                      "typeArguments": [
                        {
                          "type": "intersection",
                          "types": [
                            {
                              "type": "reference",
                              "target": 1655,
                              "name": "Key",
                              "package": "react-router",
                              "refersToTypeParameter": true
                            },
                            {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          ]
                        }
                      ],
                      "name": "FlashDataKey",
                      "package": "react-router"
                    }
                  }
                ]
              }
            ],
            "name": "Partial",
            "package": "typescript"
          }
        },
        {
          "id": 2071,
          "name": "FormEncType",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 91,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L91"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "type": "literal",
                "value": "multipart/form-data"
              },
              {
                "type": "literal",
                "value": "application/json"
              },
              {
                "type": "literal",
                "value": "text/plain"
              }
            ]
          }
        },
        {
          "id": 2072,
          "name": "FormMethod",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Active navigation/fetcher form methods are exposed in uppercase on the\nRouterState. This is to align with the normalization done via fetch()."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 88,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L88"
            }
          ],
          "type": {
            "type": "reference",
            "target": 2291,
            "name": "UpperCaseFormMethod",
            "package": "react-router"
          }
        },
        {
          "id": 2073,
          "name": "Hash",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/index.ts",
              "line": 120,
              "character": 5,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/index.ts#L120"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2074,
          "name": "HeadersArgs",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
              "line": 98,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L98"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2075,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2076,
                  "name": "actionHeaders",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                      "line": 101,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L101"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Headers"
                    },
                    "name": "Headers",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2077,
                  "name": "errorHeaders",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                      "line": 102,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L102"
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Headers"
                        },
                        "name": "Headers",
                        "package": "typescript"
                      },
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    ]
                  }
                },
                {
                  "id": 2078,
                  "name": "loaderHeaders",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                      "line": 99,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L99"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Headers"
                    },
                    "name": "Headers",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2079,
                  "name": "parentHeaders",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                      "line": 100,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L100"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Headers"
                    },
                    "name": "Headers",
                    "package": "typescript"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2076, 2077, 2078, 2079]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/routeModules.ts",
                  "line": 98,
                  "character": 26,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/routeModules.ts#L98"
                }
              ]
            }
          }
        },
        {
          "id": 2080,
          "name": "HtmlLinkDescriptor",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Represents a "
              },
              {
                "kind": "code",
                "text": "`<link>`"
              },
              {
                "kind": "text",
                "text": " element.\n\nWHATWG Specification: https://html.spec.whatwg.org/multipage/semantics.html#the-link-element"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/links.ts",
              "line": 173,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L173"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
                      "qualifiedName": "HtmlLinkProps"
                    },
                    "name": "HtmlLinkProps",
                    "package": "react-router"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Pick"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Required"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
                              "qualifiedName": "HtmlLinkProps"
                            },
                            "name": "HtmlLinkProps",
                            "package": "react-router"
                          }
                        ],
                        "name": "Required",
                        "package": "typescript"
                      },
                      {
                        "type": "literal",
                        "value": "href"
                      }
                    ],
                    "name": "Pick",
                    "package": "typescript"
                  }
                ]
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
                      "qualifiedName": "HtmlLinkPreloadImage"
                    },
                    "name": "HtmlLinkPreloadImage",
                    "package": "react-router"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Pick"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Required"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
                              "qualifiedName": "HtmlLinkPreloadImage"
                            },
                            "name": "HtmlLinkPreloadImage",
                            "package": "react-router"
                          }
                        ],
                        "name": "Required",
                        "package": "typescript"
                      },
                      {
                        "type": "literal",
                        "value": "imageSizes"
                      }
                    ],
                    "name": "Pick",
                    "package": "typescript"
                  }
                ]
              },
              {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
                      "qualifiedName": "HtmlLinkPreloadImage"
                    },
                    "name": "HtmlLinkPreloadImage",
                    "package": "react-router"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Pick"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Required"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
                              "qualifiedName": "HtmlLinkPreloadImage"
                            },
                            "name": "HtmlLinkPreloadImage",
                            "package": "react-router"
                          }
                        ],
                        "name": "Required",
                        "package": "typescript"
                      },
                      {
                        "type": "literal",
                        "value": "href"
                      }
                    ],
                    "name": "Pick",
                    "package": "typescript"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 2081,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2082,
                          "name": "imageSizes",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                              "line": 179,
                              "character": 55,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L179"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2082]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/links.ts",
                          "line": 179,
                          "character": 53,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L179"
                        }
                      ]
                    }
                  }
                ]
              }
            ]
          }
        },
        {
          "id": 2083,
          "name": "HydrationState",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Data that can be passed into hydrate a Router from SSR"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 360,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L360"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
              "qualifiedName": "Partial"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Pick"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/router.ts",
                      "qualifiedName": "RouterState"
                    },
                    "name": "RouterState",
                    "package": "react-router"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": "loaderData"
                      },
                      {
                        "type": "literal",
                        "value": "actionData"
                      },
                      {
                        "type": "literal",
                        "value": "errors"
                      }
                    ]
                  }
                ],
                "name": "Pick",
                "package": "typescript"
              }
            ],
            "name": "Partial",
            "package": "typescript"
          }
        },
        {
          "id": 2084,
          "name": "InitialEntry",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A user-supplied object that describes a location. Used when providing\nentries to "
              },
              {
                "kind": "code",
                "text": "`createMemoryHistory`"
              },
              {
                "kind": "text",
                "text": " via its "
              },
              {
                "kind": "code",
                "text": "`initialEntries`"
              },
              {
                "kind": "text",
                "text": " option."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 205,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L205"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1163,
                    "name": "Location",
                    "package": "react-router"
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            ]
          }
        },
        {
          "id": 2085,
          "name": "IsCookieFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 132,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L132"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2086,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 132,
                  "character": 31,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L132"
                }
              ],
              "signatures": [
                {
                  "id": 2087,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2088,
                      "name": "object",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "predicate",
                    "name": "object",
                    "asserts": false,
                    "targetType": {
                      "type": "reference",
                      "target": 147,
                      "name": "Cookie",
                      "package": "react-router"
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2089,
          "name": "IsSessionFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 144,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L144"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2090,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 144,
                  "character": 32,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L144"
                }
              ],
              "signatures": [
                {
                  "id": 2091,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2092,
                      "name": "object",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    }
                  ],
                  "type": {
                    "type": "predicate",
                    "name": "object",
                    "asserts": false,
                    "targetType": {
                      "type": "reference",
                      "target": 1645,
                      "name": "Session",
                      "package": "react-router"
                    }
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2093,
          "name": "JsonFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1343,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1343"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2094,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1343,
                  "character": 27,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1343"
                }
              ],
              "signatures": [
                {
                  "id": 2095,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "typeParameter": [
                    {
                      "id": 2096,
                      "name": "Data",
                      "variant": "typeParam",
                      "kind": 131072,
                      "flags": {}
                    }
                  ],
                  "parameters": [
                    {
                      "id": 2097,
                      "name": "data",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 2096,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    },
                    {
                      "id": 2098,
                      "name": "init",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "ResponseInit"
                            },
                            "name": "ResponseInit",
                            "package": "typescript"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Response"
                    },
                    "name": "Response",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2099,
          "name": "LinkDescriptor",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/links.ts",
              "line": 200,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/links.ts#L200"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 2080,
                "name": "HtmlLinkDescriptor",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": 1592,
                "name": "PrefetchPageDescriptor",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 2100,
          "name": "LoaderFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Route loader function signature"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 175,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L175"
            }
          ],
          "typeParameters": [
            {
              "id": 2101,
              "name": "Context",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "any"
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 2102,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 175,
                      "character": 44,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L175"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 2103,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 176,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L176"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 2104,
                          "name": "args",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 1158,
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 2101,
                                "name": "Context",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "LoaderFunctionArgs",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2105,
                          "name": "handlerCtx",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {
                            "isOptional": true
                          },
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/utils.ts",
                          "qualifiedName": "DataFunctionReturnValue"
                        },
                        "name": "DataFunctionReturnValue",
                        "package": "react-router"
                      }
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2106,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2107,
                      "name": "hydrate",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 180,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L180"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "boolean"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2107]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 180,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L180"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2108,
          "name": "LowerCaseFormMethod",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 75,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L75"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "get"
              },
              {
                "type": "literal",
                "value": "post"
              },
              {
                "type": "literal",
                "value": "put"
              },
              {
                "type": "literal",
                "value": "patch"
              },
              {
                "type": "literal",
                "value": "delete"
              }
            ]
          }
        },
        {
          "id": 2109,
          "name": "Match",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/define-route.ts",
              "line": 261,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/define-route.ts#L261"
            }
          ],
          "typeParameters": [
            {
              "id": 2110,
              "name": "R",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                  "qualifiedName": "Route"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "Route",
                "package": "react-router"
              }
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "packages/react-router/lib/router/define-route.ts",
              "qualifiedName": "Pretty"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": 1817,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                      "qualifiedName": "LoaderDataFromRoute"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2110,
                        "name": "R",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "LoaderDataFromRoute",
                    "package": "react-router"
                  }
                ],
                "name": "UIMatch",
                "package": "react-router"
              }
            ],
            "name": "Pretty",
            "package": "react-router"
          }
        },
        {
          "id": 2111,
          "name": "MemoryUploadHandlerFilterArgs",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
              "line": 4,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L4"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2112,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2113,
                  "name": "contentType",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                      "line": 6,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L6"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2114,
                  "name": "filename",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                      "line": 5,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L5"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2115,
                  "name": "name",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                      "line": 7,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L7"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2113, 2114, 2115]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                  "line": 4,
                  "character": 44,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L4"
                }
              ]
            }
          }
        },
        {
          "id": 2116,
          "name": "MemoryUploadHandlerOptions",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
              "line": 10,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L10"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2117,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2118,
                  "name": "maxPartSize",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The maximum upload size allowed. If the size is exceeded an error will be thrown.\nDefaults to 3000000B (3MB)."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                      "line": 15,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L15"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                },
                {
                  "id": 2119,
                  "name": "filter",
                  "variant": "declaration",
                  "kind": 2048,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                      "line": 22,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L22"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 2120,
                      "name": "filter",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                          "line": 22,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L22"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 2121,
                          "name": "args",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 2111,
                            "name": "MemoryUploadHandlerFilterArgs",
                            "package": "react-router"
                          }
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "boolean"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        ]
                      }
                    }
                  ]
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2118]
                },
                {
                  "title": "Methods",
                  "children": [2119]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                  "line": 10,
                  "character": 41,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L10"
                }
              ]
            }
          }
        },
        {
          "id": 2122,
          "name": "MetaDescriptor",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "line": 165,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L165"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 2123,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2124,
                      "name": "charSet",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 166,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L166"
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "utf-8"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2124]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 166,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L166"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2125,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2126,
                      "name": "title",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 167,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L167"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2126]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 167,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L167"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2127,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2128,
                      "name": "content",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 168,
                          "character": 20,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L168"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2129,
                      "name": "name",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 168,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L168"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2128, 2129]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 168,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L168"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2130,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2131,
                      "name": "content",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 169,
                          "character": 24,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L169"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2132,
                      "name": "property",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 169,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L169"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2131, 2132]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 169,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L169"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2133,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2134,
                      "name": "content",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 170,
                          "character": 25,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L170"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2135,
                      "name": "httpEquiv",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 170,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L170"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2134, 2135]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 170,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L170"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2136,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2137,
                      "name": "script:ld+json",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 171,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L171"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "qualifiedName": "LdJsonObject"
                        },
                        "name": "LdJsonObject",
                        "package": "react-router"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2137]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 171,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L171"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2138,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2139,
                      "name": "tagName",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                          "line": 172,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L172"
                        }
                      ],
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "literal",
                            "value": "meta"
                          },
                          {
                            "type": "literal",
                            "value": "link"
                          }
                        ]
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2139]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 172,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L172"
                    }
                  ],
                  "indexSignature": {
                    "id": 2140,
                    "name": "__index",
                    "variant": "signature",
                    "kind": 8192,
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                        "line": 172,
                        "character": 32,
                        "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L172"
                      }
                    ],
                    "parameters": [
                      {
                        "id": 2141,
                        "name": "name",
                        "variant": "param",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2142,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                      "line": 173,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L173"
                    }
                  ],
                  "indexSignature": {
                    "id": 2143,
                    "name": "__index",
                    "variant": "signature",
                    "kind": 8192,
                    "flags": {},
                    "sources": [
                      {
                        "fileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
                        "line": 173,
                        "character": 6,
                        "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routeModules.ts#L173"
                      }
                    ],
                    "parameters": [
                      {
                        "id": 2144,
                        "name": "name",
                        "variant": "param",
                        "kind": 32768,
                        "flags": {},
                        "type": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ],
                    "type": {
                      "type": "intrinsic",
                      "name": "unknown"
                    }
                  }
                }
              }
            ]
          }
        },
        {
          "id": 2145,
          "name": "MetaMatch",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/define-route.ts",
              "line": 258,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/define-route.ts#L258"
            }
          ],
          "typeParameters": [
            {
              "id": 2146,
              "name": "R",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                  "qualifiedName": "Route"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  },
                  {
                    "type": "intrinsic",
                    "name": "any"
                  }
                ],
                "name": "Route",
                "package": "react-router"
              }
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
              "qualifiedName": "MetaMatch"
            },
            "typeArguments": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                  "qualifiedName": "LoaderDataFromRoute"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2146,
                    "name": "R",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "LoaderDataFromRoute",
                "package": "react-router"
              }
            ],
            "name": "_MetaMatch",
            "package": "react-router",
            "qualifiedName": "MetaMatch"
          }
        },
        {
          "id": 2147,
          "name": "NavLinkRenderProps",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The object passed to "
              },
              {
                "kind": "inline-tag",
                "tag": "@link",
                "text": "NavLink",
                "target": 2334,
                "tsLinkText": ""
              },
              {
                "kind": "text",
                "text": " "
              },
              {
                "kind": "code",
                "text": "`children`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`className`"
              },
              {
                "kind": "text",
                "text": ", and "
              },
              {
                "kind": "code",
                "text": "`style`"
              },
              {
                "kind": "text",
                "text": " prop callbacks to render and style the link based on its state.\n\n"
              },
              {
                "kind": "code",
                "text": "```\n// className\n<NavLink\n  to=\"/messages\"\n  className={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }\n>\n  Messages\n</NavLink>\n\n// style\n<NavLink\n  to=\"/messages\"\n  style={({ isActive, isPending }) => {\n    return {\n      fontWeight: isActive ? \"bold\" : \"\",\n      color: isPending ? \"red\" : \"black\",\n    }\n  )}\n/>\n\n// children\n<NavLink to=\"/tasks\">\n  {({ isActive, isPending }) => (\n    <span className={isActive ? \"active\" : \"\"}>Tasks</span>\n  )}\n</NavLink>\n```"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1013,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1013"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2148,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2149,
                  "name": "isActive",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Indicates if the link's URL matches the current location."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/lib.tsx",
                      "line": 1017,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1017"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2150,
                  "name": "isPending",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Indicates if the pending location matches the link's URL."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/lib.tsx",
                      "line": 1022,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1022"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2151,
                  "name": "isTransitioning",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Indicates if a view transition to the link's URL is in progress. See "
                      },
                      {
                        "kind": "inline-tag",
                        "tag": "@link",
                        "text": "useViewTransitionState",
                        "target": 2581,
                        "tsLinkText": ""
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/lib.tsx",
                      "line": 1027,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1027"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2149, 2150, 2151]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1013,
                  "character": 33,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1013"
                }
              ]
            }
          }
        },
        {
          "id": 2152,
          "name": "Navigation",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 562,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L562"
            }
          ],
          "type": {
            "type": "indexedAccess",
            "indexType": {
              "type": "typeOperator",
              "operator": "keyof",
              "target": {
                "type": "reference",
                "target": 2153,
                "name": "NavigationStates",
                "package": "react-router"
              }
            },
            "objectType": {
              "type": "reference",
              "target": 2153,
              "name": "NavigationStates",
              "package": "react-router"
            }
          }
        },
        {
          "id": 2153,
          "name": "NavigationStates",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Potential states for state.navigation"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 529,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L529"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2154,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2155,
                  "name": "Idle",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 530,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L530"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2156,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2157,
                          "name": "formAction",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 534,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L534"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2158,
                          "name": "formData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 536,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L536"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2159,
                          "name": "formEncType",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 535,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L535"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2160,
                          "name": "formMethod",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 533,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L533"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2161,
                          "name": "json",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 537,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L537"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2162,
                          "name": "location",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 532,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L532"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        },
                        {
                          "id": 2163,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 531,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L531"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "idle"
                          }
                        },
                        {
                          "id": 2164,
                          "name": "text",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 538,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L538"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/router.ts",
                          "line": 530,
                          "character": 8,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L530"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2165,
                  "name": "Loading",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 540,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L540"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2166,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2167,
                          "name": "formAction",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 544,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L544"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formAction"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2168,
                          "name": "formData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 546,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L546"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formData"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2169,
                          "name": "formEncType",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 545,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L545"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formEncType"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2170,
                          "name": "formMethod",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 543,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L543"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "formMethod"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2171,
                          "name": "json",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 547,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L547"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "json"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        },
                        {
                          "id": 2172,
                          "name": "location",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 542,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L542"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 1163,
                            "name": "Location",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2173,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 541,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L541"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "loading"
                          }
                        },
                        {
                          "id": 2174,
                          "name": "text",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 548,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L548"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "indexedAccess",
                                "indexType": {
                                  "type": "literal",
                                  "value": "text"
                                },
                                "objectType": {
                                  "type": "reference",
                                  "target": 2225,
                                  "name": "Submission",
                                  "package": "react-router"
                                }
                              },
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/router.ts",
                          "line": 540,
                          "character": 11,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L540"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2175,
                  "name": "Submitting",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/router.ts",
                      "line": 550,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L550"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2176,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2177,
                          "name": "formAction",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 554,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L554"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formAction"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2178,
                          "name": "formData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 556,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L556"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formData"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2179,
                          "name": "formEncType",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 555,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L555"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formEncType"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2180,
                          "name": "formMethod",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 553,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L553"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "formMethod"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2181,
                          "name": "json",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 557,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L557"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "json"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2182,
                          "name": "location",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 552,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L552"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 1163,
                            "name": "Location",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2183,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 551,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L551"
                            }
                          ],
                          "type": {
                            "type": "literal",
                            "value": "submitting"
                          }
                        },
                        {
                          "id": 2184,
                          "name": "text",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/router/router.ts",
                              "line": 558,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L558"
                            }
                          ],
                          "type": {
                            "type": "indexedAccess",
                            "indexType": {
                              "type": "literal",
                              "value": "text"
                            },
                            "objectType": {
                              "type": "reference",
                              "target": 2225,
                              "name": "Submission",
                              "package": "react-router"
                            }
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [
                            2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184
                          ]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/router.ts",
                          "line": 550,
                          "character": 14,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L550"
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2155, 2165, 2175]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 529,
                  "character": 31,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L529"
                }
              ]
            }
          }
        },
        {
          "id": 2185,
          "name": "ParamKeyValuePair",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/dom.ts",
              "line": 47,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L47"
            }
          ],
          "type": {
            "type": "tuple",
            "elements": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "intrinsic",
                "name": "string"
              }
            ]
          }
        },
        {
          "id": 2186,
          "name": "ParamParseKey",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 400,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L400"
            }
          ],
          "typeParameters": [
            {
              "id": 2187,
              "name": "Segment",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "tuple",
              "elements": [
                {
                  "type": "reference",
                  "target": 2190,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "target": 2187,
                      "name": "Segment",
                      "package": "react-router",
                      "refersToTypeParameter": true
                    }
                  ],
                  "name": "PathParam",
                  "package": "react-router"
                }
              ]
            },
            "extendsType": {
              "type": "tuple",
              "elements": [
                {
                  "type": "intrinsic",
                  "name": "never"
                }
              ]
            },
            "trueType": {
              "type": "intrinsic",
              "name": "string"
            },
            "falseType": {
              "type": "reference",
              "target": 2190,
              "typeArguments": [
                {
                  "type": "reference",
                  "target": 2187,
                  "name": "Segment",
                  "package": "react-router",
                  "refersToTypeParameter": true
                }
              ],
              "name": "PathParam",
              "package": "react-router"
            }
          }
        },
        {
          "id": 2188,
          "name": "Params",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "The parameters that were parsed from the URL path."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 407,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L407"
            }
          ],
          "typeParameters": [
            {
              "id": 2189,
              "name": "Key",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "default": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "mapped",
            "parameter": "key",
            "parameterType": {
              "type": "reference",
              "target": 2189,
              "name": "Key",
              "package": "react-router",
              "refersToTypeParameter": true
            },
            "templateType": {
              "type": "union",
              "types": [
                {
                  "type": "intrinsic",
                  "name": "string"
                },
                {
                  "type": "intrinsic",
                  "name": "undefined"
                }
              ]
            },
            "readonlyModifier": "+"
          }
        },
        {
          "id": 2190,
          "name": "PathParam",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Examples:\n\"/a/b/*\" -> \"*\"\n\":a\" -> \"a\"\n\"/a/:b\" -> \"b\"\n\"/a/blahblahblah:b\" -> \"b\"\n\"/:a/:b\" -> \"a\" | \"b\"\n\"/:a/b/:c/*\" -> \"a\" | \"c\" | \"*\""
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 387,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L387"
            }
          ],
          "typeParameters": [
            {
              "id": 2191,
              "name": "Path",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "type": {
            "type": "conditional",
            "checkType": {
              "type": "reference",
              "target": 2191,
              "name": "Path",
              "package": "react-router",
              "refersToTypeParameter": true
            },
            "extendsType": {
              "type": "union",
              "types": [
                {
                  "type": "literal",
                  "value": "*"
                },
                {
                  "type": "literal",
                  "value": "/*"
                }
              ]
            },
            "trueType": {
              "type": "literal",
              "value": "*"
            },
            "falseType": {
              "type": "conditional",
              "checkType": {
                "type": "reference",
                "target": 2191,
                "name": "Path",
                "package": "react-router",
                "refersToTypeParameter": true
              },
              "extendsType": {
                "type": "templateLiteral",
                "head": "",
                "tail": [
                  [
                    {
                      "type": "inferred",
                      "name": "Rest"
                    },
                    "/*"
                  ]
                ]
              },
              "trueType": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "*"
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/utils.ts",
                      "qualifiedName": "_PathParam"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/utils.ts",
                          "qualifiedName": "Rest"
                        },
                        "name": "Rest",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "_PathParam",
                    "package": "react-router"
                  }
                ]
              },
              "falseType": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/utils.ts",
                  "qualifiedName": "_PathParam"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2191,
                    "name": "Path",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "_PathParam",
                "package": "react-router"
              }
            }
          }
        },
        {
          "id": 2192,
          "name": "Pathname",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/index.ts",
              "line": 121,
              "character": 5,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/index.ts#L121"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2193,
          "name": "RedirectFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1578,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1578"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2194,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1578,
                  "character": 31,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1578"
                }
              ],
              "signatures": [
                {
                  "id": 2195,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2196,
                      "name": "url",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2197,
                      "name": "init",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "number"
                          },
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "ResponseInit"
                            },
                            "name": "ResponseInit",
                            "package": "typescript"
                          }
                        ]
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Response"
                    },
                    "name": "Response",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2198,
          "name": "RelativeRoutingType",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "- \"route\": relative to the route hierarchy so "
              },
              {
                "kind": "code",
                "text": "`..`"
              },
              {
                "kind": "text",
                "text": " means remove all segments of the current route even if it has many. For example, a "
              },
              {
                "kind": "code",
                "text": "`route(\"posts/:id\")`"
              },
              {
                "kind": "text",
                "text": " would have both "
              },
              {
                "kind": "code",
                "text": "`:id`"
              },
              {
                "kind": "text",
                "text": " and "
              },
              {
                "kind": "code",
                "text": "`posts`"
              },
              {
                "kind": "text",
                "text": " removed from the url.\n- \"path\": relative to the pathname so "
              },
              {
                "kind": "code",
                "text": "`..`"
              },
              {
                "kind": "text",
                "text": " means remove one segment of the pathname. For example, a "
              },
              {
                "kind": "code",
                "text": "`route(\"posts/:id\")`"
              },
              {
                "kind": "text",
                "text": " would have only "
              },
              {
                "kind": "code",
                "text": "`:id`"
              },
              {
                "kind": "text",
                "text": " removed from the url."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 468,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L468"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "literal",
                "value": "route"
              },
              {
                "type": "literal",
                "value": "path"
              }
            ]
          }
        },
        {
          "id": 2199,
          "name": "RequestHandler",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/server.ts",
              "line": 46,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L46"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2200,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/server.ts",
                  "line": 46,
                  "character": 29,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L46"
                }
              ],
              "signatures": [
                {
                  "id": 2201,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2202,
                      "name": "request",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Request"
                        },
                        "name": "Request",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 2203,
                      "name": "loadContext",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 136,
                        "name": "AppLoadContext",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Response"
                        },
                        "name": "Response",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2204,
          "name": "RouteObject",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 59,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L59"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 805,
                "name": "IndexRouteObject",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": 1525,
                "name": "NonIndexRouteObject",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 2205,
          "name": "RouteProps",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 359,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L359"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": 1571,
                "name": "PathRouteProps",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": 847,
                "name": "LayoutRouteProps",
                "package": "react-router"
              },
              {
                "type": "reference",
                "target": 826,
                "name": "IndexRouteProps",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 2206,
          "name": "ScriptsProps",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A couple common attributes:\n\n- "
              },
              {
                "kind": "code",
                "text": "`<Scripts crossOrigin>`"
              },
              {
                "kind": "text",
                "text": " for hosting your static assets on a different server than your app.\n- "
              },
              {
                "kind": "code",
                "text": "`<Scripts nonce>`"
              },
              {
                "kind": "text",
                "text": " to support a [content security policy for scripts](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/script-src) with [nonce-sources](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy/Sources#sources) for your "
              },
              {
                "kind": "code",
                "text": "`<script>`"
              },
              {
                "kind": "text",
                "text": " tags.\n\nYou cannot pass through attributes such as "
              },
              {
                "kind": "code",
                "text": "`async`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`defer`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`src`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`type`"
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "code",
                "text": "`noModule`"
              },
              {
                "kind": "text",
                "text": " because they are managed by React Router internally."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
              "line": 576,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L576"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
              "qualifiedName": "Omit"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.HTMLProps"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLScriptElement"
                    },
                    "name": "HTMLScriptElement",
                    "package": "typescript"
                  }
                ],
                "name": "React.HTMLProps",
                "package": "@types/react"
              },
              {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": "children"
                  },
                  {
                    "type": "literal",
                    "value": "async"
                  },
                  {
                    "type": "literal",
                    "value": "defer"
                  },
                  {
                    "type": "literal",
                    "value": "src"
                  },
                  {
                    "type": "literal",
                    "value": "type"
                  },
                  {
                    "type": "literal",
                    "value": "noModule"
                  },
                  {
                    "type": "literal",
                    "value": "dangerouslySetInnerHTML"
                  },
                  {
                    "type": "literal",
                    "value": "suppressHydrationWarning"
                  }
                ]
              }
            ],
            "name": "Omit",
            "package": "typescript"
          }
        },
        {
          "id": 2207,
          "name": "ScrollRestorationProps",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1431,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1431"
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": 2206,
                "name": "ScriptsProps",
                "package": "react-router"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2208,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2209,
                      "name": "getKey",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "comment": {
                        "summary": [
                          {
                            "kind": "text",
                            "text": "Defines the key used to restore scroll positions.\n\n"
                          },
                          {
                            "kind": "code",
                            "text": "```tsx\n<ScrollRestoration\n  getKey={(location, matches) => {\n    // default behavior\n    return location.key\n  }}\n/>\n```"
                          }
                        ]
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1444,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1444"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 775,
                        "name": "GetScrollRestorationKeyFunction",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2210,
                      "name": "storageKey",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isOptional": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1446,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1446"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2209, 2210]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/lib.tsx",
                      "line": 1431,
                      "character": 52,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1431"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2211,
          "name": "Search",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/index.ts",
              "line": 122,
              "character": 5,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/index.ts#L122"
            }
          ],
          "type": {
            "type": "intrinsic",
            "name": "string"
          }
        },
        {
          "id": 2212,
          "name": "SetURLSearchParams",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Sets new search params and causes a navigation when called.\n\n"
              },
              {
                "kind": "code",
                "text": "```tsx\n<button\n  onClick={() => {\n    const params = new URLSearchParams();\n    params.set(\"someKey\", \"someValue\");\n    setSearchParams(params, {\n      preventScrollReset: true,\n    });\n  }}\n/>\n```"
              },
              {
                "kind": "text",
                "text": "\n\nIt also supports a function for setting new search params.\n\n"
              },
              {
                "kind": "code",
                "text": "```tsx\n<button\n  onClick={() => {\n    setSearchParams((prev) => {\n      prev.set(\"someKey\", \"someValue\");\n      return prev;\n    });\n  }}\n/>\n```"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1735,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1735"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2213,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1735,
                  "character": 33,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1735"
                }
              ],
              "signatures": [
                {
                  "id": 2214,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2215,
                      "name": "nextInit",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "target": 2275,
                            "name": "URLSearchParamsInit",
                            "package": "react-router"
                          },
                          {
                            "type": "reflection",
                            "declaration": {
                              "id": 2216,
                              "name": "__type",
                              "variant": "declaration",
                              "kind": 65536,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                                  "line": 1738,
                                  "character": 7,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1738"
                                }
                              ],
                              "signatures": [
                                {
                                  "id": 2217,
                                  "name": "__type",
                                  "variant": "signature",
                                  "kind": 4096,
                                  "flags": {},
                                  "parameters": [
                                    {
                                      "id": 2218,
                                      "name": "prev",
                                      "variant": "param",
                                      "kind": 32768,
                                      "flags": {},
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                                          "qualifiedName": "URLSearchParams"
                                        },
                                        "name": "URLSearchParams",
                                        "package": "typescript"
                                      }
                                    }
                                  ],
                                  "type": {
                                    "type": "reference",
                                    "target": 2275,
                                    "name": "URLSearchParamsInit",
                                    "package": "react-router"
                                  }
                                }
                              ]
                            }
                          }
                        ]
                      }
                    },
                    {
                      "id": 2219,
                      "name": "navigateOpts",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reference",
                        "target": 1490,
                        "name": "NavigateOptions",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "void"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2220,
          "name": "SignFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/crypto.ts",
              "line": 1,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/crypto.ts#L1"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2221,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/crypto.ts",
                  "line": 1,
                  "character": 27,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/crypto.ts#L1"
                }
              ],
              "signatures": [
                {
                  "id": 2222,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2223,
                      "name": "value",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2224,
                      "name": "secret",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2225,
          "name": "Submission",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {
            "isPrivate": true
          },
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Internal interface to pass around for action submissions, not intended for\nexternal consumption"
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 110,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L110"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 2226,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2227,
                      "name": "formAction",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 113,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L113"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2228,
                      "name": "formData",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 115,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L115"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "FormData"
                        },
                        "name": "FormData",
                        "package": "typescript"
                      }
                    },
                    {
                      "id": 2229,
                      "name": "formEncType",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 114,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L114"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2071,
                        "name": "FormEncType",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2230,
                      "name": "formMethod",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 112,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L112"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2072,
                        "name": "FormMethod",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2231,
                      "name": "json",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 116,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L116"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 2232,
                      "name": "text",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 117,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L117"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2227, 2228, 2229, 2230, 2231, 2232]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 111,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L111"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2233,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2234,
                      "name": "formAction",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 121,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L121"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2235,
                      "name": "formData",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 123,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L123"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 2236,
                      "name": "formEncType",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 122,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L122"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2071,
                        "name": "FormEncType",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2237,
                      "name": "formMethod",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 120,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L120"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2072,
                        "name": "FormMethod",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2238,
                      "name": "json",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 124,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L124"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/utils.ts",
                          "qualifiedName": "JsonValue"
                        },
                        "name": "JsonValue",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2239,
                      "name": "text",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 125,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L125"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2234, 2235, 2236, 2237, 2238, 2239]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 119,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L119"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2240,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2241,
                      "name": "formAction",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 129,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L129"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2242,
                      "name": "formData",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 131,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L131"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 2243,
                      "name": "formEncType",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 130,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L130"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2071,
                        "name": "FormEncType",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2244,
                      "name": "formMethod",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 128,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L128"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2072,
                        "name": "FormMethod",
                        "package": "react-router"
                      }
                    },
                    {
                      "id": 2245,
                      "name": "json",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 132,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L132"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "undefined"
                      }
                    },
                    {
                      "id": 2246,
                      "name": "text",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/router/utils.ts",
                          "line": 133,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L133"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2241, 2242, 2243, 2244, 2245, 2246]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/router/utils.ts",
                      "line": 127,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L127"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2247,
          "name": "SubmitTarget",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/dom.ts",
              "line": 130,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L130"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "HTMLFormElement"
                },
                "name": "HTMLFormElement",
                "package": "typescript"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "HTMLButtonElement"
                },
                "name": "HTMLButtonElement",
                "package": "typescript"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "HTMLInputElement"
                },
                "name": "HTMLInputElement",
                "package": "typescript"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "FormData"
                },
                "name": "FormData",
                "package": "typescript"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "URLSearchParams"
                },
                "name": "URLSearchParams",
                "package": "typescript"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/dom.ts",
                  "qualifiedName": "JsonValue"
                },
                "name": "JsonValue",
                "package": "react-router"
              },
              {
                "type": "literal",
                "value": null
              }
            ]
          }
        },
        {
          "id": 2248,
          "name": "To",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "Describes a location that is the destination of some navigation used in\n"
              },
              {
                "kind": "inline-tag",
                "tag": "@link",
                "text": "Link",
                "target": 2320
              },
              {
                "kind": "text",
                "text": ", "
              },
              {
                "kind": "inline-tag",
                "tag": "@link",
                "text": "useNavigate",
                "target": 2655
              },
              {
                "kind": "text",
                "text": ", etc."
              }
            ]
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 105,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L105"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1556,
                    "name": "Path",
                    "package": "react-router"
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            ]
          }
        },
        {
          "id": 2249,
          "name": "TypedDeferredData",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/responses.ts",
              "line": 14,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L14"
            }
          ],
          "typeParameters": [
            {
              "id": 2250,
              "name": "Data",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                ],
                "name": "Record",
                "package": "typescript"
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Pick"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 48,
                    "name": "DeferredData",
                    "package": "react-router"
                  },
                  {
                    "type": "literal",
                    "value": "init"
                  }
                ],
                "name": "Pick",
                "package": "typescript"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2251,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2252,
                      "name": "[typedDeferredDataBrand]",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {
                        "isReadonly": true
                      },
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/responses.ts",
                          "line": 19,
                          "character": 11,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L19"
                        }
                      ],
                      "type": {
                        "type": "literal",
                        "value": "TypedDeferredData"
                      }
                    },
                    {
                      "id": 2253,
                      "name": "data",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/responses.ts",
                          "line": 18,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L18"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": 2250,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2252, 2253]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/responses.ts",
                      "line": 17,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L17"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2254,
          "name": "TypedResponse",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/responses.ts",
              "line": 34,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L34"
            }
          ],
          "typeParameters": [
            {
              "id": 2255,
              "name": "T",
              "variant": "typeParam",
              "kind": 131072,
              "flags": {},
              "default": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ],
          "type": {
            "type": "intersection",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Omit"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Response"
                    },
                    "name": "Response",
                    "package": "typescript"
                  },
                  {
                    "type": "literal",
                    "value": "json"
                  }
                ],
                "name": "Omit",
                "package": "typescript"
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2256,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2257,
                      "name": "json",
                      "variant": "declaration",
                      "kind": 2048,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/responses.ts",
                          "line": 35,
                          "character": 2,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L35"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2258,
                          "name": "json",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/server-runtime/responses.ts",
                              "line": 35,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L35"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 2255,
                                "name": "T",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Methods",
                      "children": [2257]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/responses.ts",
                      "line": 34,
                      "character": 66,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/responses.ts#L34"
                    }
                  ]
                }
              }
            ]
          }
        },
        {
          "id": 2259,
          "name": "UNSAFE_SingleFetchRedirectResult",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
              "line": 22,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L22"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2260,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2261,
                  "name": "redirect",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 23,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L23"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2262,
                  "name": "reload",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 26,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L26"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2263,
                  "name": "revalidate",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 25,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L25"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2264,
                  "name": "status",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 24,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L24"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "number"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2261, 2262, 2263, 2264]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                  "line": 22,
                  "character": 40,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L22"
                }
              ]
            }
          }
        },
        {
          "id": 2265,
          "name": "UNSAFE_SingleFetchResult",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
              "line": 29,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L29"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reflection",
                "declaration": {
                  "id": 2266,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2267,
                      "name": "data",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                          "line": 30,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L30"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2267]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 30,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L30"
                    }
                  ]
                }
              },
              {
                "type": "reflection",
                "declaration": {
                  "id": 2268,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2269,
                      "name": "error",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                          "line": 31,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L31"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2269]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 31,
                      "character": 4,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L31"
                    }
                  ]
                }
              },
              {
                "type": "reference",
                "target": 2259,
                "name": "SingleFetchRedirectResult",
                "package": "react-router"
              }
            ]
          }
        },
        {
          "id": 2270,
          "name": "UNSAFE_SingleFetchResults",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
              "line": 34,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L34"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2271,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2272,
                  "name": "[SingleFetchRedirectSymbol]",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                      "line": 36,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L36"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 2259,
                    "name": "SingleFetchRedirectResult",
                    "package": "react-router"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2272]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                  "line": 34,
                  "character": 33,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L34"
                }
              ],
              "indexSignature": {
                "id": 2273,
                "name": "__index",
                "variant": "signature",
                "kind": 8192,
                "flags": {},
                "sources": [
                  {
                    "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                    "line": 35,
                    "character": 2,
                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L35"
                  }
                ],
                "parameters": [
                  {
                    "id": 2274,
                    "name": "key",
                    "variant": "param",
                    "kind": 32768,
                    "flags": {},
                    "type": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                ],
                "type": {
                  "type": "reference",
                  "target": 2265,
                  "name": "SingleFetchResult",
                  "package": "react-router"
                }
              }
            }
          }
        },
        {
          "id": 2275,
          "name": "URLSearchParamsInit",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/dom.ts",
              "line": 49,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L49"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "intrinsic",
                "name": "string"
              },
              {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 2185,
                  "name": "ParamKeyValuePair",
                  "package": "react-router"
                }
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Record"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      }
                    ]
                  }
                ],
                "name": "Record",
                "package": "typescript"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "URLSearchParams"
                },
                "name": "URLSearchParams",
                "package": "typescript"
              }
            ]
          }
        },
        {
          "id": 2276,
          "name": "UnsignFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/crypto.ts",
              "line": 3,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/crypto.ts#L3"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2277,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/crypto.ts",
                  "line": 3,
                  "character": 29,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/crypto.ts#L3"
                }
              ],
              "signatures": [
                {
                  "id": 2278,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2279,
                      "name": "cookie",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2280,
                      "name": "secret",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "literal",
                            "value": false
                          }
                        ]
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2281,
          "name": "UploadHandler",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/formData.ts",
              "line": 11,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L11"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2282,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                  "line": 11,
                  "character": 28,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L11"
                }
              ],
              "signatures": [
                {
                  "id": 2283,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2284,
                      "name": "part",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": 2285,
                        "name": "UploadHandlerPart",
                        "package": "react-router"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "union",
                        "types": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "File"
                            },
                            "name": "File",
                            "package": "typescript"
                          },
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "literal",
                            "value": null
                          },
                          {
                            "type": "intrinsic",
                            "name": "undefined"
                          }
                        ]
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2285,
          "name": "UploadHandlerPart",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/formData.ts",
              "line": 4,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L4"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2286,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2287,
                  "name": "contentType",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                      "line": 7,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L7"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2288,
                  "name": "data",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                      "line": 8,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L8"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
                      "qualifiedName": "AsyncIterable"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Uint8Array"
                        },
                        "name": "Uint8Array",
                        "package": "typescript"
                      }
                    ],
                    "name": "AsyncIterable",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2289,
                  "name": "filename",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                      "line": 6,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L6"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2290,
                  "name": "name",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                      "line": 5,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L5"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2287, 2288, 2289, 2290]
                }
              ],
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                  "line": 4,
                  "character": 32,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L4"
                }
              ]
            }
          }
        },
        {
          "id": 2291,
          "name": "UpperCaseFormMethod",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 76,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L76"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
              "qualifiedName": "Uppercase"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": 2108,
                "name": "LowerCaseFormMethod",
                "package": "react-router"
              }
            ],
            "name": "Uppercase",
            "package": "typescript"
          }
        },
        {
          "id": 2292,
          "name": "UNSAFE_DEFERRED_SYMBOL",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 3398,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L3398"
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "target": 2292,
              "name": "UNSAFE_DEFERRED_SYMBOL",
              "package": "react-router"
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 2293,
          "name": "UNSAFE_DataRouterContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 81,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L81"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/context.ts",
                      "qualifiedName": "DataRouterContextObject"
                    },
                    "name": "DataRouterContextObject",
                    "package": "react-router"
                  }
                ]
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2294,
          "name": "UNSAFE_DataRouterStateContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 85,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L85"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/router.ts",
                      "qualifiedName": "RouterState"
                    },
                    "name": "RouterState",
                    "package": "react-router"
                  }
                ]
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2295,
          "name": "UNSAFE_FetchersContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 264,
              "character": 6,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L264"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
                  "qualifiedName": "FetchersContextObject"
                },
                "name": "FetchersContextObject",
                "package": "react-router"
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2296,
          "name": "UNSAFE_FrameworkContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
              "line": 59,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L59"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "undefined"
                  },
                  {
                    "type": "reference",
                    "target": 1851,
                    "name": "FrameworkContextObject",
                    "package": "react-router"
                  }
                ]
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2297,
          "name": "UNSAFE_LocationContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 139,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L139"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/context.ts",
                  "qualifiedName": "LocationContextObject"
                },
                "name": "LocationContextObject",
                "package": "react-router"
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2298,
          "name": "UNSAFE_NavigationContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 129,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L129"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/context.ts",
                  "qualifiedName": "NavigationContextObject"
                },
                "name": "NavigationContextObject",
                "package": "react-router"
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2299,
          "name": "UNSAFE_RouteContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/context.ts",
              "line": 150,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/context.ts#L150"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/context.ts",
                  "qualifiedName": "RouteContextObject"
                },
                "name": "RouteContextObject",
                "package": "react-router"
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2300,
          "name": "UNSAFE_SingleFetchRedirectSymbol",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
              "line": 20,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L20"
            }
          ],
          "type": {
            "type": "query",
            "queryType": {
              "type": "reference",
              "target": 2300,
              "name": "SingleFetchRedirectSymbol",
              "package": "react-router"
            }
          },
          "defaultValue": "..."
        },
        {
          "id": 2301,
          "name": "UNSAFE_ViewTransitionContext",
          "variant": "declaration",
          "kind": 32,
          "flags": {
            "isConst": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 254,
              "character": 6,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L254"
            }
          ],
          "type": {
            "type": "reference",
            "target": {
              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
              "qualifiedName": "React.Context"
            },
            "typeArguments": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
                  "qualifiedName": "ViewTransitionContextObject"
                },
                "name": "ViewTransitionContextObject",
                "package": "react-router"
              }
            ],
            "name": "Context",
            "package": "@types/react",
            "qualifiedName": "React.Context"
          },
          "defaultValue": "..."
        },
        {
          "id": 2302,
          "name": "Await",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 663,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L663"
            }
          ],
          "signatures": [
            {
              "id": 2303,
              "name": "Await",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Used to render promise values with automatic error handling.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Await, useLoaderData } from \"react-router\";\n\nexport function loader() {\n  // not awaited\n  const reviews = getReviews()\n  // awaited (blocks the transition)\n  const book = await fetch(\"/api/book\").then((res) => res.json())\n  return { book, reviews }\n}\n\nfunction Book() {\n  const { book, reviews } = useLoaderData();\n  return (\n    <div>\n      <h1>{book.title}</h1>\n      <p>{book.description}</p>\n      <React.Suspense fallback={<ReviewsSkeleton />}>\n        <Await\n          resolve={reviews}\n          errorElement={\n            <div>Could not load reviews 😬</div>\n          }\n          children={(resolvedReviews) => (\n            <Reviews items={resolvedReviews} />\n          )}\n        />\n      </React.Suspense>\n    </div>\n  );\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\n**Note:** "
                  },
                  {
                    "kind": "code",
                    "text": "`<Await>`"
                  },
                  {
                    "kind": "text",
                    "text": " expects to be rendered inside of a "
                  },
                  {
                    "kind": "code",
                    "text": "`<React.Suspense>`"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 663,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L663"
                }
              ],
              "parameters": [
                {
                  "id": 2304,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 139,
                    "name": "AwaitProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2305,
          "name": "BrowserRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 574,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L574"
            }
          ],
          "signatures": [
            {
              "id": 2306,
              "name": "BrowserRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A "
                  },
                  {
                    "kind": "code",
                    "text": "`<Router>`"
                  },
                  {
                    "kind": "text",
                    "text": " for use in web browsers. Provides the cleanest URLs."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 574,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L574"
                }
              ],
              "parameters": [
                {
                  "id": 2307,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 143,
                    "name": "BrowserRouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2308,
          "name": "Form",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "children": [
            {
              "id": 2309,
              "name": "$$typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 393,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "symbol"
              }
            },
            {
              "id": 2310,
              "name": "defaultProps",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 818,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 489,
                        "name": "FormProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLFormElement"
                            },
                            "name": "HTMLFormElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 2311,
              "name": "displayName",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 397,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 2312,
              "name": "propTypes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 819,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WeakValidationMap"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 489,
                        "name": "FormProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLFormElement"
                            },
                            "name": "HTMLFormElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                ],
                "name": "WeakValidationMap",
                "package": "@types/react",
                "qualifiedName": "React.WeakValidationMap"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [2309, 2310, 2311, 2312]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1365,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1365"
            }
          ],
          "signatures": [
            {
              "id": 2313,
              "name": "Form",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A progressively enhanced HTML ["
                  },
                  {
                    "kind": "code",
                    "text": "`<form>`"
                  },
                  {
                    "kind": "text",
                    "text": "](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/form) that submits data to actions via "
                  },
                  {
                    "kind": "code",
                    "text": "`fetch`"
                  },
                  {
                    "kind": "text",
                    "text": ", activating pending states in "
                  },
                  {
                    "kind": "code",
                    "text": "`useNavigation`"
                  },
                  {
                    "kind": "text",
                    "text": " which enables advanced user interfaces beyond a basic HTML form. After a form's action completes, all data on the page is automatically revalidated to keep the UI in sync with the data.\n\nBecause it uses the HTML form API, server rendered pages are interactive at a basic level before JavaScript loads. Instead of React Router managing the submission, the browser manages the submission as well as the pending states (like the spinning favicon). After JavaScript loads, React Router takes over enabling web application user experiences.\n\nForm is most useful for submissions that should also change the URL or otherwise add an entry to the browser history stack. For forms that shouldn't manipulate the browser history stack, use ["
                  },
                  {
                    "kind": "code",
                    "text": "`<fetcher.Form>`"
                  },
                  {
                    "kind": "text",
                    "text": "][fetcher_form].\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Form } from \"react-router\";\n\nfunction NewEvent() {\n  return (\n    <Form action=\"/events\" method=\"post\">\n      <input name=\"title\" type=\"text\" />\n      <input name=\"description\" type=\"text\" />\n    </Form>\n  )\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1365,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1365"
                }
              ],
              "parameters": [
                {
                  "id": 2314,
                  "name": "props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 489,
                        "name": "FormProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLFormElement"
                            },
                            "name": "HTMLFormElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            }
          ]
        },
        {
          "id": 2315,
          "name": "HashRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 624,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L624"
            }
          ],
          "signatures": [
            {
              "id": 2316,
              "name": "HashRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A "
                  },
                  {
                    "kind": "code",
                    "text": "`<Router>`"
                  },
                  {
                    "kind": "text",
                    "text": " for use in web browsers. Stores the location in the hash\nportion of the URL so it is not sent to the server."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 624,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L624"
                }
              ],
              "parameters": [
                {
                  "id": 2317,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 794,
                    "name": "HashRouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2318,
          "name": "HydratedRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/browser.tsx",
              "line": 223,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/browser.tsx#L223"
            }
          ],
          "signatures": [
            {
              "id": 2319,
              "name": "HydratedRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/browser.tsx",
                  "line": 223,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/browser.tsx#L223"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2320,
          "name": "Link",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "children": [
            {
              "id": 2321,
              "name": "$$typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 393,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "symbol"
              }
            },
            {
              "id": 2322,
              "name": "defaultProps",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 818,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 871,
                        "name": "LinkProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLAnchorElement"
                            },
                            "name": "HTMLAnchorElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 2323,
              "name": "displayName",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 397,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 2324,
              "name": "propTypes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 819,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WeakValidationMap"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 871,
                        "name": "LinkProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLAnchorElement"
                            },
                            "name": "HTMLAnchorElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                ],
                "name": "WeakValidationMap",
                "package": "@types/react",
                "qualifiedName": "React.WeakValidationMap"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [2321, 2322, 2323, 2324]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 873,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L873"
            }
          ],
          "signatures": [
            {
              "id": 2325,
              "name": "Link",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A progressively enhanced "
                  },
                  {
                    "kind": "code",
                    "text": "`<a href>`"
                  },
                  {
                    "kind": "text",
                    "text": " wrapper to enable navigation with client-side routing.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Link } from \"react-router\";\n\n<Link to=\"/dashboard\">Dashboard</Link>;\n\n<Link\n  to={{\n    pathname: \"/some/path\",\n    search: \"?query=string\",\n    hash: \"#hash\",\n  }}\n/>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 873,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L873"
                }
              ],
              "parameters": [
                {
                  "id": 2326,
                  "name": "props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 871,
                        "name": "LinkProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLAnchorElement"
                            },
                            "name": "HTMLAnchorElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            }
          ]
        },
        {
          "id": 2327,
          "name": "Links",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
              "line": 233,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L233"
            }
          ],
          "signatures": [
            {
              "id": 2328,
              "name": "Links",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders all of the "
                  },
                  {
                    "kind": "code",
                    "text": "`<link>`"
                  },
                  {
                    "kind": "text",
                    "text": " tags created by route module "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "LinksFunction",
                    "target": 1156
                  },
                  {
                    "kind": "text",
                    "text": " export. You should render it inside the "
                  },
                  {
                    "kind": "code",
                    "text": "`<head>`"
                  },
                  {
                    "kind": "text",
                    "text": " of your document.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Links } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head>\n        <Links />\n      </head>\n      <body></body>\n    </html>\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "line": 233,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L233"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2329,
          "name": "MemoryRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 168,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L168"
            }
          ],
          "signatures": [
            {
              "id": 2330,
              "name": "MemoryRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A "
                  },
                  {
                    "kind": "code",
                    "text": "`<Router>`"
                  },
                  {
                    "kind": "text",
                    "text": " that stores all entries in memory."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 168,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L168"
                }
              ],
              "parameters": [
                {
                  "id": 2331,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1170,
                    "name": "MemoryRouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactElement"
                },
                "name": "React.ReactElement",
                "package": "@types/react"
              }
            }
          ]
        },
        {
          "id": 2332,
          "name": "Meta",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
              "line": 427,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L427"
            }
          ],
          "signatures": [
            {
              "id": 2333,
              "name": "Meta",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders all the "
                  },
                  {
                    "kind": "code",
                    "text": "`<meta>`"
                  },
                  {
                    "kind": "text",
                    "text": " tags created by route module "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "MetaFunction",
                    "target": 1183,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " exports. You should render it inside the "
                  },
                  {
                    "kind": "code",
                    "text": "`<head>`"
                  },
                  {
                    "kind": "text",
                    "text": " of your HTML.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Meta } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head>\n        <Meta />\n      </head>\n    </html>\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "line": 427,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L427"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2334,
          "name": "NavLink",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "children": [
            {
              "id": 2335,
              "name": "$$typeof",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isReadonly": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 393,
                  "character": 17
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "symbol"
              }
            },
            {
              "id": 2336,
              "name": "defaultProps",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 818,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 1188,
                        "name": "NavLinkProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLAnchorElement"
                            },
                            "name": "HTMLAnchorElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            },
            {
              "id": 2337,
              "name": "displayName",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 397,
                  "character": 8
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 2338,
              "name": "propTypes",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isExternal": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "line": 819,
                  "character": 8
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.WeakValidationMap"
                },
                "typeArguments": [
                  {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 1188,
                        "name": "NavLinkProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLAnchorElement"
                            },
                            "name": "HTMLAnchorElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                ],
                "name": "WeakValidationMap",
                "package": "@types/react",
                "qualifiedName": "React.WeakValidationMap"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [2335, 2336, 2337, 2338]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1116,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1116"
            }
          ],
          "signatures": [
            {
              "id": 2339,
              "name": "NavLink",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Wraps "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Link>`",
                    "target": 2320,
                    "tsLinkText": "`<Link>`"
                  },
                  {
                    "kind": "text",
                    "text": " with additional props for styling active and pending states.\n\n- Automatically applies classes to the link based on its active and pending states, see "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "NavLinkProps.className",
                    "target": 1253,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ".\n- Automatically applies "
                  },
                  {
                    "kind": "code",
                    "text": "`aria-current=\"page\"`"
                  },
                  {
                    "kind": "text",
                    "text": " to the link when the link is active. See ["
                  },
                  {
                    "kind": "code",
                    "text": "`aria-current`"
                  },
                  {
                    "kind": "text",
                    "text": "](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current) on MDN.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { NavLink } from \"react-router\"\n<NavLink to=\"/message\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nStates are available through the className, style, and children render props. See "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "NavLinkRenderProps",
                    "target": 2147,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<NavLink\n  to=\"/messages\"\n  className={({ isActive, isPending }) =>\n    isPending ? \"pending\" : isActive ? \"active\" : \"\"\n  }\n>\n  Messages\n</NavLink>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1116,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1116"
                }
              ],
              "parameters": [
                {
                  "id": 2340,
                  "name": "props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 1188,
                        "name": "NavLinkProps",
                        "package": "react-router"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.RefAttributes"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                              "qualifiedName": "HTMLAnchorElement"
                            },
                            "name": "HTMLAnchorElement",
                            "package": "typescript"
                          }
                        ],
                        "name": "RefAttributes",
                        "package": "@types/react",
                        "qualifiedName": "React.RefAttributes"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactNode"
                },
                "name": "ReactNode",
                "package": "@types/react",
                "qualifiedName": "React.ReactNode"
              }
            }
          ]
        },
        {
          "id": 2341,
          "name": "Navigate",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 227,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L227"
            }
          ],
          "signatures": [
            {
              "id": 2342,
              "name": "Navigate",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A component-based version of "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useNavigate",
                    "target": 2655,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " to use in a ["
                  },
                  {
                    "kind": "code",
                    "text": "`React.Component\nClass`"
                  },
                  {
                    "kind": "text",
                    "text": "](https://reactjs.org/docs/react-component.html) where hooks are not\nable to be used.\n\nIt's recommended to avoid using this component in favor of "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useNavigate",
                    "target": 2655,
                    "tsLinkText": ""
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 227,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L227"
                }
              ],
              "parameters": [
                {
                  "id": 2343,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1497,
                    "name": "NavigateProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "literal",
                "value": null
              }
            }
          ]
        },
        {
          "id": 2344,
          "name": "Outlet",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 304,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L304"
            }
          ],
          "signatures": [
            {
              "id": 2345,
              "name": "Outlet",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders the matching child route of a parent route or nothing if no child route matches.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Outlet } from \"react-router\"\n\nexport default function SomeParent() {\n  return (\n    <div>\n      <h1>Parent Content</h1>\n      <Outlet />\n    </div>\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 304,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L304"
                }
              ],
              "parameters": [
                {
                  "id": 2346,
                  "name": "props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1546,
                    "name": "OutletProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2347,
          "name": "PrefetchPageLinks",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
              "line": 274,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L274"
            }
          ],
          "signatures": [
            {
              "id": 2348,
              "name": "PrefetchPageLinks",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders "
                  },
                  {
                    "kind": "code",
                    "text": "`<link rel=prefetch|modulepreload>`"
                  },
                  {
                    "kind": "text",
                    "text": " tags for modules and data of another page to enable an instant navigation to that page. "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Link prefetch>`",
                    "target": 1125
                  },
                  {
                    "kind": "text",
                    "text": " uses this internally, but you can render it to prefetch a page for any other reason.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { PrefetchPageLinks } from \"react-router\"\n\n<PrefetchPageLinks page=\"/absolute/path\" />\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nFor example, you may render one of this as the user types into a search field to prefetch search results before they click through to their selection."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "line": 274,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L274"
                }
              ],
              "parameters": [
                {
                  "id": 2349,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1592,
                    "name": "PrefetchPageDescriptor",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.JSX.Element"
                    },
                    "name": "Element",
                    "package": "@types/react",
                    "qualifiedName": "React.JSX.Element"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2350,
          "name": "Route",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 369,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L369"
            }
          ],
          "signatures": [
            {
              "id": 2351,
              "name": "Route",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Configures an element to render when a pattern matches the current location.\nIt must be rendered within a "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Routes",
                    "target": 2359,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " element. Note that these routes\ndo not participate in data loading, actions, code splitting, or any other\nroute module features."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 369,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L369"
                }
              ],
              "parameters": [
                {
                  "id": 2352,
                  "name": "_props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2205,
                    "name": "RouteProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2353,
          "name": "Router",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 398,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L398"
            }
          ],
          "signatures": [
            {
              "id": 2354,
              "name": "Router",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Provides location context for the rest of the app.\n\nNote: You usually won't render a "
                  },
                  {
                    "kind": "code",
                    "text": "`<Router>`"
                  },
                  {
                    "kind": "text",
                    "text": " directly. Instead, you'll render a\nrouter that is more specific to your environment such as a "
                  },
                  {
                    "kind": "code",
                    "text": "`<BrowserRouter>`"
                  },
                  {
                    "kind": "text",
                    "text": "\nin web browsers or a "
                  },
                  {
                    "kind": "code",
                    "text": "`<StaticRouter>`"
                  },
                  {
                    "kind": "text",
                    "text": " for server rendering."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 398,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L398"
                }
              ],
              "parameters": [
                {
                  "id": 2355,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1607,
                    "name": "RouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2356,
          "name": "RouterProvider",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 314,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L314"
            }
          ],
          "signatures": [
            {
              "id": 2357,
              "name": "RouterProvider",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Given a Remix Router instance, render the appropriate UI"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 314,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L314"
                }
              ],
              "parameters": [
                {
                  "id": 2358,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1614,
                    "name": "RouterProviderProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactElement"
                },
                "name": "React.ReactElement",
                "package": "@types/react"
              }
            }
          ]
        },
        {
          "id": 2359,
          "name": "Routes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 506,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L506"
            }
          ],
          "signatures": [
            {
              "id": 2360,
              "name": "Routes",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders a branch of "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Routes>`",
                    "target": 2350,
                    "tsLinkText": "`<Routes>`"
                  },
                  {
                    "kind": "text",
                    "text": " that best matches the current\nlocation. Note that these routes do not participate in data loading, actions,\ncode splitting, or any other route module features.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Routes, Route } from \"react-router\"\n\n<Routes>\n <Route index element={<StepOne />} />\n <Route path=\"step-2\" element={<StepTwo />} />\n <Route path=\"step-3\" element={<StepThree />}>\n</Routes>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 506,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L506"
                }
              ],
              "parameters": [
                {
                  "id": 2361,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1616,
                    "name": "RoutesProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2362,
          "name": "Scripts",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
              "line": 610,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L610"
            }
          ],
          "signatures": [
            {
              "id": 2363,
              "name": "Scripts",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders the client runtime of your app. It should be rendered inside the "
                  },
                  {
                    "kind": "code",
                    "text": "`<body>`"
                  },
                  {
                    "kind": "text",
                    "text": " of the document.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Scripts } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <head />\n      <body>\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nIf server rendering, you can omit "
                  },
                  {
                    "kind": "code",
                    "text": "`<Scripts/>`"
                  },
                  {
                    "kind": "text",
                    "text": " and the app will work as a traditional web app without JavaScript, relying solely on HTML and browser behaviors."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/components.tsx",
                  "line": 610,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/components.tsx#L610"
                }
              ],
              "parameters": [
                {
                  "id": 2364,
                  "name": "props",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2206,
                    "name": "ScriptsProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.JSX.Element"
                    },
                    "name": "Element",
                    "package": "@types/react",
                    "qualifiedName": "React.JSX.Element"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2365,
          "name": "ScrollRestoration",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "children": [
            {
              "id": 2366,
              "name": "displayName",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1543,
                  "character": 18,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1543"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [2366]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1475,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1475"
            },
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1543,
              "character": 0,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1543"
            }
          ],
          "signatures": [
            {
              "id": 2367,
              "name": "ScrollRestoration",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Emulates the browser's scroll restoration on location changes. Apps should only render one of these, right before the "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Scripts",
                    "target": 2362
                  },
                  {
                    "kind": "text",
                    "text": " component.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { ScrollRestoration } from \"react-router\";\n\nexport default function Root() {\n  return (\n    <html>\n      <body>\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>\n  );\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nThis component renders an inline "
                  },
                  {
                    "kind": "code",
                    "text": "`<script>`"
                  },
                  {
                    "kind": "text",
                    "text": " to prevent scroll flashing. The "
                  },
                  {
                    "kind": "code",
                    "text": "`nonce`"
                  },
                  {
                    "kind": "text",
                    "text": " prop will be passed down to the script tag to allow CSP nonce usage.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\n<ScrollRestoration nonce={cspNonce} />\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1475,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1475"
                }
              ],
              "parameters": [
                {
                  "id": 2368,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2207,
                    "name": "ScrollRestorationProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "literal",
                    "value": null
                  },
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.JSX.Element"
                    },
                    "name": "Element",
                    "package": "@types/react",
                    "qualifiedName": "React.JSX.Element"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2369,
          "name": "ServerRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
              "line": 25,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L25"
            }
          ],
          "signatures": [
            {
              "id": 2370,
              "name": "ServerRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The entry point for a Remix app when it is rendered on the server (in\n"
                  },
                  {
                    "kind": "code",
                    "text": "`app/entry.server.js`"
                  },
                  {
                    "kind": "text",
                    "text": "). This component is used to generate the HTML in the\nresponse from the server."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/server.tsx",
                  "line": 25,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/server.tsx#L25"
                }
              ],
              "parameters": [
                {
                  "id": 2371,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1640,
                    "name": "ServerRouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.ReactElement"
                },
                "name": "ReactElement",
                "package": "@types/react",
                "qualifiedName": "React.ReactElement"
              }
            }
          ]
        },
        {
          "id": 2372,
          "name": "StaticRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/server.tsx",
              "line": 48,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L48"
            }
          ],
          "signatures": [
            {
              "id": 2373,
              "name": "StaticRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A "
                  },
                  {
                    "kind": "code",
                    "text": "`<Router>`"
                  },
                  {
                    "kind": "text",
                    "text": " that may not navigate to any other location. This is useful\non the server where there is no stateful UI."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 48,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L48"
                }
              ],
              "parameters": [
                {
                  "id": 2374,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1763,
                    "name": "StaticRouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2375,
          "name": "StaticRouterProvider",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/server.tsx",
              "line": 92,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L92"
            }
          ],
          "signatures": [
            {
              "id": 2376,
              "name": "StaticRouterProvider",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A Data Router that may not navigate to any other location. This is useful\non the server where there is no stateful UI."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 92,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L92"
                }
              ],
              "parameters": [
                {
                  "id": 2377,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1767,
                    "name": "StaticRouterProviderProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2378,
          "name": "UNSAFE_convertRoutesToDataRoutes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 447,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L447"
            }
          ],
          "signatures": [
            {
              "id": 2379,
              "name": "UNSAFE_convertRoutesToDataRoutes",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 447,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L447"
                }
              ],
              "parameters": [
                {
                  "id": 2380,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 1939,
                      "name": "AgnosticRouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2381,
                  "name": "mapRouteProperties",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/utils.ts",
                      "qualifiedName": "MapRoutePropertiesFunction"
                    },
                    "name": "MapRoutePropertiesFunction",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2382,
                  "name": "parentPath",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  },
                  "defaultValue": "[]"
                },
                {
                  "id": 2383,
                  "name": "manifest",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/utils.ts",
                      "qualifiedName": "RouteManifest"
                    },
                    "name": "RouteManifest",
                    "package": "react-router"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 1930,
                  "name": "AgnosticDataRouteObject",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 2384,
          "name": "UNSAFE_decodeViaTurboStream",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
              "line": 326,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L326"
            }
          ],
          "signatures": [
            {
              "id": 2385,
              "name": "UNSAFE_decodeViaTurboStream",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
                  "line": 326,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/single-fetch.tsx#L326"
                }
              ],
              "parameters": [
                {
                  "id": 2386,
                  "name": "body",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "ReadableStream"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Uint8Array"
                        },
                        "name": "Uint8Array",
                        "package": "typescript"
                      }
                    ],
                    "name": "ReadableStream",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2387,
                  "name": "global",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "query",
                        "queryType": {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "",
                            "qualifiedName": "globalThis"
                          },
                          "name": "globalThis",
                          "preferValues": true
                        }
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "Window"
                        },
                        "name": "Window",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 2388,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2389,
                          "name": "done",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
                              "line": 6,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 2390,
                          "name": "value",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isExternal": true
                          },
                          "sources": [
                            {
                              "fileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
                              "line": 7,
                              "character": 4
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "unknown"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2389, 2390]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
                          "line": 5,
                          "character": 12
                        }
                      ]
                    }
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2391,
          "name": "UNSAFE_mapRouteProperties",
          "variant": "declaration",
          "kind": 64,
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 59,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L59"
            }
          ],
          "signatures": [
            {
              "id": 2392,
              "name": "UNSAFE_mapRouteProperties",
              "variant": "signature",
              "kind": 4096,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 59,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L59"
                }
              ],
              "parameters": [
                {
                  "id": 2393,
                  "name": "route",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2204,
                    "name": "RouteObject",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "intersection",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Partial"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2204,
                        "name": "RouteObject",
                        "package": "react-router"
                      }
                    ],
                    "name": "Partial",
                    "package": "typescript"
                  },
                  {
                    "type": "reflection",
                    "declaration": {
                      "id": 2394,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2395,
                          "name": "hasErrorBoundary",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 60,
                              "character": 40,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L60"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2395]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/components.tsx",
                          "line": 60,
                          "character": 38,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L60"
                        }
                      ]
                    }
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2396,
          "name": "UNSAFE_useRouteId",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 969,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L969"
            }
          ],
          "signatures": [
            {
              "id": 2397,
              "name": "UNSAFE_useRouteId",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the ID for the nearest contextual route"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 969,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L969"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 2398,
          "name": "UNSAFE_useRoutesImpl",
          "variant": "declaration",
          "kind": 64,
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 434,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L434"
            }
          ],
          "signatures": [
            {
              "id": 2399,
              "name": "UNSAFE_useRoutesImpl",
              "variant": "signature",
              "kind": 4096,
              "flags": {
                "isPrivate": true
              },
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Internal implementation with accept optional param for RouterProvider usage"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 434,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L434"
                }
              ],
              "parameters": [
                {
                  "id": 2400,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2401,
                  "name": "locationArg",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Partial"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 1163,
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            ],
                            "name": "Location",
                            "package": "react-router"
                          }
                        ],
                        "name": "Partial",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 2402,
                  "name": "dataRouterState",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/router.ts",
                      "qualifiedName": "RouterState"
                    },
                    "name": "RouterState",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2403,
                  "name": "future",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/router/router.ts",
                      "qualifiedName": "FutureConfig"
                    },
                    "name": "FutureConfig",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2404,
          "name": "UNSAFE_useScrollRestoration",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 2265,
              "character": 9,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2265"
            }
          ],
          "signatures": [
            {
              "id": 2405,
              "name": "UNSAFE_useScrollRestoration",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "When rendered inside a RouterProvider, will restore scroll positions on navigations"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 2265,
                  "character": 9,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2265"
                }
              ],
              "parameters": [
                {
                  "id": 2406,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2407,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2408,
                          "name": "getKey",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2269,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2269"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 775,
                            "name": "GetScrollRestorationKeyFunction",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2409,
                          "name": "storageKey",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2270,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2270"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2408, 2409]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2268,
                          "character": 3,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2268"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2410,
          "name": "createBrowserRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 141,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L141"
            }
          ],
          "signatures": [
            {
              "id": 2411,
              "name": "createBrowserRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 141,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L141"
                }
              ],
              "parameters": [
                {
                  "id": 2412,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2413,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
                      "qualifiedName": "DOMRouterOpts"
                    },
                    "name": "DOMRouterOpts",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "Router"
                },
                "name": "RemixRouter",
                "package": "react-router",
                "qualifiedName": "Router"
              }
            }
          ]
        },
        {
          "id": 2414,
          "name": "createCookieFactory",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 80,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L80"
            }
          ],
          "signatures": [
            {
              "id": 2415,
              "name": "createCookieFactory",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a logical container for managing a browser cookie from the server."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/cookies#createcookie"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 81,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L81"
                }
              ],
              "parameters": [
                {
                  "id": 2416,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2417,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2418,
                          "name": "sign",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                              "line": 85,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L85"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2220,
                            "name": "SignFunction",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2419,
                          "name": "unsign",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                              "line": 86,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L86"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2276,
                            "name": "UnsignFunction",
                            "package": "react-router"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2418, 2419]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                          "line": 84,
                          "character": 5,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L84"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1972,
                "name": "CreateCookieFunction",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2420,
          "name": "createCookieSessionStorageFactory",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
              "line": 36,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L36"
            }
          ],
          "signatures": [
            {
              "id": 2421,
              "name": "createCookieSessionStorageFactory",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates and returns a SessionStorage object that stores all session data\ndirectly in the session cookie itself.\n\nThis has the advantage that no database or other backend services are\nneeded, and can help to simplify some load-balanced scenarios. However, it\nalso has the limitation that serialized session data may not exceed the\nbrowser's maximum cookie size. Trade-offs!"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/sessions#createcookiesessionstorage"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
                  "line": 37,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/cookieStorage.ts#L37"
                }
              ],
              "parameters": [
                {
                  "id": 2422,
                  "name": "createCookie",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1972,
                    "name": "CreateCookieFunction",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1977,
                "name": "CreateCookieSessionStorageFunction",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2423,
          "name": "createHashRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 161,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L161"
            }
          ],
          "signatures": [
            {
              "id": 2424,
              "name": "createHashRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 161,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L161"
                }
              ],
              "parameters": [
                {
                  "id": 2425,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2426,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
                      "qualifiedName": "DOMRouterOpts"
                    },
                    "name": "DOMRouterOpts",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "Router"
                },
                "name": "RemixRouter",
                "package": "react-router",
                "qualifiedName": "Router"
              }
            }
          ]
        },
        {
          "id": 2427,
          "name": "createMemoryRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 126,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L126"
            }
          ],
          "signatures": [
            {
              "id": 2428,
              "name": "createMemoryRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 126,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L126"
                }
              ],
              "parameters": [
                {
                  "id": 2429,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2430,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2431,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2432,
                          "name": "basename",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 129,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L129"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 2433,
                          "name": "future",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 130,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L130"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Partial"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                                  "qualifiedName": "FutureConfig"
                                },
                                "name": "FutureConfig",
                                "package": "react-router"
                              }
                            ],
                            "name": "Partial",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 2434,
                          "name": "hydrationData",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 131,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L131"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Partial"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Pick"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router/lib/router/router.ts",
                                      "qualifiedName": "RouterState"
                                    },
                                    "name": "RouterState",
                                    "package": "react-router"
                                  },
                                  {
                                    "type": "union",
                                    "types": [
                                      {
                                        "type": "literal",
                                        "value": "loaderData"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "actionData"
                                      },
                                      {
                                        "type": "literal",
                                        "value": "errors"
                                      }
                                    ]
                                  }
                                ],
                                "name": "Pick",
                                "package": "typescript"
                              }
                            ],
                            "name": "Partial",
                            "package": "typescript"
                          }
                        },
                        {
                          "id": 2435,
                          "name": "initialEntries",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 132,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L132"
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "reference",
                              "target": 2084,
                              "name": "InitialEntry",
                              "package": "react-router"
                            }
                          }
                        },
                        {
                          "id": 2436,
                          "name": "initialIndex",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 133,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L133"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        },
                        {
                          "id": 2437,
                          "name": "unstable_dataStrategy",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 134,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L134"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 1883,
                            "name": "DataStrategyFunction",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2438,
                          "name": "unstable_patchRoutesOnMiss",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/components.tsx",
                              "line": 135,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L135"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 1912,
                            "name": "unstable_PatchRoutesOnMissFunction",
                            "package": "react-router"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2432, 2433, 2434, 2435, 2436, 2437, 2438]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/components.tsx",
                          "line": 128,
                          "character": 9,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L128"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "Router"
                },
                "name": "RemixRouter",
                "package": "react-router",
                "qualifiedName": "Router"
              }
            }
          ]
        },
        {
          "id": 2439,
          "name": "createMemorySessionStorageFactory",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
              "line": 33,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L33"
            }
          ],
          "signatures": [
            {
              "id": 2440,
              "name": "createMemorySessionStorageFactory",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates and returns a simple in-memory SessionStorage object, mostly useful\nfor testing and as a reference implementation.\n\nNote: This storage does not scale beyond a single process, so it is not\nsuitable for most production scenarios."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/sessions#creatememorysessionstorage"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
                  "line": 34,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions/memoryStorage.ts#L34"
                }
              ],
              "parameters": [
                {
                  "id": 2441,
                  "name": "createSessionStorage",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2003,
                    "name": "CreateSessionStorageFunction",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1983,
                "name": "CreateMemorySessionStorageFunction",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2442,
          "name": "createPath",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 556,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L556"
            }
          ],
          "signatures": [
            {
              "id": 2443,
              "name": "createPath",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a string URL path from the given pathname, search, and hash components."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 556,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L556"
                }
              ],
              "parameters": [
                {
                  "id": 2444,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Partial"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 1556,
                        "name": "Path",
                        "package": "react-router"
                      }
                    ],
                    "name": "Partial",
                    "package": "typescript"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 2445,
          "name": "createRequestHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/server.ts",
              "line": 83,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L83"
            }
          ],
          "signatures": [
            {
              "id": 2446,
              "name": "createRequestHandler",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/server.ts",
                  "line": 83,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L83"
                }
              ],
              "parameters": [
                {
                  "id": 2447,
                  "name": "build",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": 1624,
                        "name": "ServerBuild",
                        "package": "react-router"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 2448,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/server-runtime/server.ts",
                              "line": 52,
                              "character": 24,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L52"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 2449,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "packages/react-router/lib/server-runtime/server.ts",
                                  "line": 52,
                                  "character": 24,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/server.ts#L52"
                                }
                              ],
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "reference",
                                    "target": 1624,
                                    "name": "ServerBuild",
                                    "package": "react-router"
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Promise"
                                    },
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": 1624,
                                        "name": "ServerBuild",
                                        "package": "react-router"
                                      }
                                    ],
                                    "name": "Promise",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 2450,
                  "name": "mode",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 2199,
                "name": "RequestHandler",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2451,
          "name": "createRoutesFromChildren",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 802,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L802"
            }
          ],
          "signatures": [
            {
              "id": 2452,
              "name": "createRoutesFromChildren",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a route config from a React \"children\" object, which is usually\neither a "
                  },
                  {
                    "kind": "code",
                    "text": "`<Route>`"
                  },
                  {
                    "kind": "text",
                    "text": " element or an array of them. Used internally by\n"
                  },
                  {
                    "kind": "code",
                    "text": "`<Routes>`"
                  },
                  {
                    "kind": "text",
                    "text": " to create a route config from its children."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 802,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L802"
                }
              ],
              "parameters": [
                {
                  "id": 2453,
                  "name": "children",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactNode"
                    },
                    "name": "ReactNode",
                    "package": "@types/react",
                    "qualifiedName": "React.ReactNode"
                  }
                },
                {
                  "id": 2454,
                  "name": "parentPath",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "number"
                    }
                  },
                  "defaultValue": "[]"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 2204,
                  "name": "RouteObject",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 2455,
          "name": "createRoutesStub",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
              "line": 93,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L93"
            }
          ],
          "signatures": [
            {
              "id": 2456,
              "name": "createRoutesStub",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                  "line": 93,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L93"
                }
              ],
              "parameters": [
                {
                  "id": 2457,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                        "qualifiedName": "StubRouteObject"
                      },
                      "name": "StubRouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2458,
                  "name": "context",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                      "qualifiedName": "AppLoadContext"
                    },
                    "name": "AppLoadContext",
                    "package": "react-router"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 2459,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                      "line": 97,
                      "character": 18,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L97"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 2460,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
                          "line": 97,
                          "character": 18,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/ssr/routes-test-stub.tsx#L97"
                        }
                      ],
                      "parameters": [
                        {
                          "id": 2461,
                          "name": "__namedParameters",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": 1619,
                            "name": "RoutesTestStubProps",
                            "package": "react-router"
                          }
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                          "qualifiedName": "React.JSX.Element"
                        },
                        "name": "Element",
                        "package": "@types/react",
                        "qualifiedName": "React.JSX.Element"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 2462,
          "name": "createSearchParams",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/dom.ts",
              "line": 81,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L81"
            }
          ],
          "signatures": [
            {
              "id": 2463,
              "name": "createSearchParams",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a URLSearchParams object using the given initializer.\n\nThis is identical to "
                  },
                  {
                    "kind": "code",
                    "text": "`new URLSearchParams(init)`"
                  },
                  {
                    "kind": "text",
                    "text": " except it also\nsupports arrays as values in the object form of the initializer\ninstead of just strings. This is convenient when you need multiple\nvalues for a given key, but don't want to use an array initializer.\n\nFor example, instead of:\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nlet searchParams = new URLSearchParams([\n  ['sort', 'name'],\n  ['sort', 'price']\n]);\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\nyou can do:\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```\nlet searchParams = createSearchParams({\n  sort: ['name', 'price']\n});\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/dom.ts",
                  "line": 81,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/dom.ts#L81"
                }
              ],
              "parameters": [
                {
                  "id": 2464,
                  "name": "init",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2275,
                    "name": "URLSearchParamsInit",
                    "package": "react-router"
                  },
                  "defaultValue": "\"\""
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "URLSearchParams"
                },
                "name": "URLSearchParams",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2465,
          "name": "createSession",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 95,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L95"
            }
          ],
          "signatures": [
            {
              "id": 2466,
              "name": "createSession",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a new Session object.\n\nNote: This function is typically not invoked directly by application code.\nInstead, use a "
                  },
                  {
                    "kind": "code",
                    "text": "`SessionStorage`"
                  },
                  {
                    "kind": "text",
                    "text": " object's "
                  },
                  {
                    "kind": "code",
                    "text": "`getSession`"
                  },
                  {
                    "kind": "text",
                    "text": " method."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/sessions#createsession"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 95,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L95"
                }
              ],
              "typeParameter": [
                {
                  "id": 2467,
                  "name": "Data",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 1670,
                    "name": "SessionData",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2468,
                  "name": "FlashData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 2467,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2469,
                  "name": "initialData",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": 2467,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                },
                {
                  "id": 2470,
                  "name": "id",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1645,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2467,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  },
                  {
                    "type": "reference",
                    "target": 2468,
                    "name": "FlashData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "Session",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2471,
          "name": "createSessionStorageFactory",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 263,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L263"
            }
          ],
          "signatures": [
            {
              "id": 2472,
              "name": "createSessionStorageFactory",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a SessionStorage object using a SessionIdStorageStrategy.\n\nNote: This is a low-level API that should only be used if none of the\nexisting session storage options meet your requirements."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/sessions#createsessionstorage"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 264,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L264"
                }
              ],
              "parameters": [
                {
                  "id": 2473,
                  "name": "createCookie",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1972,
                    "name": "CreateCookieFunction",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 2003,
                "name": "CreateSessionStorageFunction",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2474,
          "name": "createStaticHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/server.tsx",
              "line": 257,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L257"
            }
          ],
          "signatures": [
            {
              "id": 2475,
              "name": "createStaticHandler",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 257,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L257"
                }
              ],
              "parameters": [
                {
                  "id": 2476,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2477,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
                      "qualifiedName": "CreateStaticHandlerOptions"
                    },
                    "name": "CreateStaticHandlerOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1733,
                "name": "StaticHandler",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2478,
          "name": "createStaticRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/server.tsx",
              "line": 270,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L270"
            }
          ],
          "signatures": [
            {
              "id": 2479,
              "name": "createStaticRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/server.tsx",
                  "line": 270,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L270"
                }
              ],
              "parameters": [
                {
                  "id": 2480,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2481,
                  "name": "context",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1751,
                    "name": "StaticHandlerContext",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2482,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2483,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2484,
                          "name": "future",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/server.tsx",
                              "line": 274,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L274"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Partial"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                                  "qualifiedName": "FutureConfig"
                                },
                                "name": "FutureConfig",
                                "package": "react-router"
                              }
                            ],
                            "name": "Partial",
                            "package": "typescript"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2484]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/server.tsx",
                          "line": 273,
                          "character": 8,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/server.tsx#L273"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router/lib/router/router.ts",
                  "qualifiedName": "Router"
                },
                "name": "RemixRouter",
                "package": "react-router",
                "qualifiedName": "Router"
              }
            }
          ]
        },
        {
          "id": 2485,
          "name": "defer",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1572,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1572"
            }
          ],
          "signatures": [
            {
              "id": 2486,
              "name": "defer",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1572,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1572"
                }
              ],
              "parameters": [
                {
                  "id": 2487,
                  "name": "data",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Record"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "intrinsic",
                        "name": "unknown"
                      }
                    ],
                    "name": "Record",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2488,
                  "name": "init",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "ResponseInit"
                        },
                        "name": "ResponseInit",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 48,
                "name": "DeferredData",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2489,
          "name": "defineRoute",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/define-route.ts",
              "line": 181,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/define-route.ts#L181"
            }
          ],
          "signatures": [
            {
              "id": 2490,
              "name": "defineRoute",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/define-route.ts",
                  "line": 181,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/define-route.ts#L181"
                }
              ],
              "typeParameter": [
                {
                  "id": 2491,
                  "name": "T",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {}
                },
                {
                  "id": 2492,
                  "name": "Param",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {
                    "isConst": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2493,
                  "name": "ClientLoaderHydrate",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                },
                {
                  "id": 2494,
                  "name": "HydrateFallback",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                          "qualifiedName": "HydrateFallbackComponent"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 2492,
                            "name": "Param",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "HydrateFallbackComponent",
                        "package": "react-router"
                      }
                    ]
                  }
                },
                {
                  "id": 2495,
                  "name": "ServerLoaderData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                          "qualifiedName": "Data"
                        },
                        "name": "Data",
                        "package": "react-router"
                      }
                    ]
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                },
                {
                  "id": 2496,
                  "name": "ClientLoaderData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                },
                {
                  "id": 2497,
                  "name": "ServerActionData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "undefined"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                          "qualifiedName": "Data"
                        },
                        "name": "Data",
                        "package": "react-router"
                      }
                    ]
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                },
                {
                  "id": 2498,
                  "name": "ClientActionData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "undefined"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2499,
                  "name": "route",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": 2491,
                        "name": "T",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/define-route.ts",
                          "qualifiedName": "Route"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 2492,
                            "name": "Param",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2493,
                            "name": "ClientLoaderHydrate",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2494,
                            "name": "HydrateFallback",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2495,
                            "name": "ServerLoaderData",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2496,
                            "name": "ClientLoaderData",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2497,
                            "name": "ServerActionData",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          },
                          {
                            "type": "reference",
                            "target": 2498,
                            "name": "ClientActionData",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "Route",
                        "package": "react-router"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 2491,
                "name": "T",
                "package": "react-router",
                "refersToTypeParameter": true
              }
            }
          ]
        },
        {
          "id": 2500,
          "name": "generatePath",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 855,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L855"
            }
          ],
          "signatures": [
            {
              "id": 2501,
              "name": "generatePath",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns a path with params interpolated."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 855,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L855"
                }
              ],
              "typeParameter": [
                {
                  "id": 2502,
                  "name": "Path",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2503,
                  "name": "originalPath",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2502,
                    "name": "Path",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                },
                {
                  "id": 2504,
                  "name": "params",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "mapped",
                    "parameter": "key",
                    "parameterType": {
                      "type": "intrinsic",
                      "name": "string"
                    },
                    "templateType": {
                      "type": "union",
                      "types": [
                        {
                          "type": "literal",
                          "value": null
                        },
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    }
                  },
                  "defaultValue": "..."
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 2505,
          "name": "getStaticContextFromError",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/router.ts",
              "line": 4028,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L4028"
            }
          ],
          "signatures": [
            {
              "id": 2506,
              "name": "getStaticContextFromError",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Given an existing StaticHandlerContext and an error thrown at render time,\nprovide an updated StaticHandlerContext suitable for a second SSR render"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/router.ts",
                  "line": 4028,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/router.ts#L4028"
                }
              ],
              "parameters": [
                {
                  "id": 2507,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 1930,
                      "name": "AgnosticDataRouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2508,
                  "name": "context",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1751,
                    "name": "StaticHandlerContext",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2509,
                  "name": "error",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1751,
                "name": "StaticHandlerContext",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2510,
          "name": "isCookie",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
              "line": 139,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L139"
            }
          ],
          "signatures": [
            {
              "id": 2511,
              "name": "isCookie",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns true if an object is a Remix cookie container."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/cookies#iscookie"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/cookies.ts",
                  "line": 139,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/cookies.ts#L139"
                }
              ],
              "parameters": [
                {
                  "id": 2512,
                  "name": "object",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "object",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "target": 147,
                  "name": "Cookie",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 2513,
          "name": "isRouteErrorResponse",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1664,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1664"
            }
          ],
          "signatures": [
            {
              "id": 2514,
              "name": "isRouteErrorResponse",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Check if the given error is an ErrorResponse generated from a 4xx/5xx\nResponse thrown from an action/loader"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1664,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1664"
                }
              ],
              "parameters": [
                {
                  "id": 2515,
                  "name": "error",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "error",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "target": 2016,
                  "name": "ErrorResponse",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 2516,
          "name": "isSession",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
              "line": 151,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L151"
            }
          ],
          "signatures": [
            {
              "id": 2517,
              "name": "isSession",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns true if an object is a Remix session."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/sessions#issession"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/sessions.ts",
                  "line": 151,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/sessions.ts#L151"
                }
              ],
              "parameters": [
                {
                  "id": 2518,
                  "name": "object",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "type": {
                "type": "predicate",
                "name": "object",
                "asserts": false,
                "targetType": {
                  "type": "reference",
                  "target": 1645,
                  "typeArguments": [
                    {
                      "type": "reference",
                      "target": 1670,
                      "name": "SessionData",
                      "package": "react-router"
                    },
                    {
                      "type": "reference",
                      "target": 1670,
                      "name": "SessionData",
                      "package": "react-router"
                    }
                  ],
                  "name": "Session",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 2519,
          "name": "json",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1354,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1354"
            }
          ],
          "signatures": [
            {
              "id": 2520,
              "name": "json",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This is a shortcut for creating "
                  },
                  {
                    "kind": "code",
                    "text": "`application/json`"
                  },
                  {
                    "kind": "text",
                    "text": " responses. Converts "
                  },
                  {
                    "kind": "code",
                    "text": "`data`"
                  },
                  {
                    "kind": "text",
                    "text": "\nto JSON and sets the "
                  },
                  {
                    "kind": "code",
                    "text": "`Content-Type`"
                  },
                  {
                    "kind": "text",
                    "text": " header."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1354,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1354"
                }
              ],
              "typeParameter": [
                {
                  "id": 2521,
                  "name": "Data",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {}
                }
              ],
              "parameters": [
                {
                  "id": 2522,
                  "name": "data",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2096,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                },
                {
                  "id": 2523,
                  "name": "init",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "ResponseInit"
                        },
                        "name": "ResponseInit",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Response"
                },
                "name": "Response",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2524,
          "name": "matchPath",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 961,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L961"
            }
          ],
          "signatures": [
            {
              "id": 2525,
              "name": "matchPath",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Performs pattern matching on a URL pathname and returns information about\nthe match."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 961,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L961"
                }
              ],
              "typeParameter": [
                {
                  "id": 2526,
                  "name": "ParamKey",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2527,
                  "name": "Path",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2528,
                  "name": "pattern",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": 2527,
                        "name": "Path",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 1566,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 2527,
                            "name": "Path",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "PathPattern",
                        "package": "react-router"
                      }
                    ]
                  }
                },
                {
                  "id": 2529,
                  "name": "pathname",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": 1560,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2526,
                        "name": "ParamKey",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "PathMatch",
                    "package": "react-router"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2530,
          "name": "matchRoutes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 502,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L502"
            }
          ],
          "signatures": [
            {
              "id": 2531,
              "name": "matchRoutes",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Matches the given routes to a location and returns the match data."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 502,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L502"
                }
              ],
              "typeParameter": [
                {
                  "id": 2532,
                  "name": "RouteObjectType",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1939,
                    "name": "AgnosticRouteObject",
                    "package": "react-router"
                  },
                  "default": {
                    "type": "reference",
                    "target": 1939,
                    "name": "AgnosticRouteObject",
                    "package": "react-router"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2533,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2532,
                      "name": "RouteObjectType",
                      "package": "react-router",
                      "refersToTypeParameter": true
                    }
                  }
                },
                {
                  "id": 2534,
                  "name": "locationArg",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Partial"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 1163,
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            ],
                            "name": "Location",
                            "package": "react-router"
                          }
                        ],
                        "name": "Partial",
                        "package": "typescript"
                      }
                    ]
                  }
                },
                {
                  "id": 2535,
                  "name": "basename",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"/\""
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 129,
                      "typeArguments": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        },
                        {
                          "type": "reference",
                          "target": 2532,
                          "name": "RouteObjectType",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "AgnosticRouteMatch",
                      "package": "react-router"
                    }
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2536,
          "name": "parsePath",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/history.ts",
              "line": 573,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L573"
            }
          ],
          "signatures": [
            {
              "id": 2537,
              "name": "parsePath",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Parses a string URL path into its separate pathname, search, and hash components."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/history.ts",
                  "line": 573,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/history.ts#L573"
                }
              ],
              "parameters": [
                {
                  "id": 2538,
                  "name": "path",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Partial"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 1556,
                    "name": "Path",
                    "package": "react-router"
                  }
                ],
                "name": "Partial",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2539,
          "name": "redirect",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1589,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1589"
            }
          ],
          "signatures": [
            {
              "id": 2540,
              "name": "redirect",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A redirect response. Sets the status code and the "
                  },
                  {
                    "kind": "code",
                    "text": "`Location`"
                  },
                  {
                    "kind": "text",
                    "text": " header.\nDefaults to \"302 Found\"."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1589,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1589"
                }
              ],
              "parameters": [
                {
                  "id": 2541,
                  "name": "url",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2542,
                  "name": "init",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "ResponseInit"
                        },
                        "name": "ResponseInit",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Response"
                },
                "name": "Response",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2543,
          "name": "redirectDocument",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1613,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1613"
            }
          ],
          "signatures": [
            {
              "id": 2544,
              "name": "redirectDocument",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A redirect response that will force a document reload to the new location.\nSets the status code and the "
                  },
                  {
                    "kind": "code",
                    "text": "`Location`"
                  },
                  {
                    "kind": "text",
                    "text": " header.\nDefaults to \"302 Found\"."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1613,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1613"
                }
              ],
              "parameters": [
                {
                  "id": 2545,
                  "name": "url",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2546,
                  "name": "init",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "number"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                          "qualifiedName": "ResponseInit"
                        },
                        "name": "ResponseInit",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "Response"
                },
                "name": "Response",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2547,
          "name": "renderMatches",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/components.tsx",
              "line": 878,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L878"
            }
          ],
          "signatures": [
            {
              "id": 2548,
              "name": "renderMatches",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Renders the result of "
                  },
                  {
                    "kind": "code",
                    "text": "`matchRoutes()`"
                  },
                  {
                    "kind": "text",
                    "text": " into a React element."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/components.tsx",
                  "line": 878,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/components.tsx#L878"
                }
              ],
              "parameters": [
                {
                  "id": 2549,
                  "name": "matches",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "literal",
                        "value": null
                      },
                      {
                        "type": "array",
                        "elementType": {
                          "type": "reference",
                          "target": 1600,
                          "typeArguments": [
                            {
                              "type": "intrinsic",
                              "name": "string"
                            },
                            {
                              "type": "reference",
                              "target": 2204,
                              "name": "RouteObject",
                              "package": "react-router"
                            }
                          ],
                          "name": "RouteMatch",
                          "package": "react-router"
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2550,
          "name": "resolvePath",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1121,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1121"
            }
          ],
          "signatures": [
            {
              "id": 2551,
              "name": "resolvePath",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns a resolved path object relative to the given pathname."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1121,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1121"
                }
              ],
              "parameters": [
                {
                  "id": 2552,
                  "name": "to",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2248,
                    "name": "To",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2553,
                  "name": "fromPathname",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  "defaultValue": "\"/\""
                }
              ],
              "type": {
                "type": "reference",
                "target": 1556,
                "name": "Path",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2554,
          "name": "stripBasename",
          "variant": "declaration",
          "kind": 64,
          "flags": {
            "isPrivate": true
          },
          "sources": [
            {
              "fileName": "packages/react-router/lib/router/utils.ts",
              "line": 1092,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1092"
            }
          ],
          "signatures": [
            {
              "id": 2555,
              "name": "stripBasename",
              "variant": "signature",
              "kind": 4096,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/router/utils.ts",
                  "line": 1092,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/router/utils.ts#L1092"
                }
              ],
              "parameters": [
                {
                  "id": 2556,
                  "name": "pathname",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2557,
                  "name": "basename",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2558,
          "name": "unstable_HistoryRouter",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "children": [
            {
              "id": 2559,
              "name": "displayName",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 696,
                  "character": 14,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L696"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ],
          "groups": [
            {
              "title": "Properties",
              "children": [2559]
            }
          ],
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 672,
              "character": 9,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L672"
            },
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 696,
              "character": 0,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L696"
            }
          ],
          "signatures": [
            {
              "id": 2560,
              "name": "unstable_HistoryRouter",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "A "
                  },
                  {
                    "kind": "code",
                    "text": "`<Router>`"
                  },
                  {
                    "kind": "text",
                    "text": " that accepts a pre-instantiated history object. It's important\nto note that using your own history object is highly discouraged and may add\ntwo versions of the history library to your bundles unless you use the same\nversion of the history library that React Router uses internally."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 672,
                  "character": 9,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L672"
                }
              ],
              "parameters": [
                {
                  "id": 2561,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 801,
                    "name": "HistoryRouterProps",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                  "qualifiedName": "React.JSX.Element"
                },
                "name": "Element",
                "package": "@types/react",
                "qualifiedName": "React.JSX.Element"
              }
            }
          ]
        },
        {
          "id": 2562,
          "name": "unstable_composeUploadHandlers",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/formData.ts",
              "line": 15,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L15"
            }
          ],
          "signatures": [
            {
              "id": 2563,
              "name": "unstable_composeUploadHandlers",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                  "line": 15,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L15"
                }
              ],
              "parameters": [
                {
                  "id": 2564,
                  "name": "handlers",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isRest": true
                  },
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2281,
                      "name": "UploadHandler",
                      "package": "react-router"
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 2281,
                "name": "UploadHandler",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2565,
          "name": "unstable_createMemoryUploadHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
              "line": 25,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L25"
            }
          ],
          "signatures": [
            {
              "id": 2566,
              "name": "unstable_createMemoryUploadHandler",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
                  "line": 25,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts#L25"
                }
              ],
              "parameters": [
                {
                  "id": 2567,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2116,
                    "name": "MemoryUploadHandlerOptions",
                    "package": "react-router"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2281,
                "name": "UploadHandler",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2568,
          "name": "unstable_parseMultipartFormData",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/formData.ts",
              "line": 36,
              "character": 22,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L36"
            }
          ],
          "signatures": [
            {
              "id": 2569,
              "name": "unstable_parseMultipartFormData",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Allows you to handle multipart forms (file uploads) for your app.\n\nTODO: Update this comment"
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/parse-multipart-form-data"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/formData.ts",
                  "line": 36,
                  "character": 22,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/formData.ts#L36"
                }
              ],
              "parameters": [
                {
                  "id": 2570,
                  "name": "request",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Request"
                    },
                    "name": "Request",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2571,
                  "name": "uploadHandler",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2281,
                    "name": "UploadHandler",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "FormData"
                    },
                    "name": "FormData",
                    "package": "typescript"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2572,
          "name": "unstable_setDevServerHooks",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/server-runtime/dev.ts",
              "line": 13,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/dev.ts#L13"
            }
          ],
          "signatures": [
            {
              "id": 2573,
              "name": "unstable_setDevServerHooks",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "packages/react-router/lib/server-runtime/dev.ts",
                  "line": 13,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/server-runtime/dev.ts#L13"
                }
              ],
              "parameters": [
                {
                  "id": 2574,
                  "name": "devServerHooks",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
                      "qualifiedName": "DevServerHooks"
                    },
                    "name": "DevServerHooks",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2575,
          "name": "unstable_usePrompt",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 2455,
              "character": 9,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2455"
            }
          ],
          "signatures": [
            {
              "id": 2576,
              "name": "unstable_usePrompt",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Wrapper around useBlocker to show a window.confirm prompt to users instead of building a custom UI with "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useBlocker",
                    "target": 2602,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ".\n\nThe "
                  },
                  {
                    "kind": "code",
                    "text": "`unstable_`"
                  },
                  {
                    "kind": "text",
                    "text": " flag will not be removed because this technique has a lot of rough edges and behaves very differently (and incorrectly sometimes) across browsers if users click addition back/forward navigations while the confirmation is open.  Use at your own risk.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nfunction ImportantForm() {\n  let [value, setValue] = React.useState(\"\");\n\n  // Block navigating elsewhere when data has been entered into the input\n  unstable_usePrompt({\n    message: \"Are you sure?\",\n    when: ({ currentLocation, nextLocation }) =>\n      value !== \"\" &&\n      currentLocation.pathname !== nextLocation.pathname,\n  });\n\n  return (\n    <Form method=\"post\">\n      <label>\n        Enter some important data:\n        <input\n          name=\"data\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </label>\n      <button type=\"submit\">Save</button>\n    </Form>\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 2455,
                  "character": 9,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2455"
                }
              ],
              "parameters": [
                {
                  "id": 2577,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2578,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2579,
                          "name": "message",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2460,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2460"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 2580,
                          "name": "when",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2459,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2459"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "boolean"
                              },
                              {
                                "type": "reference",
                                "target": 1941,
                                "name": "BlockerFunction",
                                "package": "react-router"
                              }
                            ]
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2579, 2580]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2458,
                          "character": 3,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2458"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2581,
          "name": "unstable_useViewTransitionState",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 2492,
              "character": 9,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2492"
            }
          ],
          "signatures": [
            {
              "id": 2582,
              "name": "unstable_useViewTransitionState",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "This hook returns "
                  },
                  {
                    "kind": "code",
                    "text": "`true`"
                  },
                  {
                    "kind": "text",
                    "text": " when there is an active [View Transition](https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API) to the specified location. This can be used to apply finer-grained styles to elements to further customize the view transition. This requires that view transitions have been enabled for the given navigation via "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "LinkProps.unstable_viewTransition",
                    "target": 1154,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " (or the "
                  },
                  {
                    "kind": "code",
                    "text": "`Form`"
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "code",
                    "text": "`submit`"
                  },
                  {
                    "kind": "text",
                    "text": ", or "
                  },
                  {
                    "kind": "code",
                    "text": "`navigate`"
                  },
                  {
                    "kind": "text",
                    "text": " call)"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 2492,
                  "character": 9,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2492"
                }
              ],
              "parameters": [
                {
                  "id": 2583,
                  "name": "to",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2248,
                    "name": "To",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2584,
                  "name": "opts",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2585,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2586,
                          "name": "relative",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2494,
                              "character": 10,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2494"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2198,
                            "name": "RelativeRoutingType",
                            "package": "react-router"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2586]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2494,
                          "character": 8,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2494"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 2587,
          "name": "useActionData",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1137,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1137"
            }
          ],
          "signatures": [
            {
              "id": 2588,
              "name": "useActionData",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the action data from the most recent POST navigation form submission or "
                  },
                  {
                    "kind": "code",
                    "text": "`undefined`"
                  },
                  {
                    "kind": "text",
                    "text": " if there hasn't been one.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Form, useActionData } from \"react-router\"\n\nexport async function action({ request }) {\n  const body = await request.formData()\n  const name = body.get(\"visitorsName\")\n  return { message: `Hello, ${name}` }\n}\n\nexport default function Invoices() {\n  const data = useActionData()\n  return (\n    <Form method=\"post\">\n      <input type=\"text\" name=\"visitorsName\" />\n      {data ? data.message : \"Waiting...\"}\n    </Form>\n  )\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1137,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1137"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 2589,
          "name": "useAsyncError",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1214,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1214"
            }
          ],
          "signatures": [
            {
              "id": 2590,
              "name": "useAsyncError",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the rejection value from the closest "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Await>`",
                    "target": 2302
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { Await, useAsyncError } from \"react-router\"\n\nfunction ErrorElement() {\n  const error = useAsyncError();\n  return (\n    <p>Uh Oh, something went wrong! {error.message}</p>\n  );\n}\n\n// somewhere in your app\n<Await\n  resolve={promiseThatRejects}\n  errorElement={<ErrorElement />}\n/>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1214,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1214"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 2591,
          "name": "useAsyncValue",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1187,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1187"
            }
          ],
          "signatures": [
            {
              "id": 2592,
              "name": "useAsyncValue",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the resolved promise value from the closest "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Await>`",
                    "target": 2302
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nfunction SomeDescendant() {\n  const value = useAsyncValue();\n  // ...\n}\n\n// somewhere in your app\n<Await resolve={somePromise}>\n  <SomeDescendant />\n</Await>\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1187,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1187"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 2593,
          "name": "useBeforeUnload",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 2384,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2384"
            }
          ],
          "signatures": [
            {
              "id": 2594,
              "name": "useBeforeUnload",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Setup a callback to be fired on the window's "
                  },
                  {
                    "kind": "code",
                    "text": "`beforeunload`"
                  },
                  {
                    "kind": "text",
                    "text": " event."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 2384,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2384"
                }
              ],
              "parameters": [
                {
                  "id": 2595,
                  "name": "callback",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2596,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2385,
                          "character": 12,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2385"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2597,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2385,
                              "character": 12,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2385"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2598,
                              "name": "event",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "BeforeUnloadEvent"
                                },
                                "name": "BeforeUnloadEvent",
                                "package": "typescript"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2599,
                  "name": "options",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2600,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2601,
                          "name": "capture",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2386,
                              "character": 14,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2386"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2601]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2386,
                          "character": 12,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2386"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2602,
          "name": "useBlocker",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1229,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1229"
            }
          ],
          "signatures": [
            {
              "id": 2603,
              "name": "useBlocker",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Allow the application to block navigations within the SPA and present the\nuser a confirmation dialog to confirm the navigation.  Mostly used to avoid\nusing half-filled form data.  This does not handle hard-reloads or\ncross-origin navigations."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1229,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1229"
                }
              ],
              "parameters": [
                {
                  "id": 2604,
                  "name": "shouldBlock",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "boolean"
                      },
                      {
                        "type": "reference",
                        "target": 1941,
                        "name": "BlockerFunction",
                        "package": "react-router"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1940,
                "name": "Blocker",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2605,
          "name": "useFetcher",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 2110,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2110"
            }
          ],
          "signatures": [
            {
              "id": 2606,
              "name": "useFetcher",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Useful for creating complex, dynamic user interfaces that require multiple, concurrent data interactions without causing a navigation.\n\nFetchers track their own, independent state and can be used to load data, submit forms, and generally interact with loaders and actions.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useFetcher } from \"react-router\"\n\nfunction SomeComponent() {\n  let fetcher = useFetcher()\n\n  // states are available on the fetcher\n  fetcher.state // \"idle\" | \"loading\" | \"submitting\"\n  fetcher.data // the data returned from the action or loader\n\n  // render a form\n  <fetcher.Form method=\"post\" />\n\n  // load data\n  fetcher.load(\"/some/route\")\n\n  // submit data\n  fetcher.submit(someFormRef, { method: \"post\" })\n  fetcher.submit(someData, {\n    method: \"post\",\n    encType: \"application/json\"\n  })\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 2110,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2110"
                }
              ],
              "typeParameter": [
                {
                  "id": 2607,
                  "name": "TData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "any"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2608,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2609,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2610,
                          "name": "key",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "comment": {
                            "summary": [
                              {
                                "kind": "text",
                                "text": "By default, "
                              },
                              {
                                "kind": "code",
                                "text": "`useFetcher`"
                              },
                              {
                                "kind": "text",
                                "text": " generate a unique fetcher scoped to that component. If you want to identify a fetcher with your own key such that you can access it from elsewhere in your app, you can do that with the "
                              },
                              {
                                "kind": "code",
                                "text": "`key`"
                              },
                              {
                                "kind": "text",
                                "text": " option:\n\n"
                              },
                              {
                                "kind": "code",
                                "text": "```tsx\nfunction SomeComp() {\n  let fetcher = useFetcher({ key: \"my-key\" })\n  // ...\n}\n\n// Somewhere else\nfunction AnotherComp() {\n  // this will be the same fetcher, sharing the state across the app\n  let fetcher = useFetcher({ key: \"my-key\" });\n  // ...\n}\n```"
                              }
                            ]
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 2130,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2130"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2610]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 2112,
                          "character": 3,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2112"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2056,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2607,
                    "name": "TData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "FetcherWithComponents",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2611,
          "name": "useFetchers",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 2224,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2224"
            }
          ],
          "signatures": [
            {
              "id": 2612,
              "name": "useFetchers",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns an array of all in-flight fetchers. This is useful for components throughout the app that didn't create the fetchers but want to use their submissions to participate in optimistic UI.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useFetchers } from \"react-router\";\n\nfunction SomeComponent() {\n  const fetchers = useFetchers();\n  fetchers[0].formData; // FormData\n  fetchers[0].state; // etc.\n  // ...\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 2224,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2224"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "intersection",
                  "types": [
                    {
                      "type": "reference",
                      "target": 2021,
                      "name": "Fetcher",
                      "package": "react-router"
                    },
                    {
                      "type": "reflection",
                      "declaration": {
                        "id": 2613,
                        "name": "__type",
                        "variant": "declaration",
                        "kind": 65536,
                        "flags": {},
                        "children": [
                          {
                            "id": 2614,
                            "name": "key",
                            "variant": "declaration",
                            "kind": 1024,
                            "flags": {},
                            "sources": [
                              {
                                "fileName": "packages/react-router/lib/dom/lib.tsx",
                                "line": 2224,
                                "character": 44,
                                "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2224"
                              }
                            ],
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "groups": [
                          {
                            "title": "Properties",
                            "children": [2614]
                          }
                        ],
                        "sources": [
                          {
                            "fileName": "packages/react-router/lib/dom/lib.tsx",
                            "line": 2224,
                            "character": 42,
                            "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L2224"
                          }
                        ]
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 2615,
          "name": "useFormAction",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1927,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1927"
            }
          ],
          "signatures": [
            {
              "id": 2616,
              "name": "useFormAction",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Resolves the URL to the closest route in the component hierarchy instead of the current URL of the app.\n\nThis is used internally by "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Form",
                    "target": 2308,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " resolve the action to the closest route, but can be used generically as well.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useFormAction } from \"react-router\";\n\nfunction SomeComponent() {\n  // closest route URL\n  let action = useFormAction();\n\n  // closest route URL + \"destroy\"\n  let destroyAction = useFormAction(\"destroy\");\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1927,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1927"
                }
              ],
              "parameters": [
                {
                  "id": 2617,
                  "name": "action",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The action to append to the closest route URL."
                      }
                    ]
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2618,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2619,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2620,
                          "name": "relative",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1932,
                              "character": 18,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1932"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2198,
                            "name": "RelativeRoutingType",
                            "package": "react-router"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2620]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1932,
                          "character": 16,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1932"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 2621,
          "name": "useHref",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 68,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L68"
            }
          ],
          "signatures": [
            {
              "id": 2622,
              "name": "useHref",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Resolves a URL against the current location.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useHref } from \"react-router\"\n\nfunction SomeComponent() {\n  let href = useHref(\"some/where\");\n  // \"/resolved/some/where\"\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 68,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L68"
                }
              ],
              "parameters": [
                {
                  "id": 2623,
                  "name": "to",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2248,
                    "name": "To",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2624,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2625,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2626,
                          "name": "relative",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/hooks.tsx",
                              "line": 70,
                              "character": 18,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L70"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2198,
                            "name": "RelativeRoutingType",
                            "package": "react-router"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2626]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/hooks.tsx",
                          "line": 70,
                          "character": 16,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L70"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            }
          ]
        },
        {
          "id": 2627,
          "name": "useInRouterContext",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 102,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L102"
            }
          ],
          "signatures": [
            {
              "id": 2628,
              "name": "useInRouterContext",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns true if this component is a descendant of a Router, useful to ensure\na component is used within a Router."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 102,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L102"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "boolean"
              }
            }
          ]
        },
        {
          "id": 2629,
          "name": "useLinkClickHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1593,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1593"
            }
          ],
          "signatures": [
            {
              "id": 2630,
              "name": "useLinkClickHandler",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Handles the click behavior for router "
                  },
                  {
                    "kind": "code",
                    "text": "`<Link>`"
                  },
                  {
                    "kind": "text",
                    "text": " components. This is useful if\nyou need to create custom "
                  },
                  {
                    "kind": "code",
                    "text": "`<Link>`"
                  },
                  {
                    "kind": "text",
                    "text": " components with the same click behavior we\nuse in our exported "
                  },
                  {
                    "kind": "code",
                    "text": "`<Link>`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1593,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1593"
                }
              ],
              "typeParameter": [
                {
                  "id": 2631,
                  "name": "E",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Element"
                    },
                    "name": "Element",
                    "package": "typescript"
                  },
                  "default": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "HTMLAnchorElement"
                    },
                    "name": "HTMLAnchorElement",
                    "package": "typescript"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2632,
                  "name": "to",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2248,
                    "name": "To",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2633,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2634,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2635,
                          "name": "preventScrollReset",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1606,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1606"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 2636,
                          "name": "relative",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1607,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1607"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2198,
                            "name": "RelativeRoutingType",
                            "package": "react-router"
                          }
                        },
                        {
                          "id": 2637,
                          "name": "replace",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1604,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1604"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        },
                        {
                          "id": 2638,
                          "name": "state",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1605,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1605"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "any"
                          }
                        },
                        {
                          "id": 2639,
                          "name": "target",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1603,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1603"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                              "qualifiedName": "React.HTMLAttributeAnchorTarget"
                            },
                            "name": "HTMLAttributeAnchorTarget",
                            "package": "@types/react",
                            "qualifiedName": "React.HTMLAttributeAnchorTarget"
                          }
                        },
                        {
                          "id": 2640,
                          "name": "unstable_viewTransition",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/dom/lib.tsx",
                              "line": 1608,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1608"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "boolean"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2635, 2636, 2637, 2638, 2639, 2640]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/dom/lib.tsx",
                          "line": 1602,
                          "character": 5,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1602"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 2641,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/dom/lib.tsx",
                      "line": 1610,
                      "character": 3,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1610"
                    }
                  ],
                  "signatures": [
                    {
                      "id": 2642,
                      "name": "__type",
                      "variant": "signature",
                      "kind": 4096,
                      "flags": {},
                      "parameters": [
                        {
                          "id": 2643,
                          "name": "event",
                          "variant": "param",
                          "kind": 32768,
                          "flags": {},
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                              "qualifiedName": "React.MouseEvent"
                            },
                            "typeArguments": [
                              {
                                "type": "reference",
                                "target": 2631,
                                "name": "E",
                                "package": "react-router",
                                "refersToTypeParameter": true
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                                  "qualifiedName": "MouseEvent"
                                },
                                "name": "MouseEvent",
                                "package": "typescript"
                              }
                            ],
                            "name": "React.MouseEvent",
                            "package": "@types/react"
                          }
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 2644,
          "name": "useLoaderData",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1067,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1067"
            }
          ],
          "signatures": [
            {
              "id": 2645,
              "name": "useLoaderData",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the data from the closest route "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "loader",
                    "target": 2100
                  },
                  {
                    "kind": "text",
                    "text": " or "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "client loader",
                    "target": 1959
                  },
                  {
                    "kind": "text",
                    "text": ".\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useLoaderData } from \"react-router\"\n\nexport async function loader() {\n  return await fakeDb.invoices.findAll();\n}\n\nexport default function Invoices() {\n  let invoices = useLoaderData<typeof loader>();\n  // ...\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1067,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1067"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 2646,
          "name": "useLocation",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 129,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L129"
            }
          ],
          "signatures": [
            {
              "id": 2647,
              "name": "useLocation",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the current "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Location",
                    "target": 1163,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ". This can be useful if you'd like to perform some side effect whenever it changes.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport * as React from 'react'\nimport { useLocation } from 'react-router'\n\nfunction SomeComponent() {\n  let location = useLocation()\n\n  React.useEffect(() => {\n    // Google Analytics\n    ga('send', 'pageview')\n  }, [location]);\n\n  return (\n    // ...\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 129,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L129"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1163,
                "name": "Location",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2648,
          "name": "useMatch",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 157,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L157"
            }
          ],
          "signatures": [
            {
              "id": 2649,
              "name": "useMatch",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns a PathMatch object if the given pattern matches the current URL.\nThis is useful for components that need to know \"active\" state, e.g.\n"
                  },
                  {
                    "kind": "code",
                    "text": "`<NavLink>`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 157,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L157"
                }
              ],
              "typeParameter": [
                {
                  "id": 2650,
                  "name": "ParamKey",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2651,
                  "name": "Path",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2652,
                  "name": "pattern",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": 2651,
                        "name": "Path",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 1566,
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 2651,
                            "name": "Path",
                            "package": "react-router",
                            "refersToTypeParameter": true
                          }
                        ],
                        "name": "PathPattern",
                        "package": "react-router"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": 1560,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2650,
                        "name": "ParamKey",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "PathMatch",
                    "package": "react-router"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2653,
          "name": "useMatches",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1039,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1039"
            }
          ],
          "signatures": [
            {
              "id": 2654,
              "name": "useMatches",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the active route matches, useful for accessing loaderData for\nparent/child routes or the route \"handle\" property"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1039,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1039"
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": 1817,
                  "name": "UIMatch",
                  "package": "react-router"
                }
              }
            }
          ]
        },
        {
          "id": 2655,
          "name": "useNavigate",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 222,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L222"
            }
          ],
          "signatures": [
            {
              "id": 2656,
              "name": "useNavigate",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns a function that lets you navigate programmatically in the browser in response to user interactions or effects.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useNavigate } from \"react-router\";\n\nfunction SomeComponent() {\n  let navigate = useNavigate();\n  return (\n    <button\n      onClick={() => {\n        navigate(-1);\n      }}\n    />\n  );\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nIt's often better to use "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "redirect",
                    "target": 2539
                  },
                  {
                    "kind": "text",
                    "text": " in "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "actions",
                    "target": 114
                  },
                  {
                    "kind": "text",
                    "text": " and "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "loaders",
                    "target": 2100
                  },
                  {
                    "kind": "text",
                    "text": " than this hook."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 222,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L222"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1484,
                "name": "NavigateFunction",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2657,
          "name": "useNavigation",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 989,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L989"
            }
          ],
          "signatures": [
            {
              "id": 2658,
              "name": "useNavigation",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the current navigation, defaulting to an \"idle\" navigation when no navigation is in progress. You can use this to render pending UI (like a global spinner) or read FormData from a form navigation.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useNavigation } from \"react-router\"\n\nfunction SomeComponent() {\n  let navigation = useNavigation();\n  navigation.state\n  navigation.formData\n  // etc.\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 989,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L989"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2152,
                "name": "Navigation",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2659,
          "name": "useNavigationType",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 146,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L146"
            }
          ],
          "signatures": [
            {
              "id": 2660,
              "name": "useNavigationType",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the current navigation action which describes how the router came to\nthe current location, either by a pop, push, or replace on the history stack."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 146,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L146"
                }
              ],
              "type": {
                "type": "reference",
                "target": 3,
                "name": "NavigationType",
                "package": "react-router",
                "qualifiedName": "Action"
              }
            }
          ]
        },
        {
          "id": 2661,
          "name": "useOutlet",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 317,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L317"
            }
          ],
          "signatures": [
            {
              "id": 2662,
              "name": "useOutlet",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the element for the child route at this level of the route\nhierarchy. Used internally by "
                  },
                  {
                    "kind": "code",
                    "text": "`<Outlet>`"
                  },
                  {
                    "kind": "text",
                    "text": " to render child routes."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 317,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L317"
                }
              ],
              "parameters": [
                {
                  "id": 2663,
                  "name": "context",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2664,
          "name": "useOutletContext",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 307,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L307"
            }
          ],
          "signatures": [
            {
              "id": 2665,
              "name": "useOutletContext",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the parent route "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Outlet context>`",
                    "target": 1547
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 307,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L307"
                }
              ],
              "typeParameter": [
                {
                  "id": 2666,
                  "name": "Context",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "intrinsic",
                    "name": "unknown"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 2666,
                "name": "Context",
                "package": "react-router",
                "refersToTypeParameter": true
              }
            }
          ]
        },
        {
          "id": 2667,
          "name": "useParams",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 343,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L343"
            }
          ],
          "signatures": [
            {
              "id": 2668,
              "name": "useParams",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns an object of key/value pairs of the dynamic params from the current URL that were matched by the routes. Child routes inherit all params from their parent routes.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useParams } from \"react-router\"\n\nfunction SomeComponent() {\n  let params = useParams()\n  params.postId\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nAssuming a route pattern like "
                  },
                  {
                    "kind": "code",
                    "text": "`/posts/:postId`"
                  },
                  {
                    "kind": "text",
                    "text": " is matched by "
                  },
                  {
                    "kind": "code",
                    "text": "`/posts/123`"
                  },
                  {
                    "kind": "text",
                    "text": " then "
                  },
                  {
                    "kind": "code",
                    "text": "`params.postId`"
                  },
                  {
                    "kind": "text",
                    "text": " will be "
                  },
                  {
                    "kind": "code",
                    "text": "`\"123\"`"
                  },
                  {
                    "kind": "text",
                    "text": "."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 343,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L343"
                }
              ],
              "typeParameter": [
                {
                  "id": 2669,
                  "name": "ParamsOrKey",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Record"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "undefined"
                              },
                              {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            ]
                          }
                        ],
                        "name": "Record",
                        "package": "typescript"
                      }
                    ]
                  },
                  "default": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Readonly"
                },
                "typeArguments": [
                  {
                    "type": "conditional",
                    "checkType": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "reference",
                          "target": 2669,
                          "name": "ParamsOrKey",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        }
                      ]
                    },
                    "extendsType": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      ]
                    },
                    "trueType": {
                      "type": "reference",
                      "target": 2188,
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 2669,
                          "name": "ParamsOrKey",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Params",
                      "package": "react-router"
                    },
                    "falseType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                        "qualifiedName": "Partial"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": 2669,
                          "name": "ParamsOrKey",
                          "package": "react-router",
                          "refersToTypeParameter": true
                        }
                      ],
                      "name": "Partial",
                      "package": "typescript"
                    }
                  }
                ],
                "name": "Readonly",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2670,
          "name": "useResolvedPath",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 370,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L370"
            }
          ],
          "signatures": [
            {
              "id": 2671,
              "name": "useResolvedPath",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Resolves the pathname of the given "
                  },
                  {
                    "kind": "code",
                    "text": "`to`"
                  },
                  {
                    "kind": "text",
                    "text": " value against the current location. Similar to "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useHref",
                    "target": 2621,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": ", but returns a "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Path",
                    "target": 1556,
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " instead of a string.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useResolvedPath } from \"react-router\"\n\nfunction SomeComponent() {\n  // if the user is at /dashboard/profile\n  let path = useResolvedPath(\"../accounts\")\n  path.pathname // \"/dashboard/accounts\"\n  path.search // \"\"\n  path.hash // \"\"\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 370,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L370"
                }
              ],
              "parameters": [
                {
                  "id": 2672,
                  "name": "to",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 2248,
                    "name": "To",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2673,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2674,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2675,
                          "name": "relative",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/hooks.tsx",
                              "line": 372,
                              "character": 18,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L372"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2198,
                            "name": "RelativeRoutingType",
                            "package": "react-router"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2675]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/hooks.tsx",
                          "line": 372,
                          "character": 16,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L372"
                        }
                      ]
                    }
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1556,
                "name": "Path",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2676,
          "name": "useRevalidator",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1019,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1019"
            }
          ],
          "signatures": [
            {
              "id": 2677,
              "name": "useRevalidator",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Revalidate the data on the page for reasons outside of normal data mutations like window focus or polling on an interval.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useRevalidator } from \"react-router\";\n\nfunction WindowFocusRevalidator() {\n  const revalidator = useRevalidator();\n\n  useFakeWindowFocus(() => {\n    revalidator.revalidate();\n  });\n\n  return (\n    <div hidden={revalidator.state === \"idle\"}>\n      Revalidating...\n    </div>\n  );\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nNote that page data is already revalidated automatically after actions. If you find yourself using this for normal CRUD operations on your data in response to user interactions, you're probably not taking advantage of the other APIs like "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useFetcher",
                    "target": 2605
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "Form",
                    "target": 2308
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "useSubmit",
                    "target": 2694
                  },
                  {
                    "kind": "text",
                    "text": " that do this automatically."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1019,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1019"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 2678,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2679,
                      "name": "state",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/hooks.tsx",
                          "line": 1027,
                          "character": 6,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1027"
                        }
                      ],
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "packages/react-router/lib/router/router.ts",
                          "qualifiedName": "RevalidationState"
                        },
                        "name": "RevalidationState",
                        "package": "react-router"
                      },
                      "defaultValue": "state.revalidation"
                    },
                    {
                      "id": 2680,
                      "name": "revalidate",
                      "variant": "declaration",
                      "kind": 2048,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "packages/react-router/lib/hooks.tsx",
                          "line": 1024,
                          "character": 12,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1024"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2681,
                          "name": "revalidate",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "packages/react-router/lib/hooks.tsx",
                              "line": 1024,
                              "character": 12,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1024"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                              "qualifiedName": "Promise"
                            },
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "void"
                              }
                            ],
                            "name": "Promise",
                            "package": "typescript"
                          }
                        }
                      ]
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2679]
                    },
                    {
                      "title": "Methods",
                      "children": [2680]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "packages/react-router/lib/hooks.tsx",
                      "line": 1023,
                      "character": 11,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1023"
                    }
                  ]
                }
              }
            }
          ]
        },
        {
          "id": 2682,
          "name": "useRouteError",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1155,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1155"
            }
          ],
          "signatures": [
            {
              "id": 2683,
              "name": "useRouteError",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Accesses the error thrown during an "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "action",
                    "target": 114
                  },
                  {
                    "kind": "text",
                    "text": ", "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "loader",
                    "target": 2100
                  },
                  {
                    "kind": "text",
                    "text": ", or component render to be used in a route module Error Boundary.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nexport function ErrorBoundary() {\n  const error = useRouteError();\n  return <div>{error.message}</div>;\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1155,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1155"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 2684,
          "name": "useRouteLoaderData",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 1107,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1107"
            }
          ],
          "signatures": [
            {
              "id": 2685,
              "name": "useRouteLoaderData",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns the loader data for a given route by route ID.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useRouteLoaderData } from \"react-router\";\n\nfunction SomeComponent() {\n  const { user } = useRouteLoaderData(\"root\");\n}\n```"
                  },
                  {
                    "kind": "text",
                    "text": "\n\nRoute IDs are created automatically. They are simply the path of the route file relative to the app folder without the extension.\n\n| Route Filename             | Route ID             |\n| -------------------------- | -------------------- |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`app/root.tsx`"
                  },
                  {
                    "kind": "text",
                    "text": "             | "
                  },
                  {
                    "kind": "code",
                    "text": "`\"root\"`"
                  },
                  {
                    "kind": "text",
                    "text": "             |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`app/routes/teams.tsx`"
                  },
                  {
                    "kind": "text",
                    "text": "     | "
                  },
                  {
                    "kind": "code",
                    "text": "`\"routes/teams\"`"
                  },
                  {
                    "kind": "text",
                    "text": "     |\n| "
                  },
                  {
                    "kind": "code",
                    "text": "`app/whatever/teams.$id.tsx`"
                  },
                  {
                    "kind": "text",
                    "text": " | "
                  },
                  {
                    "kind": "code",
                    "text": "`\"whatever/teams.$id\"`"
                  },
                  {
                    "kind": "text",
                    "text": " |\n\nIf you created an ID manually, you can use that instead:\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nroute(\"/\", \"containers/app.tsx\", { id: \"app\" }})\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 1107,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L1107"
                }
              ],
              "parameters": [
                {
                  "id": 2686,
                  "name": "routeId",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "unknown"
              }
            }
          ]
        },
        {
          "id": 2687,
          "name": "useRoutes",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/hooks.tsx",
              "line": 421,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L421"
            }
          ],
          "signatures": [
            {
              "id": 2688,
              "name": "useRoutes",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Hook version of "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Routes>`",
                    "target": 2359
                  },
                  {
                    "kind": "text",
                    "text": " that uses objects instead of components. These objects have the same properties as the component props.\n\nThe return value of "
                  },
                  {
                    "kind": "code",
                    "text": "`useRoutes`"
                  },
                  {
                    "kind": "text",
                    "text": " is either a valid React element you can use to render the route tree, or "
                  },
                  {
                    "kind": "code",
                    "text": "`null`"
                  },
                  {
                    "kind": "text",
                    "text": " if nothing matched.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport * as React from \"react\";\nimport { useRoutes } from \"react-router\";\n\nfunction App() {\n  let element = useRoutes([\n    {\n      path: \"/\",\n      element: <Dashboard />,\n      children: [\n        {\n          path: \"messages\",\n          element: <DashboardMessages />,\n        },\n        { path: \"tasks\", element: <DashboardTasks /> },\n      ],\n    },\n    { path: \"team\", element: <AboutPage /> },\n  ]);\n\n  return element;\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/hooks.tsx",
                  "line": 421,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/hooks.tsx#L421"
                }
              ],
              "parameters": [
                {
                  "id": 2689,
                  "name": "routes",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2204,
                      "name": "RouteObject",
                      "package": "react-router"
                    }
                  }
                },
                {
                  "id": 2690,
                  "name": "locationArg",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Partial"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 1163,
                            "typeArguments": [
                              {
                                "type": "intrinsic",
                                "name": "any"
                              }
                            ],
                            "name": "Location",
                            "package": "react-router"
                          }
                        ],
                        "name": "Partial",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "union",
                "types": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
                      "qualifiedName": "React.ReactElement"
                    },
                    "name": "React.ReactElement",
                    "package": "@types/react"
                  },
                  {
                    "type": "literal",
                    "value": null
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2691,
          "name": "useSearchParams",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1665,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1665"
            }
          ],
          "signatures": [
            {
              "id": 2692,
              "name": "useSearchParams",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns a tuple of the current URL's "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "URLSearchParams",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "URLSearchParams"
                    },
                    "tsLinkText": ""
                  },
                  {
                    "kind": "text",
                    "text": " and a function to update them. Setting the search params causes a navigation.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useSearchParams } from \"react-router\";\n\nexport function SomeComponent() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  // ...\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1665,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1665"
                }
              ],
              "parameters": [
                {
                  "id": 2693,
                  "name": "defaultInit",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": 2275,
                    "name": "URLSearchParamsInit",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "tuple",
                "elements": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "URLSearchParams"
                    },
                    "name": "URLSearchParams",
                    "package": "typescript"
                  },
                  {
                    "type": "reference",
                    "target": 2212,
                    "name": "SetURLSearchParams",
                    "package": "react-router"
                  }
                ]
              }
            }
          ]
        },
        {
          "id": 2694,
          "name": "useSubmit",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "packages/react-router/lib/dom/lib.tsx",
              "line": 1865,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1865"
            }
          ],
          "signatures": [
            {
              "id": 2695,
              "name": "useSubmit",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "The imperative version of "
                  },
                  {
                    "kind": "inline-tag",
                    "tag": "@link",
                    "text": "`<Form>`",
                    "target": 2308,
                    "tsLinkText": "`<Form>`"
                  },
                  {
                    "kind": "text",
                    "text": " that lets you submit a form from code instead of a user interaction.\n\n"
                  },
                  {
                    "kind": "code",
                    "text": "```tsx\nimport { useSubmit } from \"react-router\";\n\nfunction SomeComponent() {\n  const submit = useSubmit();\n  return (\n    <Form\n      onChange={(event) => {\n        submit(event.currentTarget);\n      }}\n    />\n  );\n}\n```"
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "packages/react-router/lib/dom/lib.tsx",
                  "line": 1865,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router/lib/dom/lib.tsx#L1865"
                }
              ],
              "type": {
                "type": "reference",
                "target": 1772,
                "name": "SubmitFunction",
                "package": "react-router"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "References",
          "children": [2]
        },
        {
          "title": "Enumerations",
          "children": [3, 7]
        },
        {
          "title": "Classes",
          "children": [11, 28, 48, 102]
        },
        {
          "title": "Interfaces",
          "children": [
            114, 119, 124, 129, 136, 139, 143, 147, 159, 163, 176, 178, 183,
            206, 485, 489, 775, 779, 783, 790, 794, 798, 801, 805, 826, 847,
            868, 871, 1156, 1158, 1163, 1170, 1175, 1183, 1188, 1484, 1490,
            1497, 1502, 1525, 1546, 1548, 1556, 1560, 1566, 1571, 1592, 1600,
            1607, 1614, 1616, 1619, 1624, 1635, 1640, 1645, 1670, 1673, 1698,
            1716, 1719, 1733, 1751, 1763, 1767, 1772, 1776, 1788, 1817, 1825,
            1837, 1851, 1872, 1876, 1880, 1883, 1886, 1892, 1908, 1912
          ]
        },
        {
          "title": "Type Aliases",
          "children": [
            1923, 1926, 1930, 1931, 1935, 1939, 1940, 1941, 1949, 1953, 1959,
            1965, 1971, 1972, 1977, 1983, 1989, 1996, 2003, 2009, 2012, 2016,
            2021, 2023, 2056, 2068, 2071, 2072, 2073, 2074, 2080, 2083, 2084,
            2085, 2089, 2093, 2099, 2100, 2108, 2109, 2111, 2116, 2122, 2145,
            2147, 2152, 2153, 2185, 2186, 2188, 2190, 2192, 2193, 2198, 2199,
            2204, 2205, 2206, 2207, 2211, 2212, 2220, 2225, 2247, 2248, 2249,
            2254, 2259, 2265, 2270, 2275, 2276, 2281, 2285, 2291
          ]
        },
        {
          "title": "Variables",
          "children": [
            2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301
          ]
        },
        {
          "title": "Functions",
          "children": [
            2302, 2305, 2308, 2315, 2318, 2320, 2327, 2329, 2332, 2334, 2341,
            2344, 2347, 2350, 2353, 2356, 2359, 2362, 2365, 2369, 2372, 2375,
            2378, 2384, 2391, 2396, 2398, 2404, 2410, 2414, 2420, 2423, 2427,
            2439, 2442, 2445, 2451, 2455, 2462, 2465, 2471, 2474, 2478, 2485,
            2489, 2500, 2505, 2510, 2513, 2516, 2519, 2524, 2530, 2536, 2539,
            2543, 2547, 2550, 2554, 2558, 2562, 2565, 2568, 2572, 2575, 2581,
            2587, 2589, 2591, 2593, 2602, 2605, 2611, 2615, 2621, 2627, 2629,
            2644, 2646, 2648, 2653, 2655, 2657, 2659, 2661, 2664, 2667, 2670,
            2676, 2682, 2684, 2687, 2691, 2694
          ]
        }
      ],
      "categories": [
        {
          "title": "Routers",
          "children": [2410, 2423, 2427, 2478]
        },
        {
          "title": "Router Components",
          "children": [2305, 2315, 2318, 2329, 2372, 2375, 2558]
        },
        {
          "title": "Components",
          "children": [
            2302, 2308, 2320, 2327, 2332, 2334, 2341, 2344, 2347, 2350, 2353,
            2359, 2362, 2365, 2369
          ]
        },
        {
          "title": "Hooks",
          "children": [
            2398, 2575, 2581, 2587, 2589, 2591, 2593, 2602, 2605, 2611, 2615,
            2621, 2627, 2629, 2644, 2646, 2648, 2653, 2655, 2657, 2659, 2661,
            2664, 2667, 2670, 2676, 2682, 2684, 2687, 2691, 2694
          ]
        },
        {
          "title": "Utils",
          "children": [
            2442, 2451, 2455, 2462, 2474, 2485, 2500, 2505, 2513, 2519, 2524,
            2530, 2536, 2539, 2543, 2547, 2550
          ]
        },
        {
          "title": "Types",
          "children": [
            139, 143, 206, 489, 794, 801, 826, 847, 871, 1170, 1188, 1497, 1546,
            1571, 1607, 1616, 2206
          ]
        },
        {
          "title": "Other",
          "children": [
            2, 3, 7, 11, 28, 48, 102, 114, 119, 124, 129, 136, 147, 159, 163,
            176, 178, 183, 485, 775, 779, 783, 790, 798, 805, 868, 1156, 1158,
            1163, 1175, 1183, 1484, 1490, 1502, 1525, 1548, 1556, 1560, 1566,
            1592, 1600, 1614, 1619, 1624, 1635, 1640, 1645, 1670, 1673, 1698,
            1716, 1719, 1733, 1751, 1763, 1767, 1772, 1776, 1788, 1817, 1825,
            1837, 1851, 1872, 1876, 1880, 1883, 1886, 1892, 1908, 1912, 1923,
            1926, 1930, 1931, 1935, 1939, 1940, 1941, 1949, 1953, 1959, 1965,
            1971, 1972, 1977, 1983, 1989, 1996, 2003, 2009, 2012, 2016, 2021,
            2023, 2056, 2068, 2071, 2072, 2073, 2074, 2080, 2083, 2084, 2085,
            2089, 2093, 2099, 2100, 2108, 2109, 2111, 2116, 2122, 2145, 2147,
            2152, 2153, 2185, 2186, 2188, 2190, 2192, 2193, 2198, 2199, 2204,
            2205, 2207, 2211, 2212, 2220, 2225, 2247, 2248, 2249, 2254, 2259,
            2265, 2270, 2275, 2276, 2281, 2285, 2291, 2292, 2293, 2294, 2295,
            2296, 2297, 2298, 2299, 2300, 2301, 2356, 2378, 2384, 2391, 2396,
            2404, 2414, 2420, 2439, 2445, 2465, 2471, 2489, 2510, 2516, 2554,
            2562, 2565, 2568, 2572
          ]
        }
      ],
      "readme": [
        {
          "kind": "text",
          "text": "# React Router\n\nThe "
        },
        {
          "kind": "code",
          "text": "`react-router`"
        },
        {
          "kind": "text",
          "text": " package is the heart of [React Router](https://github.com/remix-run/react-router) and provides all the core functionality.\n\nIf you'd like to extend React Router and you know what you're doing, you should\nadd "
        },
        {
          "kind": "code",
          "text": "`react-router`"
        },
        {
          "kind": "text",
          "text": " **as a peer dependency, not a regular dependency** in your\npackage."
        }
      ]
    },
    {
      "id": 2696,
      "name": "@react-router/dev",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 2697,
          "name": "cli",
          "variant": "declaration",
          "kind": 4,
          "flags": {},
          "children": [
            {
              "id": 2698,
              "name": "run",
              "variant": "declaration",
              "kind": 64,
              "flags": {},
              "sources": [
                {
                  "fileName": "cli/run.ts",
                  "line": 77,
                  "character": 22,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/cli/run.ts#L77"
                }
              ],
              "signatures": [
                {
                  "id": 2699,
                  "name": "run",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Programmatic interface for running the react-router CLI with the given command line\narguments."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "cli/run.ts",
                      "line": 77,
                      "character": 22,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/cli/run.ts#L77"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 2700,
                      "name": "argv",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      "defaultValue": "..."
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          ],
          "groups": [
            {
              "title": "Functions",
              "children": [2698]
            }
          ],
          "sources": [
            {
              "fileName": "cli/index.ts",
              "line": 1,
              "character": 0,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/cli/index.ts#L1"
            }
          ]
        },
        {
          "id": 2701,
          "name": "AssetsManifest",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "manifest.ts",
              "line": 1,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L1"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2702,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2703,
                  "name": "entry",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "manifest.ts",
                      "line": 4,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L4"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2704,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2705,
                          "name": "imports",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "manifest.ts",
                              "line": 6,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L6"
                            }
                          ],
                          "type": {
                            "type": "array",
                            "elementType": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        },
                        {
                          "id": 2706,
                          "name": "module",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "manifest.ts",
                              "line": 5,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L5"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2705, 2706]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "manifest.ts",
                          "line": 4,
                          "character": 9,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L4"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2707,
                  "name": "hmr",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "manifest.ts",
                      "line": 24,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L24"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2708,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2709,
                          "name": "runtime",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "manifest.ts",
                              "line": 26,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L26"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        },
                        {
                          "id": 2710,
                          "name": "timestamp",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "manifest.ts",
                              "line": 25,
                              "character": 4,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L25"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "number"
                          }
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2709, 2710]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "manifest.ts",
                          "line": 24,
                          "character": 8,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L24"
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2711,
                  "name": "routes",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "manifest.ts",
                      "line": 8,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L8"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2712,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "manifest.ts",
                          "line": 8,
                          "character": 10,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L8"
                        }
                      ],
                      "indexSignature": {
                        "id": 2713,
                        "name": "__index",
                        "variant": "signature",
                        "kind": 8192,
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "manifest.ts",
                            "line": 9,
                            "character": 4,
                            "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L9"
                          }
                        ],
                        "parameters": [
                          {
                            "id": 2714,
                            "name": "routeId",
                            "variant": "param",
                            "kind": 32768,
                            "flags": {},
                            "type": {
                              "type": "intrinsic",
                              "name": "string"
                            }
                          }
                        ],
                        "type": {
                          "type": "reflection",
                          "declaration": {
                            "id": 2715,
                            "name": "__type",
                            "variant": "declaration",
                            "kind": 65536,
                            "flags": {},
                            "children": [
                              {
                                "id": 2716,
                                "name": "caseSensitive",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 14,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L14"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2717,
                                "name": "hasAction",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 17,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L17"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2718,
                                "name": "hasClientAction",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 19,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L19"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2719,
                                "name": "hasClientLoader",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 20,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L20"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2720,
                                "name": "hasErrorBoundary",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 21,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L21"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2721,
                                "name": "hasLoader",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 18,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L18"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2722,
                                "name": "id",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 10,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L10"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 2723,
                                "name": "imports",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 16,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L16"
                                  }
                                ],
                                "type": {
                                  "type": "array",
                                  "elementType": {
                                    "type": "intrinsic",
                                    "name": "string"
                                  }
                                }
                              },
                              {
                                "id": 2724,
                                "name": "index",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 13,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L13"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "boolean"
                                }
                              },
                              {
                                "id": 2725,
                                "name": "module",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {},
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 15,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L15"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 2726,
                                "name": "parentId",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 11,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L11"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              },
                              {
                                "id": 2727,
                                "name": "path",
                                "variant": "declaration",
                                "kind": 1024,
                                "flags": {
                                  "isOptional": true
                                },
                                "sources": [
                                  {
                                    "fileName": "manifest.ts",
                                    "line": 12,
                                    "character": 6,
                                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L12"
                                  }
                                ],
                                "type": {
                                  "type": "intrinsic",
                                  "name": "string"
                                }
                              }
                            ],
                            "groups": [
                              {
                                "title": "Properties",
                                "children": [
                                  2716, 2717, 2718, 2719, 2720, 2721, 2722,
                                  2723, 2724, 2725, 2726, 2727
                                ]
                              }
                            ],
                            "sources": [
                              {
                                "fileName": "manifest.ts",
                                "line": 9,
                                "character": 23,
                                "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L9"
                              }
                            ]
                          }
                        }
                      }
                    }
                  }
                },
                {
                  "id": 2728,
                  "name": "url",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "manifest.ts",
                      "line": 3,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L3"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2729,
                  "name": "version",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "manifest.ts",
                      "line": 2,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L2"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2703, 2707, 2711, 2728, 2729]
                }
              ],
              "sources": [
                {
                  "fileName": "manifest.ts",
                  "line": 1,
                  "character": 23,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/manifest.ts#L1"
                }
              ]
            }
          }
        },
        {
          "id": 2730,
          "name": "BuildManifest",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "config.ts",
              "line": 81,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L81"
            }
          ],
          "type": {
            "type": "union",
            "types": [
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router-dev/config.ts",
                  "qualifiedName": "DefaultBuildManifest"
                },
                "name": "DefaultBuildManifest",
                "package": "@react-router/dev"
              },
              {
                "type": "reference",
                "target": {
                  "sourceFileName": "packages/react-router-dev/config.ts",
                  "qualifiedName": "ServerBundlesBuildManifest"
                },
                "name": "ServerBundlesBuildManifest",
                "package": "@react-router/dev"
              }
            ]
          }
        },
        {
          "id": 2731,
          "name": "Preset",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "config.ts",
              "line": 27,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L27"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2732,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2733,
                  "name": "name",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 28,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L28"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2734,
                  "name": "reactRouterConfig",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 29,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L29"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2735,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "config.ts",
                          "line": 29,
                          "character": 22,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L29"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2736,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "parameters": [
                            {
                              "id": 2737,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 2738,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 2739,
                                      "name": "reactRouterUserConfig",
                                      "variant": "declaration",
                                      "kind": 1024,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "config.ts",
                                          "line": 30,
                                          "character": 4,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L30"
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": 2752,
                                        "name": "VitePluginConfig",
                                        "package": "@react-router/dev"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "children": [2739]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "config.ts",
                                      "line": 29,
                                      "character": 29,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L29"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/react-router-dev/config.ts",
                                  "qualifiedName": "ConfigPreset"
                                },
                                "name": "ConfigPreset",
                                "package": "@react-router/dev"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router-dev/config.ts",
                                      "qualifiedName": "ConfigPreset"
                                    },
                                    "name": "ConfigPreset",
                                    "package": "@react-router/dev"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2740,
                  "name": "reactRouterConfigResolved",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 32,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L32"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2741,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "config.ts",
                          "line": 32,
                          "character": 30,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L32"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2742,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "parameters": [
                            {
                              "id": 2743,
                              "name": "args",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reflection",
                                "declaration": {
                                  "id": 2744,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "children": [
                                    {
                                      "id": 2745,
                                      "name": "reactRouterConfig",
                                      "variant": "declaration",
                                      "kind": 1024,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "config.ts",
                                          "line": 33,
                                          "character": 4,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L33"
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "packages/react-router-dev/config.ts",
                                          "qualifiedName": "ResolvedVitePluginConfig"
                                        },
                                        "name": "ResolvedVitePluginConfig",
                                        "package": "@react-router/dev"
                                      }
                                    }
                                  ],
                                  "groups": [
                                    {
                                      "title": "Properties",
                                      "children": [2745]
                                    }
                                  ],
                                  "sources": [
                                    {
                                      "fileName": "config.ts",
                                      "line": 32,
                                      "character": 37,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L32"
                                    }
                                  ]
                                }
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "intrinsic",
                                "name": "void"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "intrinsic",
                                    "name": "void"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [2733, 2734, 2740]
                }
              ],
              "sources": [
                {
                  "fileName": "config.ts",
                  "line": 27,
                  "character": 21,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L27"
                }
              ]
            }
          }
        },
        {
          "id": 2746,
          "name": "ServerBundlesFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "config.ts",
              "line": 50,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L50"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2747,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "config.ts",
                  "line": 50,
                  "character": 36,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L50"
                }
              ],
              "signatures": [
                {
                  "id": 2748,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2749,
                      "name": "args",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 2750,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 2751,
                              "name": "branch",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "config.ts",
                                  "line": 51,
                                  "character": 2,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L51"
                                }
                              ],
                              "type": {
                                "type": "array",
                                "elementType": {
                                  "type": "reference",
                                  "target": {
                                    "sourceFileName": "packages/react-router-dev/config.ts",
                                    "qualifiedName": "BranchRoute"
                                  },
                                  "name": "BranchRoute",
                                  "package": "@react-router/dev"
                                }
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [2751]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "config.ts",
                              "line": 50,
                              "character": 43,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L50"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      },
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "intrinsic",
                            "name": "string"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2752,
          "name": "VitePluginConfig",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "config.ts",
              "line": 89,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L89"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2753,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "children": [
                {
                  "id": 2754,
                  "name": "appDirectory",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The path to the "
                      },
                      {
                        "kind": "code",
                        "text": "`app`"
                      },
                      {
                        "kind": "text",
                        "text": " directory, relative to "
                      },
                      {
                        "kind": "code",
                        "text": "`remix.config.js`"
                      },
                      {
                        "kind": "text",
                        "text": ". Defaults\nto "
                      },
                      {
                        "kind": "code",
                        "text": "`\"app\"`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 94,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L94"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2755,
                  "name": "basename",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The React Router app basename.  Defaults to "
                      },
                      {
                        "kind": "code",
                        "text": "`\"/\"`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 130,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L130"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2756,
                  "name": "buildDirectory",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The path to the build directory, relative to the project. Defaults to\n"
                      },
                      {
                        "kind": "code",
                        "text": "`\"build\"`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 135,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L135"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2757,
                  "name": "buildEnd",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "A function that is called after the full React Router build is complete."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 139,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L139"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router-dev/config.ts",
                      "qualifiedName": "BuildEndHook"
                    },
                    "name": "BuildEndHook",
                    "package": "@react-router/dev"
                  }
                },
                {
                  "id": 2758,
                  "name": "future",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Enabled future flags"
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 122,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L122"
                    }
                  ],
                  "type": {
                    "type": "conditional",
                    "checkType": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "typeOperator",
                          "operator": "keyof",
                          "target": {
                            "type": "reference",
                            "target": {
                              "sourceFileName": "packages/react-router-dev/config.ts",
                              "qualifiedName": "FutureConfig"
                            },
                            "name": "FutureConfig",
                            "package": "@react-router/dev"
                          }
                        }
                      ]
                    },
                    "extendsType": {
                      "type": "tuple",
                      "elements": [
                        {
                          "type": "intrinsic",
                          "name": "never"
                        }
                      ]
                    },
                    "trueType": {
                      "type": "reflection",
                      "declaration": {
                        "id": 2759,
                        "name": "__type",
                        "variant": "declaration",
                        "kind": 65536,
                        "flags": {},
                        "sources": [
                          {
                            "fileName": "config.ts",
                            "line": 124,
                            "character": 6,
                            "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L124"
                          }
                        ],
                        "indexSignature": {
                          "id": 2760,
                          "name": "__index",
                          "variant": "signature",
                          "kind": 8192,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "config.ts",
                              "line": 124,
                              "character": 8,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L124"
                            }
                          ],
                          "parameters": [
                            {
                              "id": 2761,
                              "name": "key",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "intrinsic",
                                "name": "string"
                              }
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "never"
                          }
                        }
                      }
                    },
                    "falseType": {
                      "type": "reference",
                      "target": {
                        "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                        "qualifiedName": "Partial"
                      },
                      "typeArguments": [
                        {
                          "type": "reference",
                          "target": {
                            "sourceFileName": "packages/react-router-dev/config.ts",
                            "qualifiedName": "FutureConfig"
                          },
                          "name": "FutureConfig",
                          "package": "@react-router/dev"
                        }
                      ],
                      "name": "Partial",
                      "package": "typescript"
                    }
                  }
                },
                {
                  "id": 2762,
                  "name": "ignoredRouteFiles",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "A list of filenames or a glob patterns to match files in the "
                      },
                      {
                        "kind": "code",
                        "text": "`app/routes`"
                      },
                      {
                        "kind": "text",
                        "text": "\ndirectory that Remix will ignore. Matching files will not be recognized as\nroutes."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 117,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L117"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "intrinsic",
                      "name": "string"
                    }
                  }
                },
                {
                  "id": 2763,
                  "name": "prerender",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "An array of URLs to prerender to HTML files at build time.  Can also be a\nfunction returning an array to dynamically generate URLs."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 144,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L144"
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "array",
                        "elementType": {
                          "type": "intrinsic",
                          "name": "string"
                        }
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 2764,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "config.ts",
                              "line": 144,
                              "character": 31,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L144"
                            }
                          ],
                          "signatures": [
                            {
                              "id": 2765,
                              "name": "__type",
                              "variant": "signature",
                              "kind": 4096,
                              "flags": {},
                              "type": {
                                "type": "union",
                                "types": [
                                  {
                                    "type": "array",
                                    "elementType": {
                                      "type": "intrinsic",
                                      "name": "string"
                                    }
                                  },
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "Promise"
                                    },
                                    "typeArguments": [
                                      {
                                        "type": "array",
                                        "elementType": {
                                          "type": "intrinsic",
                                          "name": "string"
                                        }
                                      }
                                    ],
                                    "name": "Promise",
                                    "package": "typescript"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "id": 2766,
                  "name": "presets",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "An array of React Router plugin config presets to ease integration with\nother platforms and tools."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 149,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L149"
                    }
                  ],
                  "type": {
                    "type": "array",
                    "elementType": {
                      "type": "reference",
                      "target": 2731,
                      "name": "Preset",
                      "package": "@react-router/dev"
                    }
                  }
                },
                {
                  "id": 2767,
                  "name": "routes",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "A function for defining custom routes, in addition to those already defined\nusing the filesystem convention in "
                      },
                      {
                        "kind": "code",
                        "text": "`app/routes`"
                      },
                      {
                        "kind": "text",
                        "text": ". Both sets of routes will\nbe merged."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 101,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L101"
                    }
                  ],
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2768,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "config.ts",
                          "line": 101,
                          "character": 11,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L101"
                        }
                      ],
                      "signatures": [
                        {
                          "id": 2769,
                          "name": "__type",
                          "variant": "signature",
                          "kind": 4096,
                          "flags": {},
                          "parameters": [
                            {
                              "id": 2770,
                              "name": "defineRoutes",
                              "variant": "param",
                              "kind": 32768,
                              "flags": {},
                              "type": {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "packages/react-router-dev/config/routes.ts",
                                  "qualifiedName": "DefineRoutesFunction"
                                },
                                "name": "DefineRoutesFunction",
                                "package": "@react-router/dev"
                              }
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "ReturnType"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "packages/react-router-dev/config/routes.ts",
                                      "qualifiedName": "DefineRoutesFunction"
                                    },
                                    "name": "DefineRoutesFunction",
                                    "package": "@react-router/dev"
                                  }
                                ],
                                "name": "ReturnType",
                                "package": "typescript"
                              },
                              {
                                "type": "reference",
                                "target": {
                                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                  "qualifiedName": "Promise"
                                },
                                "typeArguments": [
                                  {
                                    "type": "reference",
                                    "target": {
                                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                      "qualifiedName": "ReturnType"
                                    },
                                    "typeArguments": [
                                      {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "packages/react-router-dev/config/routes.ts",
                                          "qualifiedName": "DefineRoutesFunction"
                                        },
                                        "name": "DefineRoutesFunction",
                                        "package": "@react-router/dev"
                                      }
                                    ],
                                    "name": "ReturnType",
                                    "package": "typescript"
                                  }
                                ],
                                "name": "Promise",
                                "package": "typescript"
                              }
                            ]
                          }
                        }
                      ]
                    }
                  }
                },
                {
                  "id": 2771,
                  "name": "serverBuildFile",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The file name of the server build output. This file\nshould end in a "
                      },
                      {
                        "kind": "code",
                        "text": "`.js`"
                      },
                      {
                        "kind": "text",
                        "text": " extension and should be deployed to your server.\nDefaults to "
                      },
                      {
                        "kind": "code",
                        "text": "`\"index.js\"`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 155,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L155"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2772,
                  "name": "serverBundles",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "A function for assigning routes to different server bundles. This\nfunction should return a server bundle ID which will be used as the\nbundle's directory name within the server build directory."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 161,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L161"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 2746,
                    "name": "ServerBundlesFunction",
                    "package": "@react-router/dev"
                  }
                },
                {
                  "id": 2773,
                  "name": "serverModuleFormat",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "The output format of the server build. Defaults to \"esm\"."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 110,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L110"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router-dev/config.ts",
                      "qualifiedName": "ServerModuleFormat"
                    },
                    "name": "ServerModuleFormat",
                    "package": "@react-router/dev"
                  }
                },
                {
                  "id": 2774,
                  "name": "ssr",
                  "variant": "declaration",
                  "kind": 1024,
                  "flags": {
                    "isOptional": true
                  },
                  "comment": {
                    "summary": [
                      {
                        "kind": "text",
                        "text": "Enable server-side rendering for your application. Disable to use \"SPA\nMode\", which will request the "
                      },
                      {
                        "kind": "code",
                        "text": "`/`"
                      },
                      {
                        "kind": "text",
                        "text": " path at build-time and save it as an\n"
                      },
                      {
                        "kind": "code",
                        "text": "`index.html`"
                      },
                      {
                        "kind": "text",
                        "text": " file with your assets so your application can be deployed as a\nSPA without server-rendering. Default's to "
                      },
                      {
                        "kind": "code",
                        "text": "`true`"
                      },
                      {
                        "kind": "text",
                        "text": "."
                      }
                    ]
                  },
                  "sources": [
                    {
                      "fileName": "config.ts",
                      "line": 168,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L168"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "boolean"
                  }
                }
              ],
              "groups": [
                {
                  "title": "Properties",
                  "children": [
                    2754, 2755, 2756, 2757, 2758, 2762, 2763, 2766, 2767, 2771,
                    2772, 2773, 2774
                  ]
                }
              ],
              "sources": [
                {
                  "fileName": "config.ts",
                  "line": 89,
                  "character": 31,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/config.ts#L89"
                }
              ]
            }
          }
        },
        {
          "id": 2775,
          "name": "vitePlugin",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "vite/index.ts",
              "line": 6,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/vite/index.ts#L6"
            }
          ],
          "signatures": [
            {
              "id": 2776,
              "name": "vitePlugin",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "vite/index.ts",
                  "line": 6,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-dev/vite/index.ts#L6"
                }
              ],
              "parameters": [
                {
                  "id": 2777,
                  "name": "config",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": 2752,
                    "name": "VitePluginConfig",
                    "package": "@react-router/dev"
                  }
                }
              ],
              "type": {
                "type": "array",
                "elementType": {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "node_modules/.pnpm/vite@5.1.3_@types+node@18.19.26/node_modules/vite/dist/node/index.d.ts",
                    "qualifiedName": "Plugin"
                  },
                  "typeArguments": [
                    {
                      "type": "intrinsic",
                      "name": "any"
                    }
                  ],
                  "name": "Plugin",
                  "package": "vite"
                }
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Namespaces",
          "children": [2697]
        },
        {
          "title": "Type Aliases",
          "children": [2701, 2730, 2731, 2746, 2752]
        },
        {
          "title": "Functions",
          "children": [2775]
        }
      ],
      "readme": [
        {
          "kind": "text",
          "text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpx create-remix@latest\n```"
        },
        {
          "kind": "text",
          "text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
        }
      ]
    },
    {
      "id": 2778,
      "name": "react-router-dom",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "# React Router DOM\n\nThe "
        },
        {
          "kind": "code",
          "text": "`react-router-dom`"
        },
        {
          "kind": "text",
          "text": " package is deprecated and only kept around for backwards-compatibility. It re-exports everything from the "
        },
        {
          "kind": "code",
          "text": "`react-router`"
        },
        {
          "kind": "text",
          "text": " package - you should convert your applications to import everything from "
        },
        {
          "kind": "code",
          "text": "`react-router`"
        },
        {
          "kind": "text",
          "text": " in v7 and beyond."
        }
      ]
    },
    {
      "id": 2779,
      "name": "@react-router/express",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 2780,
          "name": "GetLoadContextFunction",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "comment": {
            "summary": [
              {
                "kind": "text",
                "text": "A function that returns the value to use as "
              },
              {
                "kind": "code",
                "text": "`context`"
              },
              {
                "kind": "text",
                "text": " in route "
              },
              {
                "kind": "code",
                "text": "`loader`"
              },
              {
                "kind": "text",
                "text": " and\n"
              },
              {
                "kind": "code",
                "text": "`action`"
              },
              {
                "kind": "text",
                "text": " functions.\n\nYou can think of this as an escape hatch that allows you to pass\nenvironment/platform-specific values through to your loader/action, such as\nvalues that are generated by Express middleware like "
              },
              {
                "kind": "code",
                "text": "`req.session`"
              },
              {
                "kind": "text",
                "text": "."
              }
            ]
          },
          "sources": [
            {
              "fileName": "server.ts",
              "line": 21,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L21"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2781,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "server.ts",
                  "line": 21,
                  "character": 37,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L21"
                }
              ],
              "signatures": [
                {
                  "id": 2782,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2783,
                      "name": "req",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
                          "qualifiedName": "e.Request"
                        },
                        "name": "express.Request",
                        "package": "@types/express",
                        "qualifiedName": "e.Request"
                      }
                    },
                    {
                      "id": 2784,
                      "name": "res",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
                          "qualifiedName": "e.Response"
                        },
                        "name": "express.Response",
                        "package": "@types/express",
                        "qualifiedName": "e.Response"
                      }
                    }
                  ],
                  "type": {
                    "type": "union",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Promise"
                        },
                        "typeArguments": [
                          {
                            "type": "reference",
                            "target": 136,
                            "name": "AppLoadContext",
                            "package": "react-router"
                          }
                        ],
                        "name": "Promise",
                        "package": "typescript"
                      },
                      {
                        "type": "reference",
                        "target": 136,
                        "name": "AppLoadContext",
                        "package": "react-router"
                      }
                    ]
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2785,
          "name": "RequestHandler",
          "variant": "declaration",
          "kind": 2097152,
          "flags": {},
          "sources": [
            {
              "fileName": "server.ts",
              "line": 26,
              "character": 12,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L26"
            }
          ],
          "type": {
            "type": "reflection",
            "declaration": {
              "id": 2786,
              "name": "__type",
              "variant": "declaration",
              "kind": 65536,
              "flags": {},
              "sources": [
                {
                  "fileName": "server.ts",
                  "line": 26,
                  "character": 29,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L26"
                }
              ],
              "signatures": [
                {
                  "id": 2787,
                  "name": "__type",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "parameters": [
                    {
                      "id": 2788,
                      "name": "req",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
                          "qualifiedName": "e.Request"
                        },
                        "name": "express.Request",
                        "package": "@types/express",
                        "qualifiedName": "e.Request"
                      }
                    },
                    {
                      "id": 2789,
                      "name": "res",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
                          "qualifiedName": "e.Response"
                        },
                        "name": "express.Response",
                        "package": "@types/express",
                        "qualifiedName": "e.Response"
                      }
                    },
                    {
                      "id": 2790,
                      "name": "next",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+express@4.17.21/node_modules/@types/express/index.d.ts",
                          "qualifiedName": "e.NextFunction"
                        },
                        "name": "express.NextFunction",
                        "package": "@types/express",
                        "qualifiedName": "e.NextFunction"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            }
          }
        },
        {
          "id": 2791,
          "name": "createRequestHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "server.ts",
              "line": 35,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L35"
            }
          ],
          "signatures": [
            {
              "id": 2792,
              "name": "createRequestHandler",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Returns a request handler for Express that serves the response using Remix."
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "server.ts",
                  "line": 35,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L35"
                }
              ],
              "parameters": [
                {
                  "id": 2793,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reflection",
                    "declaration": {
                      "id": 2794,
                      "name": "__type",
                      "variant": "declaration",
                      "kind": 65536,
                      "flags": {},
                      "children": [
                        {
                          "id": 2795,
                          "name": "build",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {},
                          "sources": [
                            {
                              "fileName": "server.ts",
                              "line": 40,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L40"
                            }
                          ],
                          "type": {
                            "type": "union",
                            "types": [
                              {
                                "type": "reference",
                                "target": 1624,
                                "name": "ServerBuild",
                                "package": "react-router"
                              },
                              {
                                "type": "reflection",
                                "declaration": {
                                  "id": 2796,
                                  "name": "__type",
                                  "variant": "declaration",
                                  "kind": 65536,
                                  "flags": {},
                                  "sources": [
                                    {
                                      "fileName": "server.ts",
                                      "line": 40,
                                      "character": 24,
                                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L40"
                                    }
                                  ],
                                  "signatures": [
                                    {
                                      "id": 2797,
                                      "name": "__type",
                                      "variant": "signature",
                                      "kind": 4096,
                                      "flags": {},
                                      "sources": [
                                        {
                                          "fileName": "server.ts",
                                          "line": 40,
                                          "character": 24,
                                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L40"
                                        }
                                      ],
                                      "type": {
                                        "type": "reference",
                                        "target": {
                                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                                          "qualifiedName": "Promise"
                                        },
                                        "typeArguments": [
                                          {
                                            "type": "reference",
                                            "target": 1624,
                                            "name": "ServerBuild",
                                            "package": "react-router"
                                          }
                                        ],
                                        "name": "Promise",
                                        "package": "typescript"
                                      }
                                    }
                                  ]
                                }
                              }
                            ]
                          }
                        },
                        {
                          "id": 2798,
                          "name": "getLoadContext",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "server.ts",
                              "line": 41,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L41"
                            }
                          ],
                          "type": {
                            "type": "reference",
                            "target": 2780,
                            "name": "GetLoadContextFunction",
                            "package": "@react-router/express"
                          }
                        },
                        {
                          "id": 2799,
                          "name": "mode",
                          "variant": "declaration",
                          "kind": 1024,
                          "flags": {
                            "isOptional": true
                          },
                          "sources": [
                            {
                              "fileName": "server.ts",
                              "line": 42,
                              "character": 2,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L42"
                            }
                          ],
                          "type": {
                            "type": "intrinsic",
                            "name": "string"
                          },
                          "defaultValue": "process.env.NODE_ENV"
                        }
                      ],
                      "groups": [
                        {
                          "title": "Properties",
                          "children": [2795, 2798, 2799]
                        }
                      ],
                      "sources": [
                        {
                          "fileName": "server.ts",
                          "line": 39,
                          "character": 3,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-express/server.ts#L39"
                        }
                      ]
                    }
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 2785,
                "name": "RequestHandler",
                "package": "@react-router/express"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Type Aliases",
          "children": [2780, 2785]
        },
        {
          "title": "Functions",
          "children": [2791]
        }
      ],
      "readme": [
        {
          "kind": "text",
          "text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpx create-remix@latest\n```"
        },
        {
          "kind": "text",
          "text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
        }
      ]
    },
    {
      "id": 2800,
      "name": "@react-router/node",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "children": [
        {
          "id": 2801,
          "name": "NodeOnDiskFile",
          "variant": "declaration",
          "kind": 128,
          "flags": {},
          "children": [
            {
              "id": 2802,
              "name": "constructor",
              "variant": "declaration",
              "kind": 512,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 170,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L170"
                }
              ],
              "signatures": [
                {
                  "id": 2803,
                  "name": "new NodeOnDiskFile",
                  "variant": "signature",
                  "kind": 16384,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 170,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L170"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 2804,
                      "name": "filepath",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2805,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {},
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    },
                    {
                      "id": 2806,
                      "name": "slicer",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "reflection",
                        "declaration": {
                          "id": 2807,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 2808,
                              "name": "end",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                                  "line": 173,
                                  "character": 38,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            },
                            {
                              "id": 2809,
                              "name": "start",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {},
                              "sources": [
                                {
                                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                                  "line": 173,
                                  "character": 23,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [2808, 2809]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "react-router-node/upload/fileUploadHandler.ts",
                              "line": 173,
                              "character": 21,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                            }
                          ]
                        }
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": 2801,
                    "name": "NodeOnDiskFile",
                    "package": "@react-router/node"
                  }
                }
              ]
            },
            {
              "id": 2810,
              "name": "filepath",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true
              },
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 171,
                  "character": 12,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L171"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              }
            },
            {
              "id": 2811,
              "name": "lastModified",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 163,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L163"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "number"
              },
              "defaultValue": "0",
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.lastModified"
              }
            },
            {
              "id": 2812,
              "name": "name",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 162,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L162"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.name"
              }
            },
            {
              "id": 2813,
              "name": "prototype",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 168,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L168"
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "File"
                },
                "name": "File",
                "package": "typescript"
              },
              "defaultValue": "File.prototype"
            },
            {
              "id": 2814,
              "name": "slicer",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPrivate": true,
                "isOptional": true
              },
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 173,
                  "character": 12,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                }
              ],
              "type": {
                "type": "reflection",
                "declaration": {
                  "id": 2815,
                  "name": "__type",
                  "variant": "declaration",
                  "kind": 65536,
                  "flags": {},
                  "children": [
                    {
                      "id": 2816,
                      "name": "end",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "react-router-node/upload/fileUploadHandler.ts",
                          "line": 173,
                          "character": 38,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 2817,
                      "name": "start",
                      "variant": "declaration",
                      "kind": 1024,
                      "flags": {},
                      "sources": [
                        {
                          "fileName": "react-router-node/upload/fileUploadHandler.ts",
                          "line": 173,
                          "character": 23,
                          "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                        }
                      ],
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    }
                  ],
                  "groups": [
                    {
                      "title": "Properties",
                      "children": [2816, 2817]
                    }
                  ],
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 173,
                      "character": 21,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L173"
                    }
                  ]
                }
              }
            },
            {
              "id": 2818,
              "name": "type",
              "variant": "declaration",
              "kind": 1024,
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 172,
                  "character": 11,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L172"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.type"
              }
            },
            {
              "id": 2819,
              "name": "webkitRelativePath",
              "variant": "declaration",
              "kind": 1024,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 164,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L164"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "string"
              },
              "defaultValue": "\"\"",
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.webkitRelativePath"
              }
            },
            {
              "id": 2820,
              "name": "[toStringTag]",
              "variant": "declaration",
              "kind": 262144,
              "flags": {
                "isPublic": true
              },
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 241,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L241"
                }
              ],
              "getSignature": {
                "id": 2821,
                "name": "[toStringTag]",
                "variant": "signature",
                "kind": 524288,
                "flags": {},
                "sources": [
                  {
                    "fileName": "react-router-node/upload/fileUploadHandler.ts",
                    "line": 241,
                    "character": 13,
                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L241"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "string"
                }
              }
            },
            {
              "id": 2822,
              "name": "size",
              "variant": "declaration",
              "kind": 262144,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 178,
                  "character": 6,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L178"
                }
              ],
              "getSignature": {
                "id": 2823,
                "name": "size",
                "variant": "signature",
                "kind": 524288,
                "flags": {},
                "sources": [
                  {
                    "fileName": "react-router-node/upload/fileUploadHandler.ts",
                    "line": 178,
                    "character": 6,
                    "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L178"
                  }
                ],
                "type": {
                  "type": "intrinsic",
                  "name": "number"
                },
                "implementationOf": {
                  "type": "reference",
                  "target": -1,
                  "name": "Omit.size"
                }
              },
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.size"
              }
            },
            {
              "id": 2824,
              "name": "arrayBuffer",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 209,
                  "character": 8,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L209"
                }
              ],
              "signatures": [
                {
                  "id": 2825,
                  "name": "arrayBuffer",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 209,
                      "character": 8,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L209"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "ArrayBuffer"
                        },
                        "name": "ArrayBuffer",
                        "package": "typescript"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "target": -1,
                    "name": "Omit.arrayBuffer"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.arrayBuffer"
              }
            },
            {
              "id": 2826,
              "name": "getFilePath",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 248,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L248"
                }
              ],
              "signatures": [
                {
                  "id": 2827,
                  "name": "getFilePath",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 248,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L248"
                    }
                  ],
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                }
              ]
            },
            {
              "id": 2828,
              "name": "remove",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 245,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L245"
                }
              ],
              "signatures": [
                {
                  "id": 2829,
                  "name": "remove",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 245,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L245"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "void"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  }
                }
              ]
            },
            {
              "id": 2830,
              "name": "slice",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 189,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L189"
                }
              ],
              "signatures": [
                {
                  "id": 2831,
                  "name": "slice",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 189,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L189"
                    }
                  ],
                  "parameters": [
                    {
                      "id": 2832,
                      "name": "start",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 2833,
                      "name": "end",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "number"
                      }
                    },
                    {
                      "id": 2834,
                      "name": "type",
                      "variant": "param",
                      "kind": 32768,
                      "flags": {
                        "isOptional": true
                      },
                      "type": {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "Blob"
                    },
                    "name": "Blob",
                    "package": "typescript"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "target": -1,
                    "name": "Omit.slice"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.slice"
              }
            },
            {
              "id": 2835,
              "name": "stream",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 225,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L225"
                },
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 226,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L226"
                },
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 227,
                  "character": 2,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L227"
                }
              ],
              "signatures": [
                {
                  "id": 2836,
                  "name": "stream",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 225,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L225"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "ReadableStream"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ReadableStream",
                    "package": "typescript"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "target": -1,
                    "name": "Omit.stream"
                  }
                },
                {
                  "id": 2837,
                  "name": "stream",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 226,
                      "character": 2,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L226"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
                      "qualifiedName": "__global.NodeJS.ReadableStream"
                    },
                    "name": "ReadableStream",
                    "package": "@types/node",
                    "qualifiedName": "__global.NodeJS.ReadableStream"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "target": -1,
                    "name": "Omit.stream"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.stream"
              }
            },
            {
              "id": 2838,
              "name": "text",
              "variant": "declaration",
              "kind": 2048,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 237,
                  "character": 8,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L237"
                }
              ],
              "signatures": [
                {
                  "id": 2839,
                  "name": "text",
                  "variant": "signature",
                  "kind": 4096,
                  "flags": {},
                  "sources": [
                    {
                      "fileName": "react-router-node/upload/fileUploadHandler.ts",
                      "line": 237,
                      "character": 8,
                      "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L237"
                    }
                  ],
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Promise"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "string"
                      }
                    ],
                    "name": "Promise",
                    "package": "typescript"
                  },
                  "implementationOf": {
                    "type": "reference",
                    "target": -1,
                    "name": "Omit.text"
                  }
                }
              ],
              "implementationOf": {
                "type": "reference",
                "target": -1,
                "name": "Omit.text"
              }
            }
          ],
          "groups": [
            {
              "title": "Constructors",
              "children": [2802]
            },
            {
              "title": "Properties",
              "children": [2810, 2811, 2812, 2813, 2814, 2818, 2819]
            },
            {
              "title": "Accessors",
              "children": [2820, 2822]
            },
            {
              "title": "Methods",
              "children": [2824, 2826, 2828, 2830, 2835, 2838]
            }
          ],
          "sources": [
            {
              "fileName": "react-router-node/upload/fileUploadHandler.ts",
              "line": 161,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L161"
            }
          ],
          "implementedTypes": [
            {
              "type": "reference",
              "target": {
                "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                "qualifiedName": "Omit"
              },
              "typeArguments": [
                {
                  "type": "reference",
                  "target": {
                    "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                    "qualifiedName": "File"
                  },
                  "name": "File",
                  "package": "typescript"
                },
                {
                  "type": "literal",
                  "value": "constructor"
                }
              ],
              "name": "Omit",
              "package": "typescript"
            }
          ]
        },
        {
          "id": 2840,
          "name": "createCookie",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/implementations.ts",
              "line": 10,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L10"
            }
          ],
          "signatures": [
            {
              "id": 2841,
              "name": "createCookie",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/implementations.ts",
                  "line": 10,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L10"
                }
              ],
              "parameters": [
                {
                  "id": 2842,
                  "name": "name",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intrinsic",
                    "name": "string"
                  }
                },
                {
                  "id": 2843,
                  "name": "cookieOptions",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": 1971,
                    "name": "CookieOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 147,
                "name": "Cookie",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2844,
          "name": "createCookieSessionStorage",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/implementations.ts",
              "line": 11,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L11"
            }
          ],
          "signatures": [
            {
              "id": 2845,
              "name": "createCookieSessionStorage",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/implementations.ts",
                  "line": 11,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L11"
                }
              ],
              "typeParameter": [
                {
                  "id": 2846,
                  "name": "Data",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 1670,
                    "name": "SessionData",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2847,
                  "name": "FlashData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 2846,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2848,
                  "name": "options",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
                      "qualifiedName": "CookieSessionStorageOptions"
                    },
                    "name": "CookieSessionStorageOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1698,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2846,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  },
                  {
                    "type": "reference",
                    "target": 2847,
                    "name": "FlashData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "SessionStorage",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2849,
          "name": "createFileSessionStorage",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/sessions/fileStorage.ts",
              "line": 33,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/sessions/fileStorage.ts#L33"
            }
          ],
          "signatures": [
            {
              "id": 2850,
              "name": "createFileSessionStorage",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "comment": {
                "summary": [
                  {
                    "kind": "text",
                    "text": "Creates a SessionStorage that stores session data on a filesystem.\n\nThe advantage of using this instead of cookie session storage is that\nfiles may contain much more data than cookies."
                  }
                ],
                "blockTags": [
                  {
                    "tag": "@see",
                    "content": [
                      {
                        "kind": "text",
                        "text": "https://remix.run/utils/sessions#createfilesessionstorage-node"
                      }
                    ]
                  }
                ]
              },
              "sources": [
                {
                  "fileName": "react-router-node/sessions/fileStorage.ts",
                  "line": 33,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/sessions/fileStorage.ts#L33"
                }
              ],
              "typeParameter": [
                {
                  "id": 2851,
                  "name": "Data",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 1670,
                    "name": "SessionData",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2852,
                  "name": "FlashData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 2851,
                    "name": "Data",
                    "package": "@react-router/node",
                    "refersToTypeParameter": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2853,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
                      "qualifiedName": "FileSessionStorageOptions"
                    },
                    "name": "FileSessionStorageOptions",
                    "package": "@react-router/node"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1698,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2851,
                    "name": "Data",
                    "package": "@react-router/node",
                    "refersToTypeParameter": true
                  },
                  {
                    "type": "reference",
                    "target": 2852,
                    "name": "FlashData",
                    "package": "@react-router/node",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "SessionStorage",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2854,
          "name": "createMemorySessionStorage",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/implementations.ts",
              "line": 14,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L14"
            }
          ],
          "signatures": [
            {
              "id": 2855,
              "name": "createMemorySessionStorage",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/implementations.ts",
                  "line": 14,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L14"
                }
              ],
              "typeParameter": [
                {
                  "id": 2856,
                  "name": "Data",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 1670,
                    "name": "SessionData",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2857,
                  "name": "FlashData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 2856,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2858,
                  "name": "options",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
                      "qualifiedName": "MemorySessionStorageOptions"
                    },
                    "name": "MemorySessionStorageOptions",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1698,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2856,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  },
                  {
                    "type": "reference",
                    "target": 2857,
                    "name": "FlashData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "SessionStorage",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2859,
          "name": "createReadableStreamFromReadable",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/stream.ts",
              "line": 66,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L66"
            }
          ],
          "signatures": [
            {
              "id": 2860,
              "name": "createReadableStreamFromReadable",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/stream.ts",
                  "line": 66,
                  "character": 48,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L66"
                }
              ],
              "parameters": [
                {
                  "id": 2861,
                  "name": "source",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "intersection",
                    "types": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/stream.d.ts",
                          "qualifiedName": "internal.Readable"
                        },
                        "name": "Readable",
                        "package": "@types/node",
                        "qualifiedName": "internal.Readable"
                      },
                      {
                        "type": "reflection",
                        "declaration": {
                          "id": 2862,
                          "name": "__type",
                          "variant": "declaration",
                          "kind": 65536,
                          "flags": {},
                          "children": [
                            {
                              "id": 2863,
                              "name": "readableHighWaterMark",
                              "variant": "declaration",
                              "kind": 1024,
                              "flags": {
                                "isOptional": true
                              },
                              "sources": [
                                {
                                  "fileName": "react-router-node/stream.ts",
                                  "line": 67,
                                  "character": 23,
                                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L67"
                                }
                              ],
                              "type": {
                                "type": "intrinsic",
                                "name": "number"
                              }
                            }
                          ],
                          "groups": [
                            {
                              "title": "Properties",
                              "children": [2863]
                            }
                          ],
                          "sources": [
                            {
                              "fileName": "react-router-node/stream.ts",
                              "line": 67,
                              "character": 21,
                              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L67"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                  "qualifiedName": "ReadableStream"
                },
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                      "qualifiedName": "Uint8Array"
                    },
                    "name": "Uint8Array",
                    "package": "typescript"
                  }
                ],
                "name": "ReadableStream",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2864,
          "name": "createSessionStorage",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/implementations.ts",
              "line": 13,
              "character": 13,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L13"
            }
          ],
          "signatures": [
            {
              "id": 2865,
              "name": "createSessionStorage",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/implementations.ts",
                  "line": 13,
                  "character": 13,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/implementations.ts#L13"
                }
              ],
              "typeParameter": [
                {
                  "id": 2866,
                  "name": "Data",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 1670,
                    "name": "SessionData",
                    "package": "react-router"
                  }
                },
                {
                  "id": 2867,
                  "name": "FlashData",
                  "variant": "typeParam",
                  "kind": 131072,
                  "flags": {},
                  "default": {
                    "type": "reference",
                    "target": 2866,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                }
              ],
              "parameters": [
                {
                  "id": 2868,
                  "name": "strategy",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": 1673,
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": 2866,
                        "name": "Data",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      },
                      {
                        "type": "reference",
                        "target": 2867,
                        "name": "FlashData",
                        "package": "react-router",
                        "refersToTypeParameter": true
                      }
                    ],
                    "name": "SessionIdStorageStrategy",
                    "package": "react-router"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": 1698,
                "typeArguments": [
                  {
                    "type": "reference",
                    "target": 2866,
                    "name": "Data",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  },
                  {
                    "type": "reference",
                    "target": 2867,
                    "name": "FlashData",
                    "package": "react-router",
                    "refersToTypeParameter": true
                  }
                ],
                "name": "SessionStorage",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2869,
          "name": "installGlobals",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/globals.ts",
              "line": 35,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/globals.ts#L35"
            }
          ],
          "signatures": [
            {
              "id": 2870,
              "name": "installGlobals",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/globals.ts",
                  "line": 35,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/globals.ts#L35"
                }
              ],
              "type": {
                "type": "intrinsic",
                "name": "void"
              }
            }
          ]
        },
        {
          "id": 2871,
          "name": "readableStreamToString",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/stream.ts",
              "line": 46,
              "character": 22,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L46"
            }
          ],
          "signatures": [
            {
              "id": 2872,
              "name": "readableStreamToString",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/stream.ts",
                  "line": 46,
                  "character": 22,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L46"
                }
              ],
              "parameters": [
                {
                  "id": 2873,
                  "name": "stream",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "ReadableStream"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Uint8Array"
                        },
                        "name": "Uint8Array",
                        "package": "typescript"
                      }
                    ],
                    "name": "ReadableStream",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2874,
                  "name": "encoding",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {
                    "isOptional": true
                  },
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/buffer.d.ts",
                      "qualifiedName": "__global.BufferEncoding"
                    },
                    "name": "BufferEncoding",
                    "package": "@types/node",
                    "qualifiedName": "__global.BufferEncoding"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "string"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2875,
          "name": "unstable_createFileUploadHandler",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/upload/fileUploadHandler.ts",
              "line": 92,
              "character": 16,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L92"
            }
          ],
          "signatures": [
            {
              "id": 2876,
              "name": "unstable_createFileUploadHandler",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/upload/fileUploadHandler.ts",
                  "line": 92,
                  "character": 16,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/upload/fileUploadHandler.ts#L92"
                }
              ],
              "parameters": [
                {
                  "id": 2877,
                  "name": "__namedParameters",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
                      "qualifiedName": "FileUploadHandlerOptions"
                    },
                    "name": "FileUploadHandlerOptions",
                    "package": "@react-router/node"
                  },
                  "defaultValue": "{}"
                }
              ],
              "type": {
                "type": "reference",
                "target": 2281,
                "name": "UploadHandler",
                "package": "react-router"
              }
            }
          ]
        },
        {
          "id": 2878,
          "name": "writeAsyncIterableToWritable",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/stream.ts",
              "line": 31,
              "character": 22,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L31"
            }
          ],
          "signatures": [
            {
              "id": 2879,
              "name": "writeAsyncIterableToWritable",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/stream.ts",
                  "line": 31,
                  "character": 22,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L31"
                }
              ],
              "parameters": [
                {
                  "id": 2880,
                  "name": "iterable",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.asynciterable.d.ts",
                      "qualifiedName": "AsyncIterable"
                    },
                    "typeArguments": [
                      {
                        "type": "reference",
                        "target": {
                          "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                          "qualifiedName": "Uint8Array"
                        },
                        "name": "Uint8Array",
                        "package": "typescript"
                      }
                    ],
                    "name": "AsyncIterable",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2881,
                  "name": "writable",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/stream.d.ts",
                      "qualifiedName": "internal.Writable"
                    },
                    "name": "Writable",
                    "package": "@types/node",
                    "qualifiedName": "internal.Writable"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        },
        {
          "id": 2882,
          "name": "writeReadableStreamToWritable",
          "variant": "declaration",
          "kind": 64,
          "flags": {},
          "sources": [
            {
              "fileName": "react-router-node/stream.ts",
              "line": 4,
              "character": 22,
              "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L4"
            }
          ],
          "signatures": [
            {
              "id": 2883,
              "name": "writeReadableStreamToWritable",
              "variant": "signature",
              "kind": 4096,
              "flags": {},
              "sources": [
                {
                  "fileName": "react-router-node/stream.ts",
                  "line": 4,
                  "character": 22,
                  "url": "https://github.com/remix-run/react-router/blob/4996fbe2be0f4817fd82701b3672623a16224e01/packages/react-router-node/stream.ts#L4"
                }
              ],
              "parameters": [
                {
                  "id": 2884,
                  "name": "stream",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.dom.d.ts",
                      "qualifiedName": "ReadableStream"
                    },
                    "typeArguments": [
                      {
                        "type": "intrinsic",
                        "name": "any"
                      }
                    ],
                    "name": "ReadableStream",
                    "package": "typescript"
                  }
                },
                {
                  "id": 2885,
                  "name": "writable",
                  "variant": "param",
                  "kind": 32768,
                  "flags": {},
                  "type": {
                    "type": "reference",
                    "target": {
                      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/stream.d.ts",
                      "qualifiedName": "internal.Writable"
                    },
                    "name": "Writable",
                    "package": "@types/node",
                    "qualifiedName": "internal.Writable"
                  }
                }
              ],
              "type": {
                "type": "reference",
                "target": {
                  "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
                  "qualifiedName": "Promise"
                },
                "typeArguments": [
                  {
                    "type": "intrinsic",
                    "name": "void"
                  }
                ],
                "name": "Promise",
                "package": "typescript"
              }
            }
          ]
        }
      ],
      "groups": [
        {
          "title": "Classes",
          "children": [2801]
        },
        {
          "title": "Functions",
          "children": [
            2840, 2844, 2849, 2854, 2859, 2864, 2869, 2871, 2875, 2878, 2882
          ]
        }
      ],
      "readme": [
        {
          "kind": "text",
          "text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpx create-remix@latest\n```"
        },
        {
          "kind": "text",
          "text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
        }
      ]
    },
    {
      "id": 2886,
      "name": "@react-router/serve",
      "variant": "declaration",
      "kind": 2,
      "flags": {},
      "readme": [
        {
          "kind": "text",
          "text": "# Welcome to Remix!\n\n[Remix](https://remix.run) is a web framework that helps you build better websites with React.\n\nTo get started, open a new shell and run:\n\n"
        },
        {
          "kind": "code",
          "text": "```sh\nnpx create-remix@latest\n```"
        },
        {
          "kind": "text",
          "text": "\n\nThen follow the prompts you see in your terminal.\n\nFor more information about Remix, [visit remix.run](https://remix.run)!"
        }
      ]
    }
  ],
  "packageName": "@remix-run/react-router",
  "readme": [
    {
      "kind": "text",
      "text": "# Welcome to React Router &middot; [![npm package][npm-badge]][npm] [![build][build-badge]][build]\n\n[npm-badge]: https://img.shields.io/npm/v/react-router-dom.svg?style=flat-square\n[npm]: https://www.npmjs.org/package/react-router-dom\n[build-badge]: https://img.shields.io/github/actions/workflow/status/remix-run/react-router/test.yml?branch=dev&style=square\n[build]: https://github.com/remix-run/react-router/actions/workflows/test.yml\n\nReact Router is a lightweight, fully-featured routing library for the [React](https://reactjs.org) JavaScript library. React Router runs anywhere React runs; on the web, on the server with node.js, or on any other Javascript platform that supports the [Web Fetch API][fetch-api].\n\nIf you're new to React Router, we recommend you start with [the tutorial](https://reactrouter.com/en/main/start/tutorial).\n\nIf you're migrating to v6 from v5 (or v4, which is the same as v5), check out [the migration guide](/docs/upgrading/v5.md). If you're migrating from Reach Router, check out [the migration guide for Reach Router](/docs/upgrading/reach.md). If you need to find the code for v5, [it is on the "
    },
    {
      "kind": "code",
      "text": "`v5`"
    },
    {
      "kind": "text",
      "text": " branch](https://github.com/remix-run/react-router/tree/v5).\n\nDocumentation for v6 can be found [on our website](https://reactrouter.com/).\n\n## Contributing\n\nThere are many different ways to contribute to React Router's development. If you're interested, check out [our contributing guidelines](CONTRIBUTING.md) to learn how you can get involved.\n\n## Packages\n\nThis repository is a monorepo containing the following packages:\n\n- ["
    },
    {
      "kind": "code",
      "text": "`@react-router/dev`"
    },
    {
      "kind": "text",
      "text": "](/packages/react-router-dev)\n- ["
    },
    {
      "kind": "code",
      "text": "`@react-router/express`"
    },
    {
      "kind": "text",
      "text": "](/packages/react-router-express)\n- ["
    },
    {
      "kind": "code",
      "text": "`@react-router/node`"
    },
    {
      "kind": "text",
      "text": "](/packages/react-router-node)\n- ["
    },
    {
      "kind": "code",
      "text": "`@react-router/serve`"
    },
    {
      "kind": "text",
      "text": "](/packages/react-router-serve)\n- ["
    },
    {
      "kind": "code",
      "text": "`react-router`"
    },
    {
      "kind": "text",
      "text": "](/packages/react-router)\n- ["
    },
    {
      "kind": "code",
      "text": "`react-router-dom`"
    },
    {
      "kind": "text",
      "text": "](/packages/react-router-dom)\n\n## Changes\n\nDetailed release notes for a given version can be found [on our releases page](https://github.com/remix-run/react-router/releases).\n\n## Funding\n\nYou may provide financial support for this project by donating [via Open Collective](https://opencollective.com/react-router). Thank you for your support!\n\n## About\n\nReact Router is developed and maintained by [Remix Software](https://remix.run) and many [amazing contributors](https://github.com/remix-run/react-router/graphs/contributors).\n\n[fetch-api]: https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API"
    }
  ],
  "symbolIdMap": {
    "1": {
      "sourceFileName": "packages/react-router/index.ts",
      "qualifiedName": ""
    },
    "2": {
      "sourceFileName": "packages/react-router/index.ts",
      "qualifiedName": "createRoutesFromElements"
    },
    "3": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Action"
    },
    "4": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Action.Pop"
    },
    "5": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Action.Push"
    },
    "6": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Action.Replace"
    },
    "7": {
      "sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
      "qualifiedName": "ServerMode"
    },
    "8": {
      "sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
      "qualifiedName": "ServerMode.Development"
    },
    "9": {
      "sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
      "qualifiedName": "ServerMode.Production"
    },
    "10": {
      "sourceFileName": "packages/react-router/lib/server-runtime/mode.ts",
      "qualifiedName": "ServerMode.Test"
    },
    "11": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AbortedDeferredError"
    },
    "12": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "ErrorConstructor.__new"
    },
    "13": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "AbortedDeferredError"
    },
    "14": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "message"
    },
    "15": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Error.message"
    },
    "16": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Error.name"
    },
    "17": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Error.stack"
    },
    "18": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
    },
    "19": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__type"
    },
    "20": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__type"
    },
    "21": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "err"
    },
    "22": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "stackTraces"
    },
    "23": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.stackTraceLimit"
    },
    "24": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.captureStackTrace"
    },
    "25": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.captureStackTrace"
    },
    "26": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "targetObject"
    },
    "27": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "constructorOpt"
    },
    "28": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "MaxPartSizeExceededError"
    },
    "29": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "MaxPartSizeExceededError.__constructor"
    },
    "30": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "MaxPartSizeExceededError"
    },
    "31": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "field"
    },
    "32": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "maxBytes"
    },
    "33": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "MaxPartSizeExceededError.field"
    },
    "34": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/errors.ts",
      "qualifiedName": "MaxPartSizeExceededError.maxBytes"
    },
    "35": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Error.message"
    },
    "36": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Error.name"
    },
    "37": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Error.stack"
    },
    "38": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.prepareStackTrace"
    },
    "39": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__type"
    },
    "40": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__type"
    },
    "41": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "err"
    },
    "42": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "stackTraces"
    },
    "43": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.stackTraceLimit"
    },
    "44": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.captureStackTrace"
    },
    "45": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "__global.ErrorConstructor.captureStackTrace"
    },
    "46": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "targetObject"
    },
    "47": {
      "sourceFileName": "node_modules/.pnpm/@types+node@18.19.26/node_modules/@types/node/globals.d.ts",
      "qualifiedName": "constructorOpt"
    },
    "48": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData"
    },
    "49": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.__constructor"
    },
    "50": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData"
    },
    "51": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "data"
    },
    "52": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "responseInit"
    },
    "53": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.abortPromise"
    },
    "54": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.controller"
    },
    "55": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.data"
    },
    "56": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.deferredKeys"
    },
    "57": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.init"
    },
    "58": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.pendingKeysSet"
    },
    "59": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.subscribers"
    },
    "60": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "61": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "62": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "aborted"
    },
    "63": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "settledKey"
    },
    "64": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.unlistenAbortSignal"
    },
    "65": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "66": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "67": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.done"
    },
    "68": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.done"
    },
    "69": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.pendingKeys"
    },
    "70": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.pendingKeys"
    },
    "71": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.unwrappedData"
    },
    "72": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.unwrappedData"
    },
    "73": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__object"
    },
    "74": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.cancel"
    },
    "75": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.cancel"
    },
    "76": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.emit"
    },
    "77": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.emit"
    },
    "78": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "aborted"
    },
    "79": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "settledKey"
    },
    "80": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.onSettle"
    },
    "81": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.onSettle"
    },
    "82": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "promise"
    },
    "83": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "key"
    },
    "84": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "error"
    },
    "85": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "data"
    },
    "86": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.resolveData"
    },
    "87": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.resolveData"
    },
    "88": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "signal"
    },
    "89": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.subscribe"
    },
    "90": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.subscribe"
    },
    "91": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "fn"
    },
    "92": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "93": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "94": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "aborted"
    },
    "95": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "settledKey"
    },
    "96": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__function"
    },
    "97": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__function"
    },
    "98": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.trackPromise"
    },
    "99": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DeferredData.trackPromise"
    },
    "100": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "key"
    },
    "101": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "value"
    },
    "102": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl"
    },
    "103": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl.__constructor"
    },
    "104": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl"
    },
    "105": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "status"
    },
    "106": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "statusText"
    },
    "107": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "data"
    },
    "108": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "internal"
    },
    "109": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl.data"
    },
    "110": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl.error"
    },
    "111": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl.internal"
    },
    "112": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl.status"
    },
    "113": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponseImpl.statusText"
    },
    "114": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ActionFunction"
    },
    "115": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ActionFunction.Context"
    },
    "116": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ActionFunction"
    },
    "117": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "args"
    },
    "118": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "handlerCtx"
    },
    "119": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ActionFunctionArgs"
    },
    "120": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.context"
    },
    "121": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.params"
    },
    "122": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.request"
    },
    "123": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ActionFunctionArgs.Context"
    },
    "124": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticDataRouteMatch"
    },
    "125": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.params"
    },
    "126": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathname"
    },
    "127": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathnameBase"
    },
    "128": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.route"
    },
    "129": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch"
    },
    "130": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.params"
    },
    "131": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathname"
    },
    "132": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathnameBase"
    },
    "133": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.route"
    },
    "134": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.ParamKey"
    },
    "135": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.RouteObjectType"
    },
    "136": {
      "sourceFileName": "packages/react-router/lib/server-runtime/data.ts",
      "qualifiedName": "AppLoadContext"
    },
    "137": {
      "sourceFileName": "packages/react-router/lib/server-runtime/data.ts",
      "qualifiedName": "AppLoadContext.__index"
    },
    "139": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "AwaitProps"
    },
    "140": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "AwaitProps.children"
    },
    "141": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "AwaitProps.errorElement"
    },
    "142": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "AwaitProps.resolve"
    },
    "143": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "BrowserRouterProps"
    },
    "144": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "BrowserRouterProps.basename"
    },
    "145": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "BrowserRouterProps.children"
    },
    "146": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "BrowserRouterProps.window"
    },
    "147": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie"
    },
    "148": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.expires"
    },
    "149": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.isSigned"
    },
    "150": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.name"
    },
    "151": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.parse"
    },
    "152": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.parse"
    },
    "153": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "cookieHeader"
    },
    "154": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "options"
    },
    "155": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.serialize"
    },
    "156": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "Cookie.serialize"
    },
    "157": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "value"
    },
    "158": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "options"
    },
    "159": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieParseOptions"
    },
    "160": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieParseOptions.decode"
    },
    "161": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieParseOptions.decode"
    },
    "162": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "value"
    },
    "163": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions"
    },
    "164": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.domain"
    },
    "165": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.expires"
    },
    "166": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.httpOnly"
    },
    "167": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.maxAge"
    },
    "168": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.partitioned"
    },
    "169": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.path"
    },
    "170": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.priority"
    },
    "171": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.sameSite"
    },
    "172": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.secure"
    },
    "173": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.encode"
    },
    "174": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "CookieSerializeOptions.encode"
    },
    "175": {
      "sourceFileName": "node_modules/.pnpm/@types+cookie@0.6.0/node_modules/@types/cookie/index.d.ts",
      "qualifiedName": "value"
    },
    "176": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "CookieSignatureOptions"
    },
    "177": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "CookieSignatureOptions.secrets"
    },
    "178": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "DataRouteMatch"
    },
    "179": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.params"
    },
    "180": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathname"
    },
    "181": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathnameBase"
    },
    "182": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.route"
    },
    "183": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "EntryContext"
    },
    "184": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.abortDelay"
    },
    "185": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.criticalCss"
    },
    "186": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.future"
    },
    "187": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.isSpaMode"
    },
    "188": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.manifest"
    },
    "189": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.renderMeta"
    },
    "190": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "191": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.didRenderScripts"
    },
    "192": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.streamCache"
    },
    "193": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "194": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.error"
    },
    "195": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.result"
    },
    "196": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "197": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.done"
    },
    "198": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.value"
    },
    "199": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.routeModules"
    },
    "200": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "EntryContext.serverHandoffStream"
    },
    "201": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.serverHandoffString"
    },
    "202": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "EntryContext.staticHandlerContext"
    },
    "203": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.serializeError"
    },
    "204": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.serializeError"
    },
    "205": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "error"
    },
    "206": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FetcherFormProps"
    },
    "207": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.about"
    },
    "208": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.acceptCharset"
    },
    "209": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.accessKey"
    },
    "210": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.action"
    },
    "211": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-activedescendant"
    },
    "212": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-atomic"
    },
    "213": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-autocomplete"
    },
    "214": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-braillelabel"
    },
    "215": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-brailleroledescription"
    },
    "216": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-busy"
    },
    "217": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-checked"
    },
    "218": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colcount"
    },
    "219": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colindex"
    },
    "220": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colindextext"
    },
    "221": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colspan"
    },
    "222": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-controls"
    },
    "223": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-current"
    },
    "224": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-describedby"
    },
    "225": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-description"
    },
    "226": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-details"
    },
    "227": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-disabled"
    },
    "228": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-dropeffect"
    },
    "229": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-errormessage"
    },
    "230": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-expanded"
    },
    "231": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-flowto"
    },
    "232": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-grabbed"
    },
    "233": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-haspopup"
    },
    "234": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-hidden"
    },
    "235": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-invalid"
    },
    "236": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-keyshortcuts"
    },
    "237": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-label"
    },
    "238": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-labelledby"
    },
    "239": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-level"
    },
    "240": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-live"
    },
    "241": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-modal"
    },
    "242": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-multiline"
    },
    "243": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-multiselectable"
    },
    "244": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-orientation"
    },
    "245": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-owns"
    },
    "246": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-placeholder"
    },
    "247": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-posinset"
    },
    "248": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-pressed"
    },
    "249": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-readonly"
    },
    "250": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-relevant"
    },
    "251": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-required"
    },
    "252": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-roledescription"
    },
    "253": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowcount"
    },
    "254": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowindex"
    },
    "255": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowindextext"
    },
    "256": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowspan"
    },
    "257": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-selected"
    },
    "258": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-setsize"
    },
    "259": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-sort"
    },
    "260": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuemax"
    },
    "261": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuemin"
    },
    "262": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuenow"
    },
    "263": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuetext"
    },
    "264": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoCapitalize"
    },
    "265": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.autoComplete"
    },
    "266": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoCorrect"
    },
    "267": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoFocus"
    },
    "268": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoSave"
    },
    "269": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.children"
    },
    "270": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.className"
    },
    "271": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.color"
    },
    "272": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.content"
    },
    "273": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.contentEditable"
    },
    "274": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.contextMenu"
    },
    "275": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.dangerouslySetInnerHTML"
    },
    "276": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type"
    },
    "277": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type.__html"
    },
    "278": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.datatype"
    },
    "279": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.defaultChecked"
    },
    "280": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.defaultValue"
    },
    "281": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.dir"
    },
    "282": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.draggable"
    },
    "283": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.encType"
    },
    "284": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.hidden"
    },
    "285": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.id"
    },
    "286": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.inlist"
    },
    "287": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.inputMode"
    },
    "288": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.is"
    },
    "289": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemID"
    },
    "290": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemProp"
    },
    "291": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemRef"
    },
    "292": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemScope"
    },
    "293": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemType"
    },
    "294": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.lang"
    },
    "295": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.method"
    },
    "296": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.name"
    },
    "297": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.noValidate"
    },
    "298": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.nonce"
    },
    "299": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAbort"
    },
    "300": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAbortCapture"
    },
    "301": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationEnd"
    },
    "302": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationEndCapture"
    },
    "303": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationIteration"
    },
    "304": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationIterationCapture"
    },
    "305": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationStart"
    },
    "306": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationStartCapture"
    },
    "307": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAuxClick"
    },
    "308": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAuxClickCapture"
    },
    "309": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBeforeInput"
    },
    "310": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBeforeInputCapture"
    },
    "311": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBlur"
    },
    "312": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBlurCapture"
    },
    "313": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlay"
    },
    "314": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlayCapture"
    },
    "315": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlayThrough"
    },
    "316": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlayThroughCapture"
    },
    "317": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onChange"
    },
    "318": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onChangeCapture"
    },
    "319": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onClick"
    },
    "320": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onClickCapture"
    },
    "321": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionEnd"
    },
    "322": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionEndCapture"
    },
    "323": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionStart"
    },
    "324": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionStartCapture"
    },
    "325": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionUpdate"
    },
    "326": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionUpdateCapture"
    },
    "327": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onContextMenu"
    },
    "328": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onContextMenuCapture"
    },
    "329": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCopy"
    },
    "330": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCopyCapture"
    },
    "331": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCut"
    },
    "332": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCutCapture"
    },
    "333": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDoubleClick"
    },
    "334": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDoubleClickCapture"
    },
    "335": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDrag"
    },
    "336": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragCapture"
    },
    "337": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEnd"
    },
    "338": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEndCapture"
    },
    "339": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEnter"
    },
    "340": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEnterCapture"
    },
    "341": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragExit"
    },
    "342": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragExitCapture"
    },
    "343": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragLeave"
    },
    "344": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragLeaveCapture"
    },
    "345": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragOver"
    },
    "346": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragOverCapture"
    },
    "347": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragStart"
    },
    "348": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragStartCapture"
    },
    "349": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDrop"
    },
    "350": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDropCapture"
    },
    "351": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDurationChange"
    },
    "352": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDurationChangeCapture"
    },
    "353": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEmptied"
    },
    "354": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEmptiedCapture"
    },
    "355": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEncrypted"
    },
    "356": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEncryptedCapture"
    },
    "357": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEnded"
    },
    "358": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEndedCapture"
    },
    "359": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onError"
    },
    "360": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onErrorCapture"
    },
    "361": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onFocus"
    },
    "362": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onFocusCapture"
    },
    "363": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onGotPointerCapture"
    },
    "364": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onGotPointerCaptureCapture"
    },
    "365": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInput"
    },
    "366": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInputCapture"
    },
    "367": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInvalid"
    },
    "368": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInvalidCapture"
    },
    "369": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyDown"
    },
    "370": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyDownCapture"
    },
    "371": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyPress"
    },
    "372": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyPressCapture"
    },
    "373": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyUp"
    },
    "374": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyUpCapture"
    },
    "375": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoad"
    },
    "376": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadCapture"
    },
    "377": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadStart"
    },
    "378": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadStartCapture"
    },
    "379": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedData"
    },
    "380": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedDataCapture"
    },
    "381": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedMetadata"
    },
    "382": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedMetadataCapture"
    },
    "383": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLostPointerCapture"
    },
    "384": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLostPointerCaptureCapture"
    },
    "385": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseDown"
    },
    "386": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseDownCapture"
    },
    "387": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseEnter"
    },
    "388": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseLeave"
    },
    "389": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseMove"
    },
    "390": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseMoveCapture"
    },
    "391": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOut"
    },
    "392": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOutCapture"
    },
    "393": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOver"
    },
    "394": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOverCapture"
    },
    "395": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseUp"
    },
    "396": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseUpCapture"
    },
    "397": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPaste"
    },
    "398": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPasteCapture"
    },
    "399": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPause"
    },
    "400": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPauseCapture"
    },
    "401": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlay"
    },
    "402": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlayCapture"
    },
    "403": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlaying"
    },
    "404": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlayingCapture"
    },
    "405": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerCancel"
    },
    "406": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerCancelCapture"
    },
    "407": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerDown"
    },
    "408": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerDownCapture"
    },
    "409": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerEnter"
    },
    "410": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerEnterCapture"
    },
    "411": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerLeave"
    },
    "412": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerLeaveCapture"
    },
    "413": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerMove"
    },
    "414": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerMoveCapture"
    },
    "415": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOut"
    },
    "416": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOutCapture"
    },
    "417": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOver"
    },
    "418": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOverCapture"
    },
    "419": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerUp"
    },
    "420": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerUpCapture"
    },
    "421": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onProgress"
    },
    "422": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onProgressCapture"
    },
    "423": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onRateChange"
    },
    "424": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onRateChangeCapture"
    },
    "425": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onReset"
    },
    "426": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onResetCapture"
    },
    "427": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onResize"
    },
    "428": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onResizeCapture"
    },
    "429": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onScroll"
    },
    "430": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onScrollCapture"
    },
    "431": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeeked"
    },
    "432": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeekedCapture"
    },
    "433": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeeking"
    },
    "434": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeekingCapture"
    },
    "435": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSelect"
    },
    "436": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSelectCapture"
    },
    "437": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onStalled"
    },
    "438": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onStalledCapture"
    },
    "439": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.onSubmit"
    },
    "440": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSubmitCapture"
    },
    "441": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSuspend"
    },
    "442": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSuspendCapture"
    },
    "443": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTimeUpdate"
    },
    "444": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTimeUpdateCapture"
    },
    "445": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchCancel"
    },
    "446": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchCancelCapture"
    },
    "447": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchEnd"
    },
    "448": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchEndCapture"
    },
    "449": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchMove"
    },
    "450": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchMoveCapture"
    },
    "451": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchStart"
    },
    "452": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchStartCapture"
    },
    "453": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTransitionEnd"
    },
    "454": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTransitionEndCapture"
    },
    "455": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onVolumeChange"
    },
    "456": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onVolumeChangeCapture"
    },
    "457": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWaiting"
    },
    "458": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWaitingCapture"
    },
    "459": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWheel"
    },
    "460": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWheelCapture"
    },
    "461": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.placeholder"
    },
    "462": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.prefix"
    },
    "463": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.preventScrollReset"
    },
    "464": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.property"
    },
    "465": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.radioGroup"
    },
    "466": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.rel"
    },
    "467": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.relative"
    },
    "468": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.resource"
    },
    "469": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.results"
    },
    "470": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.rev"
    },
    "471": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.role"
    },
    "472": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.security"
    },
    "473": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.slot"
    },
    "474": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.spellCheck"
    },
    "475": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.style"
    },
    "476": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.suppressContentEditableWarning"
    },
    "477": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.suppressHydrationWarning"
    },
    "478": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.tabIndex"
    },
    "479": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.target"
    },
    "480": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.title"
    },
    "481": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.translate"
    },
    "482": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.typeof"
    },
    "483": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.unselectable"
    },
    "484": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.vocab"
    },
    "485": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FetcherSubmitFunction"
    },
    "486": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FetcherSubmitFunction"
    },
    "487": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "target"
    },
    "488": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "options"
    },
    "489": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps"
    },
    "490": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.about"
    },
    "491": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.acceptCharset"
    },
    "492": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.accessKey"
    },
    "493": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.action"
    },
    "494": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-activedescendant"
    },
    "495": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-atomic"
    },
    "496": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-autocomplete"
    },
    "497": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-braillelabel"
    },
    "498": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-brailleroledescription"
    },
    "499": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-busy"
    },
    "500": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-checked"
    },
    "501": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colcount"
    },
    "502": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colindex"
    },
    "503": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colindextext"
    },
    "504": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-colspan"
    },
    "505": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-controls"
    },
    "506": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-current"
    },
    "507": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-describedby"
    },
    "508": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-description"
    },
    "509": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-details"
    },
    "510": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-disabled"
    },
    "511": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-dropeffect"
    },
    "512": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-errormessage"
    },
    "513": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-expanded"
    },
    "514": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-flowto"
    },
    "515": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-grabbed"
    },
    "516": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-haspopup"
    },
    "517": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-hidden"
    },
    "518": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-invalid"
    },
    "519": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-keyshortcuts"
    },
    "520": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-label"
    },
    "521": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-labelledby"
    },
    "522": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-level"
    },
    "523": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-live"
    },
    "524": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-modal"
    },
    "525": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-multiline"
    },
    "526": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-multiselectable"
    },
    "527": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-orientation"
    },
    "528": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-owns"
    },
    "529": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-placeholder"
    },
    "530": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-posinset"
    },
    "531": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-pressed"
    },
    "532": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-readonly"
    },
    "533": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-relevant"
    },
    "534": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-required"
    },
    "535": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-roledescription"
    },
    "536": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowcount"
    },
    "537": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowindex"
    },
    "538": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowindextext"
    },
    "539": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-rowspan"
    },
    "540": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-selected"
    },
    "541": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-setsize"
    },
    "542": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-sort"
    },
    "543": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuemax"
    },
    "544": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuemin"
    },
    "545": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuenow"
    },
    "546": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.AriaAttributes.aria-valuetext"
    },
    "547": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoCapitalize"
    },
    "548": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.autoComplete"
    },
    "549": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoCorrect"
    },
    "550": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoFocus"
    },
    "551": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.autoSave"
    },
    "552": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.children"
    },
    "553": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.className"
    },
    "554": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.color"
    },
    "555": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.content"
    },
    "556": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.contentEditable"
    },
    "557": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.contextMenu"
    },
    "558": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.dangerouslySetInnerHTML"
    },
    "559": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type"
    },
    "560": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type.__html"
    },
    "561": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.datatype"
    },
    "562": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.defaultChecked"
    },
    "563": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.defaultValue"
    },
    "564": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.dir"
    },
    "565": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.discover"
    },
    "566": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.draggable"
    },
    "567": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.encType"
    },
    "568": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.fetcherKey"
    },
    "569": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.hidden"
    },
    "570": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.id"
    },
    "571": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.inlist"
    },
    "572": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.inputMode"
    },
    "573": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.is"
    },
    "574": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemID"
    },
    "575": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemProp"
    },
    "576": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemRef"
    },
    "577": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemScope"
    },
    "578": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.itemType"
    },
    "579": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.lang"
    },
    "580": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.method"
    },
    "581": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.name"
    },
    "582": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.navigate"
    },
    "583": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.noValidate"
    },
    "584": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.nonce"
    },
    "585": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAbort"
    },
    "586": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAbortCapture"
    },
    "587": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationEnd"
    },
    "588": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationEndCapture"
    },
    "589": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationIteration"
    },
    "590": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationIterationCapture"
    },
    "591": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationStart"
    },
    "592": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAnimationStartCapture"
    },
    "593": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAuxClick"
    },
    "594": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onAuxClickCapture"
    },
    "595": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBeforeInput"
    },
    "596": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBeforeInputCapture"
    },
    "597": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBlur"
    },
    "598": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onBlurCapture"
    },
    "599": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlay"
    },
    "600": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlayCapture"
    },
    "601": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlayThrough"
    },
    "602": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCanPlayThroughCapture"
    },
    "603": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onChange"
    },
    "604": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onChangeCapture"
    },
    "605": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onClick"
    },
    "606": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onClickCapture"
    },
    "607": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionEnd"
    },
    "608": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionEndCapture"
    },
    "609": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionStart"
    },
    "610": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionStartCapture"
    },
    "611": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionUpdate"
    },
    "612": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCompositionUpdateCapture"
    },
    "613": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onContextMenu"
    },
    "614": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onContextMenuCapture"
    },
    "615": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCopy"
    },
    "616": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCopyCapture"
    },
    "617": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCut"
    },
    "618": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onCutCapture"
    },
    "619": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDoubleClick"
    },
    "620": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDoubleClickCapture"
    },
    "621": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDrag"
    },
    "622": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragCapture"
    },
    "623": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEnd"
    },
    "624": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEndCapture"
    },
    "625": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEnter"
    },
    "626": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragEnterCapture"
    },
    "627": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragExit"
    },
    "628": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragExitCapture"
    },
    "629": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragLeave"
    },
    "630": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragLeaveCapture"
    },
    "631": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragOver"
    },
    "632": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragOverCapture"
    },
    "633": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragStart"
    },
    "634": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDragStartCapture"
    },
    "635": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDrop"
    },
    "636": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDropCapture"
    },
    "637": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDurationChange"
    },
    "638": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onDurationChangeCapture"
    },
    "639": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEmptied"
    },
    "640": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEmptiedCapture"
    },
    "641": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEncrypted"
    },
    "642": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEncryptedCapture"
    },
    "643": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEnded"
    },
    "644": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onEndedCapture"
    },
    "645": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onError"
    },
    "646": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onErrorCapture"
    },
    "647": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onFocus"
    },
    "648": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onFocusCapture"
    },
    "649": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onGotPointerCapture"
    },
    "650": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onGotPointerCaptureCapture"
    },
    "651": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInput"
    },
    "652": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInputCapture"
    },
    "653": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInvalid"
    },
    "654": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onInvalidCapture"
    },
    "655": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyDown"
    },
    "656": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyDownCapture"
    },
    "657": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyPress"
    },
    "658": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyPressCapture"
    },
    "659": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyUp"
    },
    "660": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onKeyUpCapture"
    },
    "661": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoad"
    },
    "662": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadCapture"
    },
    "663": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadStart"
    },
    "664": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadStartCapture"
    },
    "665": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedData"
    },
    "666": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedDataCapture"
    },
    "667": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedMetadata"
    },
    "668": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLoadedMetadataCapture"
    },
    "669": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLostPointerCapture"
    },
    "670": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onLostPointerCaptureCapture"
    },
    "671": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseDown"
    },
    "672": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseDownCapture"
    },
    "673": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseEnter"
    },
    "674": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseLeave"
    },
    "675": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseMove"
    },
    "676": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseMoveCapture"
    },
    "677": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOut"
    },
    "678": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOutCapture"
    },
    "679": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOver"
    },
    "680": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseOverCapture"
    },
    "681": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseUp"
    },
    "682": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onMouseUpCapture"
    },
    "683": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPaste"
    },
    "684": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPasteCapture"
    },
    "685": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPause"
    },
    "686": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPauseCapture"
    },
    "687": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlay"
    },
    "688": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlayCapture"
    },
    "689": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlaying"
    },
    "690": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPlayingCapture"
    },
    "691": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerCancel"
    },
    "692": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerCancelCapture"
    },
    "693": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerDown"
    },
    "694": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerDownCapture"
    },
    "695": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerEnter"
    },
    "696": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerEnterCapture"
    },
    "697": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerLeave"
    },
    "698": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerLeaveCapture"
    },
    "699": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerMove"
    },
    "700": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerMoveCapture"
    },
    "701": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOut"
    },
    "702": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOutCapture"
    },
    "703": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOver"
    },
    "704": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerOverCapture"
    },
    "705": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerUp"
    },
    "706": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onPointerUpCapture"
    },
    "707": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onProgress"
    },
    "708": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onProgressCapture"
    },
    "709": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onRateChange"
    },
    "710": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onRateChangeCapture"
    },
    "711": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onReset"
    },
    "712": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onResetCapture"
    },
    "713": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onResize"
    },
    "714": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onResizeCapture"
    },
    "715": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onScroll"
    },
    "716": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onScrollCapture"
    },
    "717": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeeked"
    },
    "718": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeekedCapture"
    },
    "719": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeeking"
    },
    "720": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSeekingCapture"
    },
    "721": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSelect"
    },
    "722": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSelectCapture"
    },
    "723": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onStalled"
    },
    "724": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onStalledCapture"
    },
    "725": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.onSubmit"
    },
    "726": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSubmitCapture"
    },
    "727": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSuspend"
    },
    "728": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onSuspendCapture"
    },
    "729": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTimeUpdate"
    },
    "730": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTimeUpdateCapture"
    },
    "731": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchCancel"
    },
    "732": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchCancelCapture"
    },
    "733": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchEnd"
    },
    "734": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchEndCapture"
    },
    "735": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchMove"
    },
    "736": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchMoveCapture"
    },
    "737": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchStart"
    },
    "738": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTouchStartCapture"
    },
    "739": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTransitionEnd"
    },
    "740": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onTransitionEndCapture"
    },
    "741": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onVolumeChange"
    },
    "742": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onVolumeChangeCapture"
    },
    "743": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWaiting"
    },
    "744": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWaitingCapture"
    },
    "745": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWheel"
    },
    "746": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.DOMAttributes.onWheelCapture"
    },
    "747": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.placeholder"
    },
    "748": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.prefix"
    },
    "749": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.preventScrollReset"
    },
    "750": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.property"
    },
    "751": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.radioGroup"
    },
    "752": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.rel"
    },
    "753": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SharedFormProps.relative"
    },
    "754": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.reloadDocument"
    },
    "755": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.replace"
    },
    "756": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.resource"
    },
    "757": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.results"
    },
    "758": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.rev"
    },
    "759": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.role"
    },
    "760": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.security"
    },
    "761": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.slot"
    },
    "762": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.spellCheck"
    },
    "763": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.state"
    },
    "764": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.style"
    },
    "765": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.suppressContentEditableWarning"
    },
    "766": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.suppressHydrationWarning"
    },
    "767": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.tabIndex"
    },
    "768": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.FormHTMLAttributes.target"
    },
    "769": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.title"
    },
    "770": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.translate"
    },
    "771": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.typeof"
    },
    "772": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.unselectable"
    },
    "773": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FormProps.unstable_viewTransition"
    },
    "774": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.HTMLAttributes.vocab"
    },
    "775": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "GetScrollRestorationKeyFunction"
    },
    "776": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "GetScrollRestorationKeyFunction"
    },
    "777": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "location"
    },
    "778": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "matches"
    },
    "779": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "HandleDataRequestFunction"
    },
    "780": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "HandleDataRequestFunction"
    },
    "781": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "response"
    },
    "782": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "args"
    },
    "783": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "HandleDocumentRequestFunction"
    },
    "784": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "HandleDocumentRequestFunction"
    },
    "785": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "request"
    },
    "786": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "responseStatusCode"
    },
    "787": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "responseHeaders"
    },
    "788": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "context"
    },
    "789": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "loadContext"
    },
    "790": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "HandleErrorFunction"
    },
    "791": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "HandleErrorFunction"
    },
    "792": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "error"
    },
    "793": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "args"
    },
    "794": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HashRouterProps"
    },
    "795": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HashRouterProps.basename"
    },
    "796": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HashRouterProps.children"
    },
    "797": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HashRouterProps.window"
    },
    "798": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "HeadersFunction"
    },
    "799": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "HeadersFunction"
    },
    "800": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "args"
    },
    "801": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouterProps"
    },
    "802": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouterProps.basename"
    },
    "803": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouterProps.children"
    },
    "804": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouterProps.history"
    },
    "805": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject"
    },
    "806": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.Component"
    },
    "807": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "808": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.ErrorBoundary"
    },
    "809": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "810": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.HydrateFallback"
    },
    "811": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "812": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.action"
    },
    "813": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.caseSensitive"
    },
    "814": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.children"
    },
    "815": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.element"
    },
    "816": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.errorElement"
    },
    "817": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.handle"
    },
    "818": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.hasErrorBoundary"
    },
    "819": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.hydrateFallbackElement"
    },
    "820": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.id"
    },
    "821": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.index"
    },
    "822": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.lazy"
    },
    "823": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.loader"
    },
    "824": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.path"
    },
    "825": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "IndexRouteObject.shouldRevalidate"
    },
    "826": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps"
    },
    "827": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.Component"
    },
    "828": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "829": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.ErrorBoundary"
    },
    "830": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "831": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.HydrateFallback"
    },
    "832": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "833": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.action"
    },
    "834": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.caseSensitive"
    },
    "835": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.children"
    },
    "836": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.element"
    },
    "837": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.errorElement"
    },
    "838": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.handle"
    },
    "839": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.hasErrorBoundary"
    },
    "840": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.hydrateFallbackElement"
    },
    "841": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.id"
    },
    "842": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.index"
    },
    "843": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.lazy"
    },
    "844": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.loader"
    },
    "845": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.path"
    },
    "846": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "IndexRouteProps.shouldRevalidate"
    },
    "847": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "LayoutRouteProps"
    },
    "848": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.Component"
    },
    "849": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "850": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.ErrorBoundary"
    },
    "851": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "852": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.HydrateFallback"
    },
    "853": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "854": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.action"
    },
    "855": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.caseSensitive"
    },
    "856": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.children"
    },
    "857": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.element"
    },
    "858": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.errorElement"
    },
    "859": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.handle"
    },
    "860": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.hasErrorBoundary"
    },
    "861": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.hydrateFallbackElement"
    },
    "862": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.id"
    },
    "863": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.index"
    },
    "864": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.lazy"
    },
    "865": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.loader"
    },
    "866": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.path"
    },
    "867": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.shouldRevalidate"
    },
    "868": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LazyRouteFunction"
    },
    "869": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LazyRouteFunction.R"
    },
    "870": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LazyRouteFunction"
    },
    "871": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps"
    },
    "872": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "about"
    },
    "873": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "accessKey"
    },
    "874": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-activedescendant"
    },
    "875": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-atomic"
    },
    "876": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-autocomplete"
    },
    "877": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-braillelabel"
    },
    "878": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-brailleroledescription"
    },
    "879": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-busy"
    },
    "880": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-checked"
    },
    "881": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colcount"
    },
    "882": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colindex"
    },
    "883": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colindextext"
    },
    "884": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colspan"
    },
    "885": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-controls"
    },
    "886": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-current"
    },
    "887": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-describedby"
    },
    "888": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-description"
    },
    "889": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-details"
    },
    "890": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-disabled"
    },
    "891": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-dropeffect"
    },
    "892": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-errormessage"
    },
    "893": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-expanded"
    },
    "894": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-flowto"
    },
    "895": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-grabbed"
    },
    "896": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-haspopup"
    },
    "897": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-hidden"
    },
    "898": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-invalid"
    },
    "899": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-keyshortcuts"
    },
    "900": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-label"
    },
    "901": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-labelledby"
    },
    "902": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-level"
    },
    "903": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-live"
    },
    "904": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-modal"
    },
    "905": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-multiline"
    },
    "906": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-multiselectable"
    },
    "907": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-orientation"
    },
    "908": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-owns"
    },
    "909": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-placeholder"
    },
    "910": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-posinset"
    },
    "911": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-pressed"
    },
    "912": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-readonly"
    },
    "913": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-relevant"
    },
    "914": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-required"
    },
    "915": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-roledescription"
    },
    "916": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowcount"
    },
    "917": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowindex"
    },
    "918": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowindextext"
    },
    "919": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowspan"
    },
    "920": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-selected"
    },
    "921": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-setsize"
    },
    "922": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-sort"
    },
    "923": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuemax"
    },
    "924": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuemin"
    },
    "925": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuenow"
    },
    "926": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuetext"
    },
    "927": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoCapitalize"
    },
    "928": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoCorrect"
    },
    "929": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoFocus"
    },
    "930": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoSave"
    },
    "931": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "children"
    },
    "932": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "className"
    },
    "933": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "color"
    },
    "934": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "content"
    },
    "935": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "contentEditable"
    },
    "936": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "contextMenu"
    },
    "937": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "dangerouslySetInnerHTML"
    },
    "938": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type"
    },
    "939": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type.__html"
    },
    "940": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "datatype"
    },
    "941": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "defaultChecked"
    },
    "942": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "defaultValue"
    },
    "943": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "dir"
    },
    "944": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.discover"
    },
    "945": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "download"
    },
    "946": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "draggable"
    },
    "947": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "hidden"
    },
    "948": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "hrefLang"
    },
    "949": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "id"
    },
    "950": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "inlist"
    },
    "951": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "inputMode"
    },
    "952": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "is"
    },
    "953": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemID"
    },
    "954": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemProp"
    },
    "955": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemRef"
    },
    "956": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemScope"
    },
    "957": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemType"
    },
    "958": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "lang"
    },
    "959": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "media"
    },
    "960": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "nonce"
    },
    "961": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAbort"
    },
    "962": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAbortCapture"
    },
    "963": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationEnd"
    },
    "964": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationEndCapture"
    },
    "965": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationIteration"
    },
    "966": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationIterationCapture"
    },
    "967": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationStart"
    },
    "968": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationStartCapture"
    },
    "969": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAuxClick"
    },
    "970": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAuxClickCapture"
    },
    "971": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBeforeInput"
    },
    "972": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBeforeInputCapture"
    },
    "973": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBlur"
    },
    "974": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBlurCapture"
    },
    "975": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlay"
    },
    "976": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlayCapture"
    },
    "977": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlayThrough"
    },
    "978": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlayThroughCapture"
    },
    "979": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onChange"
    },
    "980": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onChangeCapture"
    },
    "981": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onClick"
    },
    "982": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onClickCapture"
    },
    "983": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionEnd"
    },
    "984": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionEndCapture"
    },
    "985": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionStart"
    },
    "986": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionStartCapture"
    },
    "987": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionUpdate"
    },
    "988": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionUpdateCapture"
    },
    "989": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onContextMenu"
    },
    "990": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onContextMenuCapture"
    },
    "991": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCopy"
    },
    "992": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCopyCapture"
    },
    "993": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCut"
    },
    "994": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCutCapture"
    },
    "995": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDoubleClick"
    },
    "996": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDoubleClickCapture"
    },
    "997": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDrag"
    },
    "998": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragCapture"
    },
    "999": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEnd"
    },
    "1000": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEndCapture"
    },
    "1001": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEnter"
    },
    "1002": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEnterCapture"
    },
    "1003": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragExit"
    },
    "1004": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragExitCapture"
    },
    "1005": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragLeave"
    },
    "1006": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragLeaveCapture"
    },
    "1007": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragOver"
    },
    "1008": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragOverCapture"
    },
    "1009": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragStart"
    },
    "1010": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragStartCapture"
    },
    "1011": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDrop"
    },
    "1012": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDropCapture"
    },
    "1013": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDurationChange"
    },
    "1014": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDurationChangeCapture"
    },
    "1015": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEmptied"
    },
    "1016": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEmptiedCapture"
    },
    "1017": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEncrypted"
    },
    "1018": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEncryptedCapture"
    },
    "1019": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEnded"
    },
    "1020": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEndedCapture"
    },
    "1021": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onError"
    },
    "1022": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onErrorCapture"
    },
    "1023": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onFocus"
    },
    "1024": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onFocusCapture"
    },
    "1025": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onGotPointerCapture"
    },
    "1026": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onGotPointerCaptureCapture"
    },
    "1027": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInput"
    },
    "1028": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInputCapture"
    },
    "1029": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInvalid"
    },
    "1030": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInvalidCapture"
    },
    "1031": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyDown"
    },
    "1032": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyDownCapture"
    },
    "1033": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyPress"
    },
    "1034": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyPressCapture"
    },
    "1035": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyUp"
    },
    "1036": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyUpCapture"
    },
    "1037": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoad"
    },
    "1038": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadCapture"
    },
    "1039": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadStart"
    },
    "1040": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadStartCapture"
    },
    "1041": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedData"
    },
    "1042": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedDataCapture"
    },
    "1043": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedMetadata"
    },
    "1044": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedMetadataCapture"
    },
    "1045": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLostPointerCapture"
    },
    "1046": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLostPointerCaptureCapture"
    },
    "1047": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseDown"
    },
    "1048": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseDownCapture"
    },
    "1049": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseEnter"
    },
    "1050": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseLeave"
    },
    "1051": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseMove"
    },
    "1052": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseMoveCapture"
    },
    "1053": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOut"
    },
    "1054": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOutCapture"
    },
    "1055": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOver"
    },
    "1056": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOverCapture"
    },
    "1057": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseUp"
    },
    "1058": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseUpCapture"
    },
    "1059": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPaste"
    },
    "1060": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPasteCapture"
    },
    "1061": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPause"
    },
    "1062": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPauseCapture"
    },
    "1063": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlay"
    },
    "1064": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlayCapture"
    },
    "1065": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlaying"
    },
    "1066": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlayingCapture"
    },
    "1067": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerCancel"
    },
    "1068": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerCancelCapture"
    },
    "1069": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerDown"
    },
    "1070": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerDownCapture"
    },
    "1071": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerEnter"
    },
    "1072": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerEnterCapture"
    },
    "1073": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerLeave"
    },
    "1074": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerLeaveCapture"
    },
    "1075": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerMove"
    },
    "1076": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerMoveCapture"
    },
    "1077": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOut"
    },
    "1078": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOutCapture"
    },
    "1079": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOver"
    },
    "1080": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOverCapture"
    },
    "1081": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerUp"
    },
    "1082": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerUpCapture"
    },
    "1083": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onProgress"
    },
    "1084": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onProgressCapture"
    },
    "1085": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onRateChange"
    },
    "1086": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onRateChangeCapture"
    },
    "1087": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onReset"
    },
    "1088": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onResetCapture"
    },
    "1089": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onResize"
    },
    "1090": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onResizeCapture"
    },
    "1091": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onScroll"
    },
    "1092": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onScrollCapture"
    },
    "1093": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeeked"
    },
    "1094": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeekedCapture"
    },
    "1095": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeeking"
    },
    "1096": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeekingCapture"
    },
    "1097": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSelect"
    },
    "1098": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSelectCapture"
    },
    "1099": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onStalled"
    },
    "1100": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onStalledCapture"
    },
    "1101": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSubmit"
    },
    "1102": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSubmitCapture"
    },
    "1103": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSuspend"
    },
    "1104": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSuspendCapture"
    },
    "1105": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTimeUpdate"
    },
    "1106": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTimeUpdateCapture"
    },
    "1107": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchCancel"
    },
    "1108": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchCancelCapture"
    },
    "1109": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchEnd"
    },
    "1110": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchEndCapture"
    },
    "1111": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchMove"
    },
    "1112": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchMoveCapture"
    },
    "1113": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchStart"
    },
    "1114": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchStartCapture"
    },
    "1115": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTransitionEnd"
    },
    "1116": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTransitionEndCapture"
    },
    "1117": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onVolumeChange"
    },
    "1118": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onVolumeChangeCapture"
    },
    "1119": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWaiting"
    },
    "1120": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWaitingCapture"
    },
    "1121": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWheel"
    },
    "1122": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWheelCapture"
    },
    "1123": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "ping"
    },
    "1124": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "placeholder"
    },
    "1125": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.prefetch"
    },
    "1126": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "prefix"
    },
    "1127": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.preventScrollReset"
    },
    "1128": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "property"
    },
    "1129": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "radioGroup"
    },
    "1130": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "referrerPolicy"
    },
    "1131": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "rel"
    },
    "1132": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.relative"
    },
    "1133": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.reloadDocument"
    },
    "1134": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.replace"
    },
    "1135": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "resource"
    },
    "1136": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "results"
    },
    "1137": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "rev"
    },
    "1138": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "role"
    },
    "1139": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "security"
    },
    "1140": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "slot"
    },
    "1141": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "spellCheck"
    },
    "1142": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.state"
    },
    "1143": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "style"
    },
    "1144": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "suppressContentEditableWarning"
    },
    "1145": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "suppressHydrationWarning"
    },
    "1146": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "tabIndex"
    },
    "1147": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "target"
    },
    "1148": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "title"
    },
    "1149": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.to"
    },
    "1150": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "translate"
    },
    "1151": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "type"
    },
    "1152": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "typeof"
    },
    "1153": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "unselectable"
    },
    "1154": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "LinkProps.unstable_viewTransition"
    },
    "1155": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "vocab"
    },
    "1156": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "LinksFunction"
    },
    "1157": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "LinksFunction"
    },
    "1158": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LoaderFunctionArgs"
    },
    "1159": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.context"
    },
    "1160": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.params"
    },
    "1161": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.request"
    },
    "1162": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LoaderFunctionArgs.Context"
    },
    "1163": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Location"
    },
    "1164": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path.hash"
    },
    "1165": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Location.key"
    },
    "1166": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path.pathname"
    },
    "1167": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path.search"
    },
    "1168": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Location.state"
    },
    "1169": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Location.State"
    },
    "1170": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouterProps"
    },
    "1171": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouterProps.basename"
    },
    "1172": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouterProps.children"
    },
    "1173": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouterProps.initialEntries"
    },
    "1174": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouterProps.initialIndex"
    },
    "1175": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs"
    },
    "1176": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.data"
    },
    "1177": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.error"
    },
    "1178": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.location"
    },
    "1179": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.matches"
    },
    "1180": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.params"
    },
    "1181": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.Loader"
    },
    "1182": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaArgs.MatchLoaders"
    },
    "1183": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaFunction"
    },
    "1184": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaFunction.Loader"
    },
    "1185": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaFunction.MatchLoaders"
    },
    "1186": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaFunction"
    },
    "1187": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "args"
    },
    "1188": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkProps"
    },
    "1189": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "about"
    },
    "1190": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "accessKey"
    },
    "1191": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-activedescendant"
    },
    "1192": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-atomic"
    },
    "1193": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-autocomplete"
    },
    "1194": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-braillelabel"
    },
    "1195": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-brailleroledescription"
    },
    "1196": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-busy"
    },
    "1197": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-checked"
    },
    "1198": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colcount"
    },
    "1199": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colindex"
    },
    "1200": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colindextext"
    },
    "1201": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-colspan"
    },
    "1202": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-controls"
    },
    "1203": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-current"
    },
    "1204": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-describedby"
    },
    "1205": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-description"
    },
    "1206": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-details"
    },
    "1207": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-disabled"
    },
    "1208": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-dropeffect"
    },
    "1209": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-errormessage"
    },
    "1210": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-expanded"
    },
    "1211": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-flowto"
    },
    "1212": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-grabbed"
    },
    "1213": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-haspopup"
    },
    "1214": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-hidden"
    },
    "1215": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-invalid"
    },
    "1216": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-keyshortcuts"
    },
    "1217": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-label"
    },
    "1218": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-labelledby"
    },
    "1219": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-level"
    },
    "1220": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-live"
    },
    "1221": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-modal"
    },
    "1222": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-multiline"
    },
    "1223": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-multiselectable"
    },
    "1224": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-orientation"
    },
    "1225": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-owns"
    },
    "1226": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-placeholder"
    },
    "1227": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-posinset"
    },
    "1228": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-pressed"
    },
    "1229": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-readonly"
    },
    "1230": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-relevant"
    },
    "1231": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-required"
    },
    "1232": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-roledescription"
    },
    "1233": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowcount"
    },
    "1234": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowindex"
    },
    "1235": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowindextext"
    },
    "1236": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-rowspan"
    },
    "1237": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-selected"
    },
    "1238": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-setsize"
    },
    "1239": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-sort"
    },
    "1240": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuemax"
    },
    "1241": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuemin"
    },
    "1242": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuenow"
    },
    "1243": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "aria-valuetext"
    },
    "1244": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoCapitalize"
    },
    "1245": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoCorrect"
    },
    "1246": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoFocus"
    },
    "1247": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "autoSave"
    },
    "1248": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkProps.caseSensitive"
    },
    "1249": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkProps.children"
    },
    "1250": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "1251": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "1252": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "props"
    },
    "1253": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkProps.className"
    },
    "1254": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "1255": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "1256": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "props"
    },
    "1257": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "color"
    },
    "1258": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "content"
    },
    "1259": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "contentEditable"
    },
    "1260": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "contextMenu"
    },
    "1261": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "dangerouslySetInnerHTML"
    },
    "1262": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type"
    },
    "1263": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "__type.__html"
    },
    "1264": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "datatype"
    },
    "1265": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "defaultChecked"
    },
    "1266": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "defaultValue"
    },
    "1267": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "dir"
    },
    "1268": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "discover"
    },
    "1269": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "download"
    },
    "1270": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "draggable"
    },
    "1271": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkProps.end"
    },
    "1272": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "hidden"
    },
    "1273": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "hrefLang"
    },
    "1274": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "id"
    },
    "1275": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "inlist"
    },
    "1276": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "inputMode"
    },
    "1277": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "is"
    },
    "1278": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemID"
    },
    "1279": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemProp"
    },
    "1280": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemRef"
    },
    "1281": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemScope"
    },
    "1282": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "itemType"
    },
    "1283": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "lang"
    },
    "1284": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "media"
    },
    "1285": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "nonce"
    },
    "1286": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAbort"
    },
    "1287": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAbortCapture"
    },
    "1288": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationEnd"
    },
    "1289": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationEndCapture"
    },
    "1290": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationIteration"
    },
    "1291": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationIterationCapture"
    },
    "1292": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationStart"
    },
    "1293": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAnimationStartCapture"
    },
    "1294": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAuxClick"
    },
    "1295": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onAuxClickCapture"
    },
    "1296": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBeforeInput"
    },
    "1297": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBeforeInputCapture"
    },
    "1298": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBlur"
    },
    "1299": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onBlurCapture"
    },
    "1300": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlay"
    },
    "1301": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlayCapture"
    },
    "1302": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlayThrough"
    },
    "1303": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCanPlayThroughCapture"
    },
    "1304": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onChange"
    },
    "1305": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onChangeCapture"
    },
    "1306": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onClick"
    },
    "1307": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onClickCapture"
    },
    "1308": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionEnd"
    },
    "1309": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionEndCapture"
    },
    "1310": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionStart"
    },
    "1311": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionStartCapture"
    },
    "1312": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionUpdate"
    },
    "1313": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCompositionUpdateCapture"
    },
    "1314": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onContextMenu"
    },
    "1315": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onContextMenuCapture"
    },
    "1316": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCopy"
    },
    "1317": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCopyCapture"
    },
    "1318": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCut"
    },
    "1319": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onCutCapture"
    },
    "1320": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDoubleClick"
    },
    "1321": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDoubleClickCapture"
    },
    "1322": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDrag"
    },
    "1323": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragCapture"
    },
    "1324": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEnd"
    },
    "1325": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEndCapture"
    },
    "1326": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEnter"
    },
    "1327": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragEnterCapture"
    },
    "1328": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragExit"
    },
    "1329": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragExitCapture"
    },
    "1330": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragLeave"
    },
    "1331": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragLeaveCapture"
    },
    "1332": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragOver"
    },
    "1333": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragOverCapture"
    },
    "1334": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragStart"
    },
    "1335": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDragStartCapture"
    },
    "1336": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDrop"
    },
    "1337": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDropCapture"
    },
    "1338": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDurationChange"
    },
    "1339": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onDurationChangeCapture"
    },
    "1340": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEmptied"
    },
    "1341": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEmptiedCapture"
    },
    "1342": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEncrypted"
    },
    "1343": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEncryptedCapture"
    },
    "1344": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEnded"
    },
    "1345": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onEndedCapture"
    },
    "1346": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onError"
    },
    "1347": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onErrorCapture"
    },
    "1348": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onFocus"
    },
    "1349": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onFocusCapture"
    },
    "1350": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onGotPointerCapture"
    },
    "1351": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onGotPointerCaptureCapture"
    },
    "1352": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInput"
    },
    "1353": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInputCapture"
    },
    "1354": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInvalid"
    },
    "1355": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onInvalidCapture"
    },
    "1356": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyDown"
    },
    "1357": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyDownCapture"
    },
    "1358": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyPress"
    },
    "1359": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyPressCapture"
    },
    "1360": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyUp"
    },
    "1361": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onKeyUpCapture"
    },
    "1362": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoad"
    },
    "1363": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadCapture"
    },
    "1364": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadStart"
    },
    "1365": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadStartCapture"
    },
    "1366": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedData"
    },
    "1367": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedDataCapture"
    },
    "1368": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedMetadata"
    },
    "1369": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLoadedMetadataCapture"
    },
    "1370": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLostPointerCapture"
    },
    "1371": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onLostPointerCaptureCapture"
    },
    "1372": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseDown"
    },
    "1373": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseDownCapture"
    },
    "1374": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseEnter"
    },
    "1375": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseLeave"
    },
    "1376": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseMove"
    },
    "1377": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseMoveCapture"
    },
    "1378": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOut"
    },
    "1379": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOutCapture"
    },
    "1380": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOver"
    },
    "1381": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseOverCapture"
    },
    "1382": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseUp"
    },
    "1383": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onMouseUpCapture"
    },
    "1384": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPaste"
    },
    "1385": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPasteCapture"
    },
    "1386": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPause"
    },
    "1387": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPauseCapture"
    },
    "1388": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlay"
    },
    "1389": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlayCapture"
    },
    "1390": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlaying"
    },
    "1391": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPlayingCapture"
    },
    "1392": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerCancel"
    },
    "1393": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerCancelCapture"
    },
    "1394": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerDown"
    },
    "1395": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerDownCapture"
    },
    "1396": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerEnter"
    },
    "1397": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerEnterCapture"
    },
    "1398": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerLeave"
    },
    "1399": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerLeaveCapture"
    },
    "1400": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerMove"
    },
    "1401": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerMoveCapture"
    },
    "1402": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOut"
    },
    "1403": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOutCapture"
    },
    "1404": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOver"
    },
    "1405": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerOverCapture"
    },
    "1406": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerUp"
    },
    "1407": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onPointerUpCapture"
    },
    "1408": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onProgress"
    },
    "1409": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onProgressCapture"
    },
    "1410": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onRateChange"
    },
    "1411": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onRateChangeCapture"
    },
    "1412": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onReset"
    },
    "1413": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onResetCapture"
    },
    "1414": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onResize"
    },
    "1415": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onResizeCapture"
    },
    "1416": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onScroll"
    },
    "1417": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onScrollCapture"
    },
    "1418": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeeked"
    },
    "1419": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeekedCapture"
    },
    "1420": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeeking"
    },
    "1421": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSeekingCapture"
    },
    "1422": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSelect"
    },
    "1423": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSelectCapture"
    },
    "1424": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onStalled"
    },
    "1425": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onStalledCapture"
    },
    "1426": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSubmit"
    },
    "1427": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSubmitCapture"
    },
    "1428": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSuspend"
    },
    "1429": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onSuspendCapture"
    },
    "1430": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTimeUpdate"
    },
    "1431": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTimeUpdateCapture"
    },
    "1432": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchCancel"
    },
    "1433": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchCancelCapture"
    },
    "1434": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchEnd"
    },
    "1435": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchEndCapture"
    },
    "1436": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchMove"
    },
    "1437": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchMoveCapture"
    },
    "1438": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchStart"
    },
    "1439": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTouchStartCapture"
    },
    "1440": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTransitionEnd"
    },
    "1441": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onTransitionEndCapture"
    },
    "1442": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onVolumeChange"
    },
    "1443": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onVolumeChangeCapture"
    },
    "1444": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWaiting"
    },
    "1445": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWaitingCapture"
    },
    "1446": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWheel"
    },
    "1447": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "onWheelCapture"
    },
    "1448": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "ping"
    },
    "1449": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "placeholder"
    },
    "1450": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "prefetch"
    },
    "1451": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "prefix"
    },
    "1452": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "preventScrollReset"
    },
    "1453": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "property"
    },
    "1454": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "radioGroup"
    },
    "1455": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "referrerPolicy"
    },
    "1456": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "rel"
    },
    "1457": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "relative"
    },
    "1458": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "reloadDocument"
    },
    "1459": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "replace"
    },
    "1460": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "resource"
    },
    "1461": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "results"
    },
    "1462": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "rev"
    },
    "1463": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "role"
    },
    "1464": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "security"
    },
    "1465": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "slot"
    },
    "1466": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "spellCheck"
    },
    "1467": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "state"
    },
    "1468": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkProps.style"
    },
    "1469": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "1470": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "1471": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "props"
    },
    "1472": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "suppressContentEditableWarning"
    },
    "1473": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "suppressHydrationWarning"
    },
    "1474": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "tabIndex"
    },
    "1475": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "target"
    },
    "1476": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "title"
    },
    "1477": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "to"
    },
    "1478": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "translate"
    },
    "1479": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "type"
    },
    "1480": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "typeof"
    },
    "1481": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "unselectable"
    },
    "1482": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "unstable_viewTransition"
    },
    "1483": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "vocab"
    },
    "1484": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "NavigateFunction"
    },
    "1485": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "NavigateFunction"
    },
    "1486": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "to"
    },
    "1487": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "options"
    },
    "1488": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "NavigateFunction"
    },
    "1489": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "delta"
    },
    "1490": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions"
    },
    "1491": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions.preventScrollReset"
    },
    "1492": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions.relative"
    },
    "1493": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions.replace"
    },
    "1494": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions.state"
    },
    "1495": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions.unstable_flushSync"
    },
    "1496": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigateOptions.unstable_viewTransition"
    },
    "1497": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "NavigateProps"
    },
    "1498": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "NavigateProps.relative"
    },
    "1499": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "NavigateProps.replace"
    },
    "1500": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "NavigateProps.state"
    },
    "1501": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "NavigateProps.to"
    },
    "1502": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator"
    },
    "1503": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.createHref"
    },
    "1504": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "History.createHref"
    },
    "1505": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "History.createHref"
    },
    "1506": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "to"
    },
    "1507": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.encodeLocation"
    },
    "1508": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "History.encodeLocation"
    },
    "1509": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "History.encodeLocation"
    },
    "1510": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "to"
    },
    "1511": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.go"
    },
    "1512": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "History.go"
    },
    "1513": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "History.go"
    },
    "1514": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "delta"
    },
    "1515": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.push"
    },
    "1516": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.push"
    },
    "1517": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "to"
    },
    "1518": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "state"
    },
    "1519": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "opts"
    },
    "1520": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.replace"
    },
    "1521": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "Navigator.replace"
    },
    "1522": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "to"
    },
    "1523": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "state"
    },
    "1524": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "opts"
    },
    "1525": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject"
    },
    "1526": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.Component"
    },
    "1527": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "1528": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.ErrorBoundary"
    },
    "1529": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "1530": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.HydrateFallback"
    },
    "1531": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "1532": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.action"
    },
    "1533": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.caseSensitive"
    },
    "1534": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.children"
    },
    "1535": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.element"
    },
    "1536": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.errorElement"
    },
    "1537": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.handle"
    },
    "1538": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.hasErrorBoundary"
    },
    "1539": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.hydrateFallbackElement"
    },
    "1540": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.id"
    },
    "1541": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.index"
    },
    "1542": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.lazy"
    },
    "1543": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.loader"
    },
    "1544": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.path"
    },
    "1545": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NonIndexRouteObject.shouldRevalidate"
    },
    "1546": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "OutletProps"
    },
    "1547": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "OutletProps.context"
    },
    "1548": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "PageLinkDescriptor"
    },
    "1549": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "crossOrigin"
    },
    "1550": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "disabled"
    },
    "1551": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "hrefLang"
    },
    "1552": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "integrity"
    },
    "1553": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "media"
    },
    "1554": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "PageLinkDescriptor.page"
    },
    "1555": {
      "sourceFileName": "packages/react-router/lib/server-runtime/links.ts",
      "qualifiedName": "referrerPolicy"
    },
    "1556": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path"
    },
    "1557": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path.hash"
    },
    "1558": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path.pathname"
    },
    "1559": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "Path.search"
    },
    "1560": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathMatch"
    },
    "1561": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathMatch.params"
    },
    "1562": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathMatch.pathname"
    },
    "1563": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathMatch.pathnameBase"
    },
    "1564": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathMatch.pattern"
    },
    "1565": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathMatch.ParamKey"
    },
    "1566": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathPattern"
    },
    "1567": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathPattern.caseSensitive"
    },
    "1568": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathPattern.end"
    },
    "1569": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathPattern.path"
    },
    "1570": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathPattern.Path"
    },
    "1571": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps"
    },
    "1572": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.Component"
    },
    "1573": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "1574": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.ErrorBoundary"
    },
    "1575": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "1576": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.HydrateFallback"
    },
    "1577": {
      "sourceFileName": "",
      "qualifiedName": "__type"
    },
    "1578": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.action"
    },
    "1579": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.caseSensitive"
    },
    "1580": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.children"
    },
    "1581": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.element"
    },
    "1582": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.errorElement"
    },
    "1583": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.handle"
    },
    "1584": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.hasErrorBoundary"
    },
    "1585": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.hydrateFallbackElement"
    },
    "1586": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.id"
    },
    "1587": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.index"
    },
    "1588": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.lazy"
    },
    "1589": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.loader"
    },
    "1590": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.path"
    },
    "1591": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "PathRouteProps.shouldRevalidate"
    },
    "1592": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "PrefetchPageDescriptor"
    },
    "1593": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "crossOrigin"
    },
    "1594": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "disabled"
    },
    "1595": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "hrefLang"
    },
    "1596": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "integrity"
    },
    "1597": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "media"
    },
    "1598": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "PrefetchPageDescriptor.page"
    },
    "1599": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "referrerPolicy"
    },
    "1600": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "RouteMatch"
    },
    "1601": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.params"
    },
    "1602": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathname"
    },
    "1603": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathnameBase"
    },
    "1604": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.route"
    },
    "1605": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "RouteMatch.ParamKey"
    },
    "1606": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "RouteMatch.RouteObjectType"
    },
    "1607": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps"
    },
    "1608": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps.basename"
    },
    "1609": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps.children"
    },
    "1610": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps.location"
    },
    "1611": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps.navigationType"
    },
    "1612": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps.navigator"
    },
    "1613": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouterProps.static"
    },
    "1614": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "RouterProviderProps"
    },
    "1615": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "RouterProviderProps.router"
    },
    "1616": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RoutesProps"
    },
    "1617": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RoutesProps.children"
    },
    "1618": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RoutesProps.location"
    },
    "1619": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStubProps"
    },
    "1620": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStubProps.future"
    },
    "1621": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStubProps.hydrationData"
    },
    "1622": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStubProps.initialEntries"
    },
    "1623": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStubProps.initialIndex"
    },
    "1624": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild"
    },
    "1625": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.assets"
    },
    "1626": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.assetsBuildDirectory"
    },
    "1627": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.basename"
    },
    "1628": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.entry"
    },
    "1629": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "__type"
    },
    "1630": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "__type.module"
    },
    "1631": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.future"
    },
    "1632": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.isSpaMode"
    },
    "1633": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.publicPath"
    },
    "1634": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerBuild.routes"
    },
    "1635": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerEntryModule"
    },
    "1636": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerEntryModule.default"
    },
    "1637": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerEntryModule.handleDataRequest"
    },
    "1638": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerEntryModule.handleError"
    },
    "1639": {
      "sourceFileName": "packages/react-router/lib/server-runtime/build.ts",
      "qualifiedName": "ServerEntryModule.streamTimeout"
    },
    "1640": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouterProps"
    },
    "1641": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouterProps.abortDelay"
    },
    "1642": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouterProps.context"
    },
    "1643": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouterProps.nonce"
    },
    "1644": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouterProps.url"
    },
    "1645": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session"
    },
    "1646": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.data"
    },
    "1647": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.id"
    },
    "1648": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.flash"
    },
    "1649": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.flash"
    },
    "1650": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Key"
    },
    "1651": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "name"
    },
    "1652": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "value"
    },
    "1653": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.get"
    },
    "1654": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.get"
    },
    "1655": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Key"
    },
    "1656": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "name"
    },
    "1657": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.has"
    },
    "1658": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.has"
    },
    "1659": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "name"
    },
    "1660": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.set"
    },
    "1661": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.set"
    },
    "1662": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Key"
    },
    "1663": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "name"
    },
    "1664": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "value"
    },
    "1665": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.unset"
    },
    "1666": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.unset"
    },
    "1667": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "name"
    },
    "1668": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.Data"
    },
    "1669": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Session.FlashData"
    },
    "1670": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionData"
    },
    "1671": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionData.__index"
    },
    "1673": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy"
    },
    "1674": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.cookie"
    },
    "1675": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1676": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type.name"
    },
    "1677": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.createData"
    },
    "1678": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1679": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1680": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "data"
    },
    "1681": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "expires"
    },
    "1682": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.deleteData"
    },
    "1683": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1684": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1685": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "id"
    },
    "1686": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.readData"
    },
    "1687": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1688": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1689": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "id"
    },
    "1690": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.updateData"
    },
    "1691": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1692": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1693": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "id"
    },
    "1694": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "data"
    },
    "1695": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "expires"
    },
    "1696": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.Data"
    },
    "1697": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionIdStorageStrategy.FlashData"
    },
    "1698": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionStorage"
    },
    "1699": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionStorage.commitSession"
    },
    "1700": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1701": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1702": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "session"
    },
    "1703": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "options"
    },
    "1704": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionStorage.destroySession"
    },
    "1705": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1706": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1707": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "session"
    },
    "1708": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "options"
    },
    "1709": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionStorage.getSession"
    },
    "1710": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1711": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1712": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "cookieHeader"
    },
    "1713": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "options"
    },
    "1714": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionStorage.Data"
    },
    "1715": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "SessionStorage.FlashData"
    },
    "1716": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunction"
    },
    "1717": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunction"
    },
    "1718": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "args"
    },
    "1719": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs"
    },
    "1720": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.actionResult"
    },
    "1721": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.currentParams"
    },
    "1722": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.currentUrl"
    },
    "1723": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.defaultShouldRevalidate"
    },
    "1724": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.formAction"
    },
    "1725": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.formData"
    },
    "1726": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.formEncType"
    },
    "1727": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.formMethod"
    },
    "1728": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.json"
    },
    "1729": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.nextParams"
    },
    "1730": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.nextUrl"
    },
    "1731": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.text"
    },
    "1732": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ShouldRevalidateFunctionArgs.unstable_actionStatus"
    },
    "1733": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandler"
    },
    "1734": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandler.dataRoutes"
    },
    "1735": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandler.query"
    },
    "1736": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandler.query"
    },
    "1737": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "request"
    },
    "1738": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "opts"
    },
    "1739": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "1740": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.requestContext"
    },
    "1741": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.skipLoaderErrorBubbling"
    },
    "1742": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.unstable_dataStrategy"
    },
    "1743": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandler.queryRoute"
    },
    "1744": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandler.queryRoute"
    },
    "1745": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "request"
    },
    "1746": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "opts"
    },
    "1747": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "1748": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.requestContext"
    },
    "1749": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.routeId"
    },
    "1750": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.unstable_dataStrategy"
    },
    "1751": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext"
    },
    "1752": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext._deepestRenderedBoundaryId"
    },
    "1753": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.actionData"
    },
    "1754": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.actionHeaders"
    },
    "1755": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.activeDeferreds"
    },
    "1756": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.basename"
    },
    "1757": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.errors"
    },
    "1758": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.loaderData"
    },
    "1759": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.loaderHeaders"
    },
    "1760": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.location"
    },
    "1761": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.matches"
    },
    "1762": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "StaticHandlerContext.statusCode"
    },
    "1763": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProps"
    },
    "1764": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProps.basename"
    },
    "1765": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProps.children"
    },
    "1766": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProps.location"
    },
    "1767": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProviderProps"
    },
    "1768": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProviderProps.context"
    },
    "1769": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProviderProps.hydrate"
    },
    "1770": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProviderProps.nonce"
    },
    "1771": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProviderProps.router"
    },
    "1772": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SubmitFunction"
    },
    "1773": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SubmitFunction"
    },
    "1774": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "target"
    },
    "1775": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "options"
    },
    "1776": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitOptions"
    },
    "1777": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SharedSubmitOptions.action"
    },
    "1778": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SharedSubmitOptions.encType"
    },
    "1779": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitOptions.fetcherKey"
    },
    "1780": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SharedSubmitOptions.method"
    },
    "1781": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitOptions.navigate"
    },
    "1782": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SharedSubmitOptions.preventScrollReset"
    },
    "1783": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SharedSubmitOptions.relative"
    },
    "1784": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitOptions.replace"
    },
    "1785": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitOptions.state"
    },
    "1786": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SharedSubmitOptions.unstable_flushSync"
    },
    "1787": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitOptions.unstable_viewTransition"
    },
    "1788": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "TrackedPromise"
    },
    "1789": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2015.symbol.wellknown.d.ts",
      "qualifiedName": "Promise.[toStringTag]"
    },
    "1790": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "TrackedPromise._data"
    },
    "1791": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "TrackedPromise._error"
    },
    "1792": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "TrackedPromise._tracked"
    },
    "1793": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Promise.catch"
    },
    "1794": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Promise.catch"
    },
    "1795": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "TResult"
    },
    "1796": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "onrejected"
    },
    "1797": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "__type"
    },
    "1798": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "__type"
    },
    "1799": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "reason"
    },
    "1800": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
      "qualifiedName": "Promise.finally"
    },
    "1801": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
      "qualifiedName": "Promise.finally"
    },
    "1802": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
      "qualifiedName": "onfinally"
    },
    "1803": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
      "qualifiedName": "__type"
    },
    "1804": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es2018.promise.d.ts",
      "qualifiedName": "__type"
    },
    "1805": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Promise.then"
    },
    "1806": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "Promise.then"
    },
    "1807": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "TResult1"
    },
    "1808": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "TResult2"
    },
    "1809": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "onfulfilled"
    },
    "1810": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "__type"
    },
    "1811": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "__type"
    },
    "1812": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "value"
    },
    "1813": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "onrejected"
    },
    "1814": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "__type"
    },
    "1815": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "__type"
    },
    "1816": {
      "sourceFileName": "node_modules/.pnpm/typescript@5.4.5/node_modules/typescript/lib/lib.es5.d.ts",
      "qualifiedName": "reason"
    },
    "1817": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch"
    },
    "1818": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.data"
    },
    "1819": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.handle"
    },
    "1820": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.id"
    },
    "1821": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.params"
    },
    "1822": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.pathname"
    },
    "1823": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.Data"
    },
    "1824": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UIMatch.Handle"
    },
    "1825": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "AssetsManifest"
    },
    "1826": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "AssetsManifest.entry"
    },
    "1827": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "1828": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.imports"
    },
    "1829": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.module"
    },
    "1830": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "AssetsManifest.hmr"
    },
    "1831": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "1832": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.runtime"
    },
    "1833": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.timestamp"
    },
    "1834": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "AssetsManifest.routes"
    },
    "1835": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "AssetsManifest.url"
    },
    "1836": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "AssetsManifest.version"
    },
    "1837": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute"
    },
    "1838": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "Route.caseSensitive"
    },
    "1839": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.css"
    },
    "1840": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.hasAction"
    },
    "1841": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.hasClientAction"
    },
    "1842": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.hasClientLoader"
    },
    "1843": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.hasErrorBoundary"
    },
    "1844": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.hasLoader"
    },
    "1845": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "Route.id"
    },
    "1846": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.imports"
    },
    "1847": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "Route.index"
    },
    "1848": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.module"
    },
    "1849": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "EntryRoute.parentId"
    },
    "1850": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "Route.path"
    },
    "1851": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject"
    },
    "1852": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.abortDelay"
    },
    "1853": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.criticalCss"
    },
    "1854": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.future"
    },
    "1855": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.isSpaMode"
    },
    "1856": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.manifest"
    },
    "1857": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.renderMeta"
    },
    "1858": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "1859": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.didRenderScripts"
    },
    "1860": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.streamCache"
    },
    "1861": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "1862": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.error"
    },
    "1863": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.result"
    },
    "1864": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type"
    },
    "1865": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.done"
    },
    "1866": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "__type.value"
    },
    "1867": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.routeModules"
    },
    "1868": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.serverHandoffString"
    },
    "1869": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.serializeError"
    },
    "1870": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FrameworkContextObject.serializeError"
    },
    "1871": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "error"
    },
    "1872": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FutureConfig"
    },
    "1873": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FutureConfig.v3_fetcherPersist"
    },
    "1874": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FutureConfig.v3_relativeSplatPath"
    },
    "1875": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/entry.ts",
      "qualifiedName": "FutureConfig.v3_throwAbortReason"
    },
    "1876": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "RouteManifest"
    },
    "1877": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "RouteManifest.Route"
    },
    "1878": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes.tsx",
      "qualifiedName": "RouteManifest.__index"
    },
    "1880": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "RouteModules"
    },
    "1881": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "RouteModules.__index"
    },
    "1883": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyFunction"
    },
    "1884": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyFunction"
    },
    "1885": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "args"
    },
    "1886": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyFunctionArgs"
    },
    "1887": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.context"
    },
    "1888": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyFunctionArgs.matches"
    },
    "1889": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.params"
    },
    "1890": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataFunctionArgs.request"
    },
    "1891": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyFunctionArgs.Context"
    },
    "1892": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyMatch"
    },
    "1893": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.params"
    },
    "1894": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathname"
    },
    "1895": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.pathnameBase"
    },
    "1896": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyMatch.resolve"
    },
    "1897": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1898": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1899": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "handlerOverride"
    },
    "1900": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1901": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1902": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "handler"
    },
    "1903": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1904": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1905": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ctx"
    },
    "1906": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteMatch.route"
    },
    "1907": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "DataStrategyMatch.shouldLoad"
    },
    "1908": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "HandlerResult"
    },
    "1909": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "HandlerResult.result"
    },
    "1910": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "HandlerResult.status"
    },
    "1911": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "HandlerResult.type"
    },
    "1912": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "unstable_PatchRoutesOnMissFunction"
    },
    "1913": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "unstable_PatchRoutesOnMissFunction"
    },
    "1914": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "opts"
    },
    "1915": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1916": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.matches"
    },
    "1917": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.patch"
    },
    "1918": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1919": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1920": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "routeId"
    },
    "1921": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "children"
    },
    "1922": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.path"
    },
    "1923": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticDataIndexRouteObject"
    },
    "1924": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1925": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.id"
    },
    "1926": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticDataNonIndexRouteObject"
    },
    "1927": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1928": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.children"
    },
    "1929": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.id"
    },
    "1930": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticDataRouteObject"
    },
    "1931": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticIndexRouteObject"
    },
    "1932": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1933": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.children"
    },
    "1934": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.index"
    },
    "1935": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticNonIndexRouteObject"
    },
    "1936": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "1937": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.children"
    },
    "1938": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.index"
    },
    "1939": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "AgnosticRouteObject"
    },
    "1940": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "Blocker"
    },
    "1941": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "BlockerFunction"
    },
    "1942": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "1943": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "1944": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "args"
    },
    "1945": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "1946": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.currentLocation"
    },
    "1947": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.historyAction"
    },
    "1948": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.nextLocation"
    },
    "1949": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "ClientActionFunction"
    },
    "1950": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1951": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1952": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "args"
    },
    "1953": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "ClientActionFunctionArgs"
    },
    "1954": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1955": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.serverAction"
    },
    "1956": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1957": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1958": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "T"
    },
    "1959": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "ClientLoaderFunction"
    },
    "1960": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1961": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1962": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "args"
    },
    "1963": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1964": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.hydrate"
    },
    "1965": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "ClientLoaderFunctionArgs"
    },
    "1966": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1967": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.serverLoader"
    },
    "1968": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1969": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "1970": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "T"
    },
    "1971": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "CookieOptions"
    },
    "1972": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "CreateCookieFunction"
    },
    "1973": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type"
    },
    "1974": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type"
    },
    "1975": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "name"
    },
    "1976": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "cookieOptions"
    },
    "1977": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "CreateCookieSessionStorageFunction"
    },
    "1978": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "__type"
    },
    "1979": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "__type"
    },
    "1980": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "Data"
    },
    "1981": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "FlashData"
    },
    "1982": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "options"
    },
    "1983": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "CreateMemorySessionStorageFunction"
    },
    "1984": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "__type"
    },
    "1985": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "__type"
    },
    "1986": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "Data"
    },
    "1987": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "FlashData"
    },
    "1988": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "options"
    },
    "1989": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "CreateRequestHandlerFunction"
    },
    "1990": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "1991": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "1992": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "build"
    },
    "1993": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "1994": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "1995": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "mode"
    },
    "1996": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "CreateSessionFunction"
    },
    "1997": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1998": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "1999": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Data"
    },
    "2000": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "FlashData"
    },
    "2001": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "initialData"
    },
    "2002": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "id"
    },
    "2003": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "CreateSessionStorageFunction"
    },
    "2004": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "2005": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "2006": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Data"
    },
    "2007": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "FlashData"
    },
    "2008": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "strategy"
    },
    "2009": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "DataFunctionArgs"
    },
    "2010": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2011": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type.context"
    },
    "2012": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "DataRouteObject"
    },
    "2013": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "__type"
    },
    "2014": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "__type.children"
    },
    "2015": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "__type.id"
    },
    "2016": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ErrorResponse"
    },
    "2017": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2018": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.data"
    },
    "2019": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.status"
    },
    "2020": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.statusText"
    },
    "2021": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "Fetcher"
    },
    "2022": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "TData"
    },
    "2023": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "FetcherStates"
    },
    "2024": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "TData"
    },
    "2025": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2026": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.Idle"
    },
    "2027": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2028": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.data"
    },
    "2029": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formAction"
    },
    "2030": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formData"
    },
    "2031": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2032": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2033": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.json"
    },
    "2034": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.state"
    },
    "2035": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.text"
    },
    "2036": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.Loading"
    },
    "2037": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2038": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.data"
    },
    "2039": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formAction"
    },
    "2040": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formData"
    },
    "2041": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2042": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2043": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.json"
    },
    "2044": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.state"
    },
    "2045": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.text"
    },
    "2046": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.Submitting"
    },
    "2047": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2048": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.data"
    },
    "2049": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formAction"
    },
    "2050": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formData"
    },
    "2051": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2052": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2053": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.json"
    },
    "2054": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.state"
    },
    "2055": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.text"
    },
    "2056": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FetcherWithComponents"
    },
    "2057": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "TData"
    },
    "2058": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2059": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.Form"
    },
    "2060": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.load"
    },
    "2061": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2062": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2063": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "href"
    },
    "2064": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "opts"
    },
    "2065": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2066": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.unstable_flushSync"
    },
    "2067": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.submit"
    },
    "2068": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "FlashSessionData"
    },
    "2069": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Data"
    },
    "2070": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "FlashData"
    },
    "2071": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "FormEncType"
    },
    "2072": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "FormMethod"
    },
    "2073": {
      "sourceFileName": "packages/react-router/index.ts",
      "qualifiedName": "Hash"
    },
    "2074": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "HeadersArgs"
    },
    "2075": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2076": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type.actionHeaders"
    },
    "2077": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type.errorHeaders"
    },
    "2078": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type.loaderHeaders"
    },
    "2079": {
      "sourceFileName": "packages/react-router/lib/server-runtime/routeModules.ts",
      "qualifiedName": "__type.parentHeaders"
    },
    "2080": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "HtmlLinkDescriptor"
    },
    "2081": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "__type"
    },
    "2082": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "__type.imageSizes"
    },
    "2083": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "HydrationState"
    },
    "2084": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "InitialEntry"
    },
    "2085": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "IsCookieFunction"
    },
    "2086": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type"
    },
    "2087": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type"
    },
    "2088": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "object"
    },
    "2089": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "IsSessionFunction"
    },
    "2090": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "2091": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "__type"
    },
    "2092": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "object"
    },
    "2093": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "JsonFunction"
    },
    "2094": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2095": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2096": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Data"
    },
    "2097": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "data"
    },
    "2098": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "init"
    },
    "2099": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/links.ts",
      "qualifiedName": "LinkDescriptor"
    },
    "2100": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LoaderFunction"
    },
    "2101": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Context"
    },
    "2102": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2103": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2104": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "args"
    },
    "2105": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "handlerCtx"
    },
    "2106": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2107": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.hydrate"
    },
    "2108": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "LowerCaseFormMethod"
    },
    "2109": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "Match"
    },
    "2110": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "R"
    },
    "2111": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "MemoryUploadHandlerFilterArgs"
    },
    "2112": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type"
    },
    "2113": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type.contentType"
    },
    "2114": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type.filename"
    },
    "2115": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type.name"
    },
    "2116": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "MemoryUploadHandlerOptions"
    },
    "2117": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type"
    },
    "2118": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type.maxPartSize"
    },
    "2119": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type.filter"
    },
    "2120": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__type.filter"
    },
    "2121": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "args"
    },
    "2122": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "MetaDescriptor"
    },
    "2123": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2124": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.charSet"
    },
    "2125": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2126": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.title"
    },
    "2127": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2128": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.content"
    },
    "2129": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.name"
    },
    "2130": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2131": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.content"
    },
    "2132": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.property"
    },
    "2133": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2134": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.content"
    },
    "2135": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.httpEquiv"
    },
    "2136": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2137": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.script:ld+json"
    },
    "2138": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2139": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.tagName"
    },
    "2140": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.__index"
    },
    "2142": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type"
    },
    "2143": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routeModules.ts",
      "qualifiedName": "__type.__index"
    },
    "2145": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "MetaMatch"
    },
    "2146": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "R"
    },
    "2147": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLinkRenderProps"
    },
    "2148": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2149": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.isActive"
    },
    "2150": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.isPending"
    },
    "2151": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.isTransitioning"
    },
    "2152": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "Navigation"
    },
    "2153": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "NavigationStates"
    },
    "2154": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2155": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.Idle"
    },
    "2156": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2157": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formAction"
    },
    "2158": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formData"
    },
    "2159": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2160": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2161": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.json"
    },
    "2162": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.location"
    },
    "2163": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.state"
    },
    "2164": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.text"
    },
    "2165": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.Loading"
    },
    "2166": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2167": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formAction"
    },
    "2168": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formData"
    },
    "2169": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2170": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2171": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.json"
    },
    "2172": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.location"
    },
    "2173": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.state"
    },
    "2174": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.text"
    },
    "2175": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.Submitting"
    },
    "2176": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type"
    },
    "2177": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formAction"
    },
    "2178": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formData"
    },
    "2179": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2180": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2181": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.json"
    },
    "2182": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.location"
    },
    "2183": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.state"
    },
    "2184": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "__type.text"
    },
    "2185": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "ParamKeyValuePair"
    },
    "2186": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ParamParseKey"
    },
    "2187": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Segment"
    },
    "2188": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Params"
    },
    "2189": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Key"
    },
    "2190": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "PathParam"
    },
    "2191": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Path"
    },
    "2192": {
      "sourceFileName": "packages/react-router/index.ts",
      "qualifiedName": "Pathname"
    },
    "2193": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "RedirectFunction"
    },
    "2194": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2195": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2196": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "url"
    },
    "2197": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "init"
    },
    "2198": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "RelativeRoutingType"
    },
    "2199": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "RequestHandler"
    },
    "2200": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "2201": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "2202": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "request"
    },
    "2203": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "loadContext"
    },
    "2204": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "RouteObject"
    },
    "2205": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "RouteProps"
    },
    "2206": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "ScriptsProps"
    },
    "2207": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "ScrollRestorationProps"
    },
    "2208": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2209": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.getKey"
    },
    "2210": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.storageKey"
    },
    "2211": {
      "sourceFileName": "packages/react-router/index.ts",
      "qualifiedName": "Search"
    },
    "2212": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "SetURLSearchParams"
    },
    "2213": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2214": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2215": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "nextInit"
    },
    "2216": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2217": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2218": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "prev"
    },
    "2219": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "navigateOpts"
    },
    "2220": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "SignFunction"
    },
    "2221": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "__type"
    },
    "2222": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "__type"
    },
    "2223": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "value"
    },
    "2224": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "secret"
    },
    "2225": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Submission"
    },
    "2226": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2227": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formAction"
    },
    "2228": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formData"
    },
    "2229": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2230": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2231": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.json"
    },
    "2232": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.text"
    },
    "2233": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2234": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formAction"
    },
    "2235": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formData"
    },
    "2236": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2237": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2238": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.json"
    },
    "2239": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.text"
    },
    "2240": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type"
    },
    "2241": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formAction"
    },
    "2242": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formData"
    },
    "2243": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formEncType"
    },
    "2244": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.formMethod"
    },
    "2245": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.json"
    },
    "2246": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "__type.text"
    },
    "2247": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "SubmitTarget"
    },
    "2248": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "To"
    },
    "2249": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "TypedDeferredData"
    },
    "2250": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "Data"
    },
    "2251": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "__type"
    },
    "2252": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "__type.[typedDeferredDataBrand]"
    },
    "2253": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "__type.data"
    },
    "2254": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "TypedResponse"
    },
    "2255": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "T"
    },
    "2256": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "__type"
    },
    "2257": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "__type.json"
    },
    "2258": {
      "sourceFileName": "packages/react-router/lib/server-runtime/responses.ts",
      "qualifiedName": "__type.json"
    },
    "2259": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "SingleFetchRedirectResult"
    },
    "2260": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type"
    },
    "2261": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.redirect"
    },
    "2262": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.reload"
    },
    "2263": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.revalidate"
    },
    "2264": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.status"
    },
    "2265": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "SingleFetchResult"
    },
    "2266": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type"
    },
    "2267": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.data"
    },
    "2268": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type"
    },
    "2269": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.error"
    },
    "2270": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "SingleFetchResults"
    },
    "2271": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type"
    },
    "2272": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.[SingleFetchRedirectSymbol]"
    },
    "2273": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "__type.__index"
    },
    "2275": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "URLSearchParamsInit"
    },
    "2276": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "UnsignFunction"
    },
    "2277": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "__type"
    },
    "2278": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "__type"
    },
    "2279": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "cookie"
    },
    "2280": {
      "sourceFileName": "packages/react-router/lib/server-runtime/crypto.ts",
      "qualifiedName": "secret"
    },
    "2281": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "UploadHandler"
    },
    "2282": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type"
    },
    "2283": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type"
    },
    "2284": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "part"
    },
    "2285": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "UploadHandlerPart"
    },
    "2286": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type"
    },
    "2287": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type.contentType"
    },
    "2288": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type.data"
    },
    "2289": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type.filename"
    },
    "2290": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "__type.name"
    },
    "2291": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "UpperCaseFormMethod"
    },
    "2292": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "UNSAFE_DEFERRED_SYMBOL"
    },
    "2293": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "DataRouterContext"
    },
    "2294": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "DataRouterStateContext"
    },
    "2295": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "FetchersContext"
    },
    "2296": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "FrameworkContext"
    },
    "2297": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "LocationContext"
    },
    "2298": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "NavigationContext"
    },
    "2299": {
      "sourceFileName": "packages/react-router/lib/context.ts",
      "qualifiedName": "RouteContext"
    },
    "2300": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "SingleFetchRedirectSymbol"
    },
    "2301": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "ViewTransitionContext"
    },
    "2302": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Await"
    },
    "2303": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Await"
    },
    "2304": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__0"
    },
    "2305": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "BrowserRouter"
    },
    "2306": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "BrowserRouter"
    },
    "2307": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2308": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "Form"
    },
    "2309": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ExoticComponent.$$typeof"
    },
    "2310": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
    },
    "2311": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.NamedExoticComponent.displayName"
    },
    "2312": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ForwardRefExoticComponent.propTypes"
    },
    "2313": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "Form"
    },
    "2314": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "props"
    },
    "2315": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HashRouter"
    },
    "2316": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HashRouter"
    },
    "2317": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2318": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/browser.tsx",
      "qualifiedName": "HydratedRouter"
    },
    "2319": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/browser.tsx",
      "qualifiedName": "HydratedRouter"
    },
    "2320": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "Link"
    },
    "2321": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ExoticComponent.$$typeof"
    },
    "2322": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
    },
    "2323": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.NamedExoticComponent.displayName"
    },
    "2324": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ForwardRefExoticComponent.propTypes"
    },
    "2325": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "Link"
    },
    "2326": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "props"
    },
    "2327": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "Links"
    },
    "2328": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "Links"
    },
    "2329": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouter"
    },
    "2330": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "MemoryRouter"
    },
    "2331": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__0"
    },
    "2332": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "Meta"
    },
    "2333": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "Meta"
    },
    "2334": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "NavLink"
    },
    "2335": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ExoticComponent.$$typeof"
    },
    "2336": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ForwardRefExoticComponent.defaultProps"
    },
    "2337": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.NamedExoticComponent.displayName"
    },
    "2338": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "React.ForwardRefExoticComponent.propTypes"
    },
    "2339": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "NavLink"
    },
    "2340": {
      "sourceFileName": "node_modules/.pnpm/@types+react@18.2.18/node_modules/@types/react/index.d.ts",
      "qualifiedName": "props"
    },
    "2341": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Navigate"
    },
    "2342": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Navigate"
    },
    "2343": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__0"
    },
    "2344": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Outlet"
    },
    "2345": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Outlet"
    },
    "2346": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "props"
    },
    "2347": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "PrefetchPageLinks"
    },
    "2348": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "PrefetchPageLinks"
    },
    "2349": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "__0"
    },
    "2350": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Route"
    },
    "2351": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Route"
    },
    "2352": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "_props"
    },
    "2353": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Router"
    },
    "2354": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Router"
    },
    "2355": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__0"
    },
    "2356": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "RouterProvider"
    },
    "2357": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "RouterProvider"
    },
    "2358": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2359": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Routes"
    },
    "2360": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "Routes"
    },
    "2361": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__0"
    },
    "2362": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "Scripts"
    },
    "2363": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "Scripts"
    },
    "2364": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/components.tsx",
      "qualifiedName": "props"
    },
    "2365": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "ScrollRestoration"
    },
    "2366": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "ScrollRestoration.displayName"
    },
    "2367": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "ScrollRestoration"
    },
    "2368": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2369": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouter"
    },
    "2370": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "ServerRouter"
    },
    "2371": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/server.tsx",
      "qualifiedName": "__0"
    },
    "2372": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouter"
    },
    "2373": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouter"
    },
    "2374": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "__0"
    },
    "2375": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProvider"
    },
    "2376": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "StaticRouterProvider"
    },
    "2377": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "__0"
    },
    "2378": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "convertRoutesToDataRoutes"
    },
    "2379": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "convertRoutesToDataRoutes"
    },
    "2380": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "routes"
    },
    "2381": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "mapRouteProperties"
    },
    "2382": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "parentPath"
    },
    "2383": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "manifest"
    },
    "2384": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "decodeViaTurboStream"
    },
    "2385": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "decodeViaTurboStream"
    },
    "2386": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "body"
    },
    "2387": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/single-fetch.tsx",
      "qualifiedName": "global"
    },
    "2388": {
      "sourceFileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
      "qualifiedName": "__type"
    },
    "2389": {
      "sourceFileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
      "qualifiedName": "__type.done"
    },
    "2390": {
      "sourceFileName": "node_modules/.pnpm/turbo-stream@2.2.0/node_modules/turbo-stream/dist/turbo-stream.d.ts",
      "qualifiedName": "__type.value"
    },
    "2391": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "mapRouteProperties"
    },
    "2392": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "mapRouteProperties"
    },
    "2393": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "route"
    },
    "2394": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type"
    },
    "2395": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.hasErrorBoundary"
    },
    "2396": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRouteId"
    },
    "2397": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRouteId"
    },
    "2398": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRoutesImpl"
    },
    "2399": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRoutesImpl"
    },
    "2400": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "routes"
    },
    "2401": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "locationArg"
    },
    "2402": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "dataRouterState"
    },
    "2403": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "future"
    },
    "2404": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useScrollRestoration"
    },
    "2405": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useScrollRestoration"
    },
    "2406": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2407": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2408": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.getKey"
    },
    "2409": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.storageKey"
    },
    "2410": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "createBrowserRouter"
    },
    "2411": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "createBrowserRouter"
    },
    "2412": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "routes"
    },
    "2413": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "opts"
    },
    "2414": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "createCookieFactory"
    },
    "2415": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "createCookieFactory"
    },
    "2416": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__0"
    },
    "2417": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type"
    },
    "2418": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type.sign"
    },
    "2419": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "__type.unsign"
    },
    "2420": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "createCookieSessionStorageFactory"
    },
    "2421": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "createCookieSessionStorageFactory"
    },
    "2422": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "createCookie"
    },
    "2423": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "createHashRouter"
    },
    "2424": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "createHashRouter"
    },
    "2425": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "routes"
    },
    "2426": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "opts"
    },
    "2427": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "createMemoryRouter"
    },
    "2428": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "createMemoryRouter"
    },
    "2429": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "routes"
    },
    "2430": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "opts"
    },
    "2431": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type"
    },
    "2432": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.basename"
    },
    "2433": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.future"
    },
    "2434": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.hydrationData"
    },
    "2435": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.initialEntries"
    },
    "2436": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.initialIndex"
    },
    "2437": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.unstable_dataStrategy"
    },
    "2438": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "__type.unstable_patchRoutesOnMiss"
    },
    "2439": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "createMemorySessionStorageFactory"
    },
    "2440": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "createMemorySessionStorageFactory"
    },
    "2441": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "createSessionStorage"
    },
    "2442": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "createPath"
    },
    "2443": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "createPath"
    },
    "2444": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "__0"
    },
    "2445": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "createRequestHandler"
    },
    "2446": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "createRequestHandler"
    },
    "2447": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "build"
    },
    "2448": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "2449": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "__type"
    },
    "2450": {
      "sourceFileName": "packages/react-router/lib/server-runtime/server.ts",
      "qualifiedName": "mode"
    },
    "2451": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "createRoutesFromChildren"
    },
    "2452": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "createRoutesFromChildren"
    },
    "2453": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "children"
    },
    "2454": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "parentPath"
    },
    "2455": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "createRoutesStub"
    },
    "2456": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "createRoutesStub"
    },
    "2457": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "routes"
    },
    "2458": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "context"
    },
    "2459": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStub"
    },
    "2460": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "RoutesTestStub"
    },
    "2461": {
      "sourceFileName": "packages/react-router/lib/dom/ssr/routes-test-stub.tsx",
      "qualifiedName": "__0"
    },
    "2462": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "createSearchParams"
    },
    "2463": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "createSearchParams"
    },
    "2464": {
      "sourceFileName": "packages/react-router/lib/dom/dom.ts",
      "qualifiedName": "init"
    },
    "2465": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "createSession"
    },
    "2466": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "createSession"
    },
    "2467": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Data"
    },
    "2468": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "FlashData"
    },
    "2469": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "initialData"
    },
    "2470": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "id"
    },
    "2471": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "createSessionStorageFactory"
    },
    "2472": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "createSessionStorageFactory"
    },
    "2473": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "createCookie"
    },
    "2474": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "createStaticHandler"
    },
    "2475": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "createStaticHandler"
    },
    "2476": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "routes"
    },
    "2477": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "opts"
    },
    "2478": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "createStaticRouter"
    },
    "2479": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "createStaticRouter"
    },
    "2480": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "routes"
    },
    "2481": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "context"
    },
    "2482": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "opts"
    },
    "2483": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "__type"
    },
    "2484": {
      "sourceFileName": "packages/react-router/lib/dom/server.tsx",
      "qualifiedName": "__type.future"
    },
    "2485": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "defer"
    },
    "2486": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "defer"
    },
    "2487": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "data"
    },
    "2488": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "init"
    },
    "2489": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "defineRoute"
    },
    "2490": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "defineRoute"
    },
    "2491": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "T"
    },
    "2492": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "Param"
    },
    "2493": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "ClientLoaderHydrate"
    },
    "2494": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "HydrateFallback"
    },
    "2495": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "ServerLoaderData"
    },
    "2496": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "ClientLoaderData"
    },
    "2497": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "ServerActionData"
    },
    "2498": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "ClientActionData"
    },
    "2499": {
      "sourceFileName": "packages/react-router/lib/router/define-route.ts",
      "qualifiedName": "route"
    },
    "2500": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "generatePath"
    },
    "2501": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "generatePath"
    },
    "2502": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Path"
    },
    "2503": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "originalPath"
    },
    "2504": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "params"
    },
    "2505": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "getStaticContextFromError"
    },
    "2506": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "getStaticContextFromError"
    },
    "2507": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "routes"
    },
    "2508": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "context"
    },
    "2509": {
      "sourceFileName": "packages/react-router/lib/router/router.ts",
      "qualifiedName": "error"
    },
    "2510": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "isCookie"
    },
    "2511": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "isCookie"
    },
    "2512": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "object"
    },
    "2513": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "isRouteErrorResponse"
    },
    "2514": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "isRouteErrorResponse"
    },
    "2515": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "error"
    },
    "2516": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "isSession"
    },
    "2517": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "isSession"
    },
    "2518": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "object"
    },
    "2519": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "json"
    },
    "2520": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "json"
    },
    "2521": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Data"
    },
    "2522": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "data"
    },
    "2523": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "init"
    },
    "2524": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "matchPath"
    },
    "2525": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "matchPath"
    },
    "2526": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "ParamKey"
    },
    "2527": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "Path"
    },
    "2528": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "pattern"
    },
    "2529": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "pathname"
    },
    "2530": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "matchRoutes"
    },
    "2531": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "matchRoutes"
    },
    "2532": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "RouteObjectType"
    },
    "2533": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "routes"
    },
    "2534": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "locationArg"
    },
    "2535": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "basename"
    },
    "2536": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "parsePath"
    },
    "2537": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "parsePath"
    },
    "2538": {
      "sourceFileName": "packages/react-router/lib/router/history.ts",
      "qualifiedName": "path"
    },
    "2539": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "redirect"
    },
    "2540": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "redirect"
    },
    "2541": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "url"
    },
    "2542": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "init"
    },
    "2543": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "redirectDocument"
    },
    "2544": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "redirectDocument"
    },
    "2545": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "url"
    },
    "2546": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "init"
    },
    "2547": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "renderMatches"
    },
    "2548": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "renderMatches"
    },
    "2549": {
      "sourceFileName": "packages/react-router/lib/components.tsx",
      "qualifiedName": "matches"
    },
    "2550": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "resolvePath"
    },
    "2551": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "resolvePath"
    },
    "2552": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "to"
    },
    "2553": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "fromPathname"
    },
    "2554": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "stripBasename"
    },
    "2555": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "stripBasename"
    },
    "2556": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "pathname"
    },
    "2557": {
      "sourceFileName": "packages/react-router/lib/router/utils.ts",
      "qualifiedName": "basename"
    },
    "2558": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouter"
    },
    "2559": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouter.displayName"
    },
    "2560": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "HistoryRouter"
    },
    "2561": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2562": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "composeUploadHandlers"
    },
    "2563": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "composeUploadHandlers"
    },
    "2564": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "handlers"
    },
    "2565": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "createMemoryUploadHandler"
    },
    "2566": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "createMemoryUploadHandler"
    },
    "2567": {
      "sourceFileName": "packages/react-router/lib/server-runtime/upload/memoryUploadHandler.ts",
      "qualifiedName": "__0"
    },
    "2568": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "parseMultipartFormData"
    },
    "2569": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "parseMultipartFormData"
    },
    "2570": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "request"
    },
    "2571": {
      "sourceFileName": "packages/react-router/lib/server-runtime/formData.ts",
      "qualifiedName": "uploadHandler"
    },
    "2572": {
      "sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
      "qualifiedName": "setDevServerHooks"
    },
    "2573": {
      "sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
      "qualifiedName": "setDevServerHooks"
    },
    "2574": {
      "sourceFileName": "packages/react-router/lib/server-runtime/dev.ts",
      "qualifiedName": "devServerHooks"
    },
    "2575": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "usePrompt"
    },
    "2576": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "usePrompt"
    },
    "2577": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2578": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2579": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.message"
    },
    "2580": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.when"
    },
    "2581": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useViewTransitionState"
    },
    "2582": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useViewTransitionState"
    },
    "2583": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "to"
    },
    "2584": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "opts"
    },
    "2585": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2586": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.relative"
    },
    "2587": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useActionData"
    },
    "2588": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useActionData"
    },
    "2589": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useAsyncError"
    },
    "2590": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useAsyncError"
    },
    "2591": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useAsyncValue"
    },
    "2592": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useAsyncValue"
    },
    "2593": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useBeforeUnload"
    },
    "2594": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useBeforeUnload"
    },
    "2595": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "callback"
    },
    "2596": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2597": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2598": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "event"
    },
    "2599": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "options"
    },
    "2600": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2601": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.capture"
    },
    "2602": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useBlocker"
    },
    "2603": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useBlocker"
    },
    "2604": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "shouldBlock"
    },
    "2605": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useFetcher"
    },
    "2606": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useFetcher"
    },
    "2607": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "TData"
    },
    "2608": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__0"
    },
    "2609": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2610": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.key"
    },
    "2611": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useFetchers"
    },
    "2612": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useFetchers"
    },
    "2613": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2614": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.key"
    },
    "2615": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useFormAction"
    },
    "2616": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useFormAction"
    },
    "2617": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "action"
    },
    "2618": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__1"
    },
    "2619": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2620": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.relative"
    },
    "2621": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useHref"
    },
    "2622": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useHref"
    },
    "2623": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "to"
    },
    "2624": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__1"
    },
    "2625": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__type"
    },
    "2626": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__type.relative"
    },
    "2627": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useInRouterContext"
    },
    "2628": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useInRouterContext"
    },
    "2629": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useLinkClickHandler"
    },
    "2630": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useLinkClickHandler"
    },
    "2631": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "E"
    },
    "2632": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "to"
    },
    "2633": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__1"
    },
    "2634": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2635": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.preventScrollReset"
    },
    "2636": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.relative"
    },
    "2637": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.replace"
    },
    "2638": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.state"
    },
    "2639": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.target"
    },
    "2640": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type.unstable_viewTransition"
    },
    "2641": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2642": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "__type"
    },
    "2643": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "event"
    },
    "2644": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useLoaderData"
    },
    "2645": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useLoaderData"
    },
    "2646": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useLocation"
    },
    "2647": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useLocation"
    },
    "2648": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useMatch"
    },
    "2649": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useMatch"
    },
    "2650": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "ParamKey"
    },
    "2651": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "Path"
    },
    "2652": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "pattern"
    },
    "2653": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useMatches"
    },
    "2654": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useMatches"
    },
    "2655": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useNavigate"
    },
    "2656": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useNavigate"
    },
    "2657": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useNavigation"
    },
    "2658": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useNavigation"
    },
    "2659": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useNavigationType"
    },
    "2660": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useNavigationType"
    },
    "2661": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useOutlet"
    },
    "2662": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useOutlet"
    },
    "2663": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "context"
    },
    "2664": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useOutletContext"
    },
    "2665": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useOutletContext"
    },
    "2666": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "Context"
    },
    "2667": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useParams"
    },
    "2668": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useParams"
    },
    "2669": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "ParamsOrKey"
    },
    "2670": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useResolvedPath"
    },
    "2671": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useResolvedPath"
    },
    "2672": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "to"
    },
    "2673": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__1"
    },
    "2674": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__type"
    },
    "2675": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__type.relative"
    },
    "2676": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRevalidator"
    },
    "2677": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRevalidator"
    },
    "2678": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__object"
    },
    "2679": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__object.state"
    },
    "2680": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__object.revalidate"
    },
    "2681": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "__object.revalidate"
    },
    "2682": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRouteError"
    },
    "2683": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRouteError"
    },
    "2684": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRouteLoaderData"
    },
    "2685": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRouteLoaderData"
    },
    "2686": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "routeId"
    },
    "2687": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRoutes"
    },
    "2688": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "useRoutes"
    },
    "2689": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "routes"
    },
    "2690": {
      "sourceFileName": "packages/react-router/lib/hooks.tsx",
      "qualifiedName": "locationArg"
    },
    "2691": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useSearchParams"
    },
    "2692": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useSearchParams"
    },
    "2693": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "defaultInit"
    },
    "2694": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useSubmit"
    },
    "2695": {
      "sourceFileName": "packages/react-router/lib/dom/lib.tsx",
      "qualifiedName": "useSubmit"
    },
    "2696": {
      "sourceFileName": "packages/react-router-dev/index.ts",
      "qualifiedName": ""
    },
    "2697": {
      "sourceFileName": "packages/react-router-dev/cli/index.ts",
      "qualifiedName": ""
    },
    "2698": {
      "sourceFileName": "packages/react-router-dev/cli/run.ts",
      "qualifiedName": "run"
    },
    "2699": {
      "sourceFileName": "packages/react-router-dev/cli/run.ts",
      "qualifiedName": "run"
    },
    "2700": {
      "sourceFileName": "packages/react-router-dev/cli/run.ts",
      "qualifiedName": "argv"
    },
    "2701": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "Manifest"
    },
    "2702": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type"
    },
    "2703": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.entry"
    },
    "2704": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type"
    },
    "2705": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.imports"
    },
    "2706": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.module"
    },
    "2707": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.hmr"
    },
    "2708": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type"
    },
    "2709": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.runtime"
    },
    "2710": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.timestamp"
    },
    "2711": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.routes"
    },
    "2712": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type"
    },
    "2713": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.__index"
    },
    "2715": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type"
    },
    "2716": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.caseSensitive"
    },
    "2717": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.hasAction"
    },
    "2718": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.hasClientAction"
    },
    "2719": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.hasClientLoader"
    },
    "2720": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.hasErrorBoundary"
    },
    "2721": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.hasLoader"
    },
    "2722": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.id"
    },
    "2723": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.imports"
    },
    "2724": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.index"
    },
    "2725": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.module"
    },
    "2726": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.parentId"
    },
    "2727": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.path"
    },
    "2728": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.url"
    },
    "2729": {
      "sourceFileName": "packages/react-router-dev/manifest.ts",
      "qualifiedName": "__type.version"
    },
    "2730": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "BuildManifest"
    },
    "2731": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "Preset"
    },
    "2732": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2733": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.name"
    },
    "2734": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.reactRouterConfig"
    },
    "2735": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2736": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2737": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "args"
    },
    "2738": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2739": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.reactRouterUserConfig"
    },
    "2740": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.reactRouterConfigResolved"
    },
    "2741": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2742": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2743": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "args"
    },
    "2744": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2745": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.reactRouterConfig"
    },
    "2746": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "ServerBundlesFunction"
    },
    "2747": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2748": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2749": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "args"
    },
    "2750": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2751": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.branch"
    },
    "2752": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "VitePluginConfig"
    },
    "2753": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2754": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.appDirectory"
    },
    "2755": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.basename"
    },
    "2756": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.buildDirectory"
    },
    "2757": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.buildEnd"
    },
    "2758": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.future"
    },
    "2759": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2760": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.__index"
    },
    "2762": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.ignoredRouteFiles"
    },
    "2763": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.prerender"
    },
    "2764": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2765": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2766": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.presets"
    },
    "2767": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.routes"
    },
    "2768": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2769": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type"
    },
    "2770": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "defineRoutes"
    },
    "2771": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.serverBuildFile"
    },
    "2772": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.serverBundles"
    },
    "2773": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.serverModuleFormat"
    },
    "2774": {
      "sourceFileName": "packages/react-router-dev/config.ts",
      "qualifiedName": "__type.ssr"
    },
    "2775": {
      "sourceFileName": "packages/react-router-dev/vite/index.ts",
      "qualifiedName": "vitePlugin"
    },
    "2776": {
      "sourceFileName": "packages/react-router-dev/vite/plugin.ts",
      "qualifiedName": "vitePlugin"
    },
    "2777": {
      "sourceFileName": "packages/react-router-dev/vite/plugin.ts",
      "qualifiedName": "config"
    },
    "2779": {
      "sourceFileName": "packages/react-router-express/index.ts",
      "qualifiedName": ""
    },
    "2780": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "GetLoadContextFunction"
    },
    "2781": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2782": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2783": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "req"
    },
    "2784": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "res"
    },
    "2785": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "RequestHandler"
    },
    "2786": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2787": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2788": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "req"
    },
    "2789": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "res"
    },
    "2790": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "next"
    },
    "2791": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "createRequestHandler"
    },
    "2792": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "createRequestHandler"
    },
    "2793": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__0"
    },
    "2794": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2795": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type.build"
    },
    "2796": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2797": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type"
    },
    "2798": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type.getLoadContext"
    },
    "2799": {
      "sourceFileName": "packages/react-router-express/server.ts",
      "qualifiedName": "__type.mode"
    },
    "2800": {
      "sourceFileName": "packages/react-router-node/index.ts",
      "qualifiedName": ""
    },
    "2801": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile"
    },
    "2802": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.__constructor"
    },
    "2803": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile"
    },
    "2804": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "filepath"
    },
    "2805": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "type"
    },
    "2806": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "slicer"
    },
    "2807": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__type"
    },
    "2808": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__type.end"
    },
    "2809": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__type.start"
    },
    "2810": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.filepath"
    },
    "2811": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.lastModified"
    },
    "2812": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.name"
    },
    "2813": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.prototype"
    },
    "2814": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.slicer"
    },
    "2815": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__type"
    },
    "2816": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__type.end"
    },
    "2817": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__type.start"
    },
    "2818": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.type"
    },
    "2819": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.webkitRelativePath"
    },
    "2820": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.[toStringTag]"
    },
    "2821": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.[toStringTag]"
    },
    "2822": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.size"
    },
    "2823": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.size"
    },
    "2824": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.arrayBuffer"
    },
    "2825": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.arrayBuffer"
    },
    "2826": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.getFilePath"
    },
    "2827": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.getFilePath"
    },
    "2828": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.remove"
    },
    "2829": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.remove"
    },
    "2830": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.slice"
    },
    "2831": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.slice"
    },
    "2832": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "start"
    },
    "2833": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "end"
    },
    "2834": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "type"
    },
    "2835": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.stream"
    },
    "2836": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.stream"
    },
    "2837": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.stream"
    },
    "2838": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.text"
    },
    "2839": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "NodeOnDiskFile.text"
    },
    "2840": {
      "sourceFileName": "packages/react-router-node/implementations.ts",
      "qualifiedName": "createCookie"
    },
    "2841": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "createCookie"
    },
    "2842": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "name"
    },
    "2843": {
      "sourceFileName": "packages/react-router/lib/server-runtime/cookies.ts",
      "qualifiedName": "cookieOptions"
    },
    "2844": {
      "sourceFileName": "packages/react-router-node/implementations.ts",
      "qualifiedName": "createCookieSessionStorage"
    },
    "2845": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "createCookieSessionStorage"
    },
    "2846": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "Data"
    },
    "2847": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "FlashData"
    },
    "2848": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/cookieStorage.ts",
      "qualifiedName": "options"
    },
    "2849": {
      "sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
      "qualifiedName": "createFileSessionStorage"
    },
    "2850": {
      "sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
      "qualifiedName": "createFileSessionStorage"
    },
    "2851": {
      "sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
      "qualifiedName": "Data"
    },
    "2852": {
      "sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
      "qualifiedName": "FlashData"
    },
    "2853": {
      "sourceFileName": "packages/react-router-node/sessions/fileStorage.ts",
      "qualifiedName": "__0"
    },
    "2854": {
      "sourceFileName": "packages/react-router-node/implementations.ts",
      "qualifiedName": "createMemorySessionStorage"
    },
    "2855": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "createMemorySessionStorage"
    },
    "2856": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "Data"
    },
    "2857": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "FlashData"
    },
    "2858": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions/memoryStorage.ts",
      "qualifiedName": "options"
    },
    "2859": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "createReadableStreamFromReadable"
    },
    "2860": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "createReadableStreamFromReadable"
    },
    "2861": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "source"
    },
    "2862": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "__type"
    },
    "2863": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "__type.readableHighWaterMark"
    },
    "2864": {
      "sourceFileName": "packages/react-router-node/implementations.ts",
      "qualifiedName": "createSessionStorage"
    },
    "2865": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "createSessionStorage"
    },
    "2866": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "Data"
    },
    "2867": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "FlashData"
    },
    "2868": {
      "sourceFileName": "packages/react-router/lib/server-runtime/sessions.ts",
      "qualifiedName": "strategy"
    },
    "2869": {
      "sourceFileName": "packages/react-router-node/globals.ts",
      "qualifiedName": "installGlobals"
    },
    "2870": {
      "sourceFileName": "packages/react-router-node/globals.ts",
      "qualifiedName": "installGlobals"
    },
    "2871": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "readableStreamToString"
    },
    "2872": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "readableStreamToString"
    },
    "2873": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "stream"
    },
    "2874": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "encoding"
    },
    "2875": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "createFileUploadHandler"
    },
    "2876": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "createFileUploadHandler"
    },
    "2877": {
      "sourceFileName": "packages/react-router-node/upload/fileUploadHandler.ts",
      "qualifiedName": "__0"
    },
    "2878": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "writeAsyncIterableToWritable"
    },
    "2879": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "writeAsyncIterableToWritable"
    },
    "2880": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "iterable"
    },
    "2881": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "writable"
    },
    "2882": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "writeReadableStreamToWritable"
    },
    "2883": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "writeReadableStreamToWritable"
    },
    "2884": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "stream"
    },
    "2885": {
      "sourceFileName": "packages/react-router-node/stream.ts",
      "qualifiedName": "writable"
    },
    "2886": {
      "sourceFileName": "packages/react-router-serve/cli.ts",
      "qualifiedName": ""
    }
  }
}
